// File generated from our OpenAPI spec by Stainless.

package com.unifieddatalibrary.api.services.async

import com.unifieddatalibrary.api.TestServerExtension
import com.unifieddatalibrary.api.client.okhttp.UnifieddatalibraryOkHttpClientAsync
import com.unifieddatalibrary.api.models.crew.CrewCountParams
import com.unifieddatalibrary.api.models.crew.CrewCreateParams
import com.unifieddatalibrary.api.models.crew.CrewRetrieveParams
import com.unifieddatalibrary.api.models.crew.CrewTupleParams
import com.unifieddatalibrary.api.models.crew.CrewUnvalidatedPublishParams
import com.unifieddatalibrary.api.models.crew.CrewUpdateParams
import java.time.OffsetDateTime
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.extension.ExtendWith

@ExtendWith(TestServerExtension::class)
internal class CrewServiceAsyncTest {

    @Test
    fun create() {
        val client =
            UnifieddatalibraryOkHttpClientAsync.builder()
                .baseUrl(TestServerExtension.BASE_URL)
                .password("My Password")
                .username("My Username")
                .build()
        val crewServiceAsync = client.crew()

        val future =
            crewServiceAsync.create(
                CrewCreateParams.builder()
                    .classificationMarking("U")
                    .dataMode(CrewCreateParams.DataMode.TEST)
                    .origCrewId("JHJDHjhuu929o92")
                    .source("Bluestaq")
                    .id("bdad6945-c9e4-b829-f7be-1ad075541921")
                    .adjReturnTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .adjReturnTimeApprover("Smith")
                    .aircraftMds("C017A")
                    .alertedTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                    .alertType("ALPHA")
                    .armsCrewUnit("00016ALSQ")
                    .addAssignedQualCode("AL")
                    .addAssignedQualCode("CS")
                    .commanderId("763a1c1e8d2f3c16af825a11e3f1f579")
                    .commanderLast4Ssn("1234")
                    .commanderName("John Doe")
                    .createdAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .crewHome(false)
                    .addCrewMember(
                        CrewCreateParams.CrewMember.builder()
                            .alerted(true)
                            .allSortie(true)
                            .approved(true)
                            .attached(true)
                            .branch("Air Force")
                            .civilian(false)
                            .commander(false)
                            .crewPosition("EP A")
                            .dodId("0123456789")
                            .dutyPosition("IP")
                            .dutyStatus("AGR")
                            .emailed(true)
                            .extraTime(true)
                            .firstName("Freddie")
                            .fltCurrencyExp(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .fltCurrencyExpId("SS05AM")
                            .fltRecDate(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .fltRecDue(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .flySquadron("141ARS")
                            .funded(true)
                            .gender("F")
                            .gndCurrencyExp(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .gndCurrencyExpId("AH03YM")
                            .grounded(true)
                            .guestStart(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .guestStop(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .last4Ssn("1234")
                            .lastFltDate(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .lastName("Smith")
                            .loanedTo("Thunderbirds")
                            .lodging("Peterson SFB")
                            .memberActualAlertTime(OffsetDateTime.parse("2024-02-26T09:15:00.123Z"))
                            .memberAdjReturnTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .memberAdjReturnTimeApprover("Smith")
                            .memberId("12345678abc")
                            .memberInitStartTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .memberLastAlertTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .memberLegalAlertTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .memberPickupTime(OffsetDateTime.parse("2024-02-26T10:15:00.123Z"))
                            .memberPostRestOffset("+05:00")
                            .memberPostRestTime(OffsetDateTime.parse("2024-01-02T16:00:00.123Z"))
                            .memberPreRestTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .memberRemarks("Crew member remark")
                            .memberReturnTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .memberSchedAlertTime(OffsetDateTime.parse("2024-02-26T09:15:00.123Z"))
                            .memberSource("ACTIVE")
                            .memberStageName("Falcon Squadron")
                            .memberTransportReq(true)
                            .memberType("AIRCREW")
                            .middleInitial("G")
                            .notified(true)
                            .phoneNumber("+14155552671")
                            .physAvCode("D")
                            .physAvStatus("OVERDUE")
                            .physDue(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .rank("Capt")
                            .remarkCode("ABE33")
                            .rmsMds("C017A")
                            .showTime(OffsetDateTime.parse("2024-02-26T10:15:00.123Z"))
                            .squadron("21AS")
                            .trainingDate(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .username("fgsmith")
                            .wing("60AMW")
                            .build()
                    )
                    .crewName("falcon")
                    .crewRms("ARMS")
                    .crewRole("DEADHEAD")
                    .crewSource("ACTIVE")
                    .crewSquadron("21AS")
                    .crewType("AIRLAND")
                    .crewUnit("00016ALSQ")
                    .crewWing("60AMW")
                    .currentIcao("KCOS")
                    .fdpEligType("A")
                    .fdpType("A")
                    .femaleEnlistedQty(2)
                    .femaleOfficerQty(1)
                    .fltAuthNum("KT001")
                    .idSiteCurrent("b677cf3b-d44d-450e-8b8f-d23f997f8778")
                    .idSortie("4ef3d1e8-ab08-ab70-498f-edc479734e5c")
                    .initStartTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .lastAlertTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .legalAlertTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                    .legalBravoTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                    .linkedTask(false)
                    .maleEnlistedQty(3)
                    .maleOfficerQty(1)
                    .missionAlias("PACIFIC DEPLOY / CHAP 3 MOVEMENT")
                    .missionId("AJM123456123")
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("OPS1")
                    .personnelType("AIRCREW")
                    .pickupTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .postRestApplied(false)
                    .postRestEnd(OffsetDateTime.parse("2024-01-02T16:00:00.123Z"))
                    .postRestOffset("+05:00")
                    .preRestApplied(false)
                    .preRestStart(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .addReqQualCode("AL")
                    .addReqQualCode("CS")
                    .returnTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                    .sourceDl("AXE")
                    .stage1Qual("1AXXX")
                    .stage2Qual("2AXXX")
                    .stage3Qual("3AXXX")
                    .stageName("Falcon Squadron")
                    .stageTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .status("APPROVED")
                    .transportReq(true)
                    .tripKit("TK-1234")
                    .updatedAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                    .updatedBy("some.user")
                    .build()
            )

        val response = future.get()
    }

    @Test
    fun retrieve() {
        val client =
            UnifieddatalibraryOkHttpClientAsync.builder()
                .baseUrl(TestServerExtension.BASE_URL)
                .password("My Password")
                .username("My Username")
                .build()
        val crewServiceAsync = client.crew()

        val crewFullFuture =
            crewServiceAsync.retrieve(
                CrewRetrieveParams.builder().id("id").firstResult(0L).maxResults(0L).build()
            )

        val crewFull = crewFullFuture.get()
        crewFull.validate()
    }

    @Test
    fun update() {
        val client =
            UnifieddatalibraryOkHttpClientAsync.builder()
                .baseUrl(TestServerExtension.BASE_URL)
                .password("My Password")
                .username("My Username")
                .build()
        val crewServiceAsync = client.crew()

        val future =
            crewServiceAsync.update(
                CrewUpdateParams.builder()
                    .pathId("id")
                    .classificationMarking("U")
                    .dataMode(CrewUpdateParams.DataMode.TEST)
                    .origCrewId("JHJDHjhuu929o92")
                    .source("Bluestaq")
                    .bodyId("bdad6945-c9e4-b829-f7be-1ad075541921")
                    .adjReturnTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .adjReturnTimeApprover("Smith")
                    .aircraftMds("C017A")
                    .alertedTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                    .alertType("ALPHA")
                    .armsCrewUnit("00016ALSQ")
                    .addAssignedQualCode("AL")
                    .addAssignedQualCode("CS")
                    .commanderId("763a1c1e8d2f3c16af825a11e3f1f579")
                    .commanderLast4Ssn("1234")
                    .commanderName("John Doe")
                    .createdAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .crewHome(false)
                    .addCrewMember(
                        CrewUpdateParams.CrewMember.builder()
                            .alerted(true)
                            .allSortie(true)
                            .approved(true)
                            .attached(true)
                            .branch("Air Force")
                            .civilian(false)
                            .commander(false)
                            .crewPosition("EP A")
                            .dodId("0123456789")
                            .dutyPosition("IP")
                            .dutyStatus("AGR")
                            .emailed(true)
                            .extraTime(true)
                            .firstName("Freddie")
                            .fltCurrencyExp(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .fltCurrencyExpId("SS05AM")
                            .fltRecDate(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .fltRecDue(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .flySquadron("141ARS")
                            .funded(true)
                            .gender("F")
                            .gndCurrencyExp(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .gndCurrencyExpId("AH03YM")
                            .grounded(true)
                            .guestStart(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .guestStop(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .last4Ssn("1234")
                            .lastFltDate(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .lastName("Smith")
                            .loanedTo("Thunderbirds")
                            .lodging("Peterson SFB")
                            .memberActualAlertTime(OffsetDateTime.parse("2024-02-26T09:15:00.123Z"))
                            .memberAdjReturnTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .memberAdjReturnTimeApprover("Smith")
                            .memberId("12345678abc")
                            .memberInitStartTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .memberLastAlertTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .memberLegalAlertTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .memberPickupTime(OffsetDateTime.parse("2024-02-26T10:15:00.123Z"))
                            .memberPostRestOffset("+05:00")
                            .memberPostRestTime(OffsetDateTime.parse("2024-01-02T16:00:00.123Z"))
                            .memberPreRestTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .memberRemarks("Crew member remark")
                            .memberReturnTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .memberSchedAlertTime(OffsetDateTime.parse("2024-02-26T09:15:00.123Z"))
                            .memberSource("ACTIVE")
                            .memberStageName("Falcon Squadron")
                            .memberTransportReq(true)
                            .memberType("AIRCREW")
                            .middleInitial("G")
                            .notified(true)
                            .phoneNumber("+14155552671")
                            .physAvCode("D")
                            .physAvStatus("OVERDUE")
                            .physDue(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .rank("Capt")
                            .remarkCode("ABE33")
                            .rmsMds("C017A")
                            .showTime(OffsetDateTime.parse("2024-02-26T10:15:00.123Z"))
                            .squadron("21AS")
                            .trainingDate(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .username("fgsmith")
                            .wing("60AMW")
                            .build()
                    )
                    .crewName("falcon")
                    .crewRms("ARMS")
                    .crewRole("DEADHEAD")
                    .crewSource("ACTIVE")
                    .crewSquadron("21AS")
                    .crewType("AIRLAND")
                    .crewUnit("00016ALSQ")
                    .crewWing("60AMW")
                    .currentIcao("KCOS")
                    .fdpEligType("A")
                    .fdpType("A")
                    .femaleEnlistedQty(2)
                    .femaleOfficerQty(1)
                    .fltAuthNum("KT001")
                    .idSiteCurrent("b677cf3b-d44d-450e-8b8f-d23f997f8778")
                    .idSortie("4ef3d1e8-ab08-ab70-498f-edc479734e5c")
                    .initStartTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .lastAlertTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .legalAlertTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                    .legalBravoTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                    .linkedTask(false)
                    .maleEnlistedQty(3)
                    .maleOfficerQty(1)
                    .missionAlias("PACIFIC DEPLOY / CHAP 3 MOVEMENT")
                    .missionId("AJM123456123")
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("OPS1")
                    .personnelType("AIRCREW")
                    .pickupTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .postRestApplied(false)
                    .postRestEnd(OffsetDateTime.parse("2024-01-02T16:00:00.123Z"))
                    .postRestOffset("+05:00")
                    .preRestApplied(false)
                    .preRestStart(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .addReqQualCode("AL")
                    .addReqQualCode("CS")
                    .returnTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                    .sourceDl("AXE")
                    .stage1Qual("1AXXX")
                    .stage2Qual("2AXXX")
                    .stage3Qual("3AXXX")
                    .stageName("Falcon Squadron")
                    .stageTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .status("APPROVED")
                    .transportReq(true)
                    .tripKit("TK-1234")
                    .updatedAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                    .updatedBy("some.user")
                    .build()
            )

        val response = future.get()
    }

    @Test
    fun list() {
        val client =
            UnifieddatalibraryOkHttpClientAsync.builder()
                .baseUrl(TestServerExtension.BASE_URL)
                .password("My Password")
                .username("My Username")
                .build()
        val crewServiceAsync = client.crew()

        val pageFuture = crewServiceAsync.list()

        val page = pageFuture.get()
        page.items().forEach { it.validate() }
    }

    @Test
    fun count() {
        val client =
            UnifieddatalibraryOkHttpClientAsync.builder()
                .baseUrl(TestServerExtension.BASE_URL)
                .password("My Password")
                .username("My Username")
                .build()
        val crewServiceAsync = client.crew()

        val responseFuture =
            crewServiceAsync.count(CrewCountParams.builder().firstResult(0L).maxResults(0L).build())

        val response = responseFuture.get()
    }

    @Test
    fun queryhelp() {
        val client =
            UnifieddatalibraryOkHttpClientAsync.builder()
                .baseUrl(TestServerExtension.BASE_URL)
                .password("My Password")
                .username("My Username")
                .build()
        val crewServiceAsync = client.crew()

        val responseFuture = crewServiceAsync.queryhelp()

        val response = responseFuture.get()
        response.validate()
    }

    @Test
    fun tuple() {
        val client =
            UnifieddatalibraryOkHttpClientAsync.builder()
                .baseUrl(TestServerExtension.BASE_URL)
                .password("My Password")
                .username("My Username")
                .build()
        val crewServiceAsync = client.crew()

        val crewFullsFuture =
            crewServiceAsync.tuple(
                CrewTupleParams.builder().columns("columns").firstResult(0L).maxResults(0L).build()
            )

        val crewFulls = crewFullsFuture.get()
        crewFulls.forEach { it.validate() }
    }

    @Test
    fun unvalidatedPublish() {
        val client =
            UnifieddatalibraryOkHttpClientAsync.builder()
                .baseUrl(TestServerExtension.BASE_URL)
                .password("My Password")
                .username("My Username")
                .build()
        val crewServiceAsync = client.crew()

        val future =
            crewServiceAsync.unvalidatedPublish(
                CrewUnvalidatedPublishParams.builder()
                    .addBody(
                        CrewUnvalidatedPublishParams.Body.builder()
                            .classificationMarking("U")
                            .dataMode(CrewUnvalidatedPublishParams.Body.DataMode.TEST)
                            .origCrewId("JHJDHjhuu929o92")
                            .source("Bluestaq")
                            .id("bdad6945-c9e4-b829-f7be-1ad075541921")
                            .adjReturnTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .adjReturnTimeApprover("Smith")
                            .aircraftMds("C017A")
                            .alertedTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                            .alertType("ALPHA")
                            .armsCrewUnit("00016ALSQ")
                            .addAssignedQualCode("AL")
                            .addAssignedQualCode("CS")
                            .commanderId("763a1c1e8d2f3c16af825a11e3f1f579")
                            .commanderLast4Ssn("1234")
                            .commanderName("John Doe")
                            .createdAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                            .createdBy("some.user")
                            .crewHome(false)
                            .addCrewMember(
                                CrewUnvalidatedPublishParams.Body.CrewMember.builder()
                                    .alerted(true)
                                    .allSortie(true)
                                    .approved(true)
                                    .attached(true)
                                    .branch("Air Force")
                                    .civilian(false)
                                    .commander(false)
                                    .crewPosition("EP A")
                                    .dodId("0123456789")
                                    .dutyPosition("IP")
                                    .dutyStatus("AGR")
                                    .emailed(true)
                                    .extraTime(true)
                                    .firstName("Freddie")
                                    .fltCurrencyExp(
                                        OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                    )
                                    .fltCurrencyExpId("SS05AM")
                                    .fltRecDate(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                    .fltRecDue(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                    .flySquadron("141ARS")
                                    .funded(true)
                                    .gender("F")
                                    .gndCurrencyExp(
                                        OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                    )
                                    .gndCurrencyExpId("AH03YM")
                                    .grounded(true)
                                    .guestStart(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                    .guestStop(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                    .last4Ssn("1234")
                                    .lastFltDate(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                    .lastName("Smith")
                                    .loanedTo("Thunderbirds")
                                    .lodging("Peterson SFB")
                                    .memberActualAlertTime(
                                        OffsetDateTime.parse("2024-02-26T09:15:00.123Z")
                                    )
                                    .memberAdjReturnTime(
                                        OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                    )
                                    .memberAdjReturnTimeApprover("Smith")
                                    .memberId("12345678abc")
                                    .memberInitStartTime(
                                        OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                    )
                                    .memberLastAlertTime(
                                        OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                    )
                                    .memberLegalAlertTime(
                                        OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                    )
                                    .memberPickupTime(
                                        OffsetDateTime.parse("2024-02-26T10:15:00.123Z")
                                    )
                                    .memberPostRestOffset("+05:00")
                                    .memberPostRestTime(
                                        OffsetDateTime.parse("2024-01-02T16:00:00.123Z")
                                    )
                                    .memberPreRestTime(
                                        OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                    )
                                    .memberRemarks("Crew member remark")
                                    .memberReturnTime(
                                        OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                    )
                                    .memberSchedAlertTime(
                                        OffsetDateTime.parse("2024-02-26T09:15:00.123Z")
                                    )
                                    .memberSource("ACTIVE")
                                    .memberStageName("Falcon Squadron")
                                    .memberTransportReq(true)
                                    .memberType("AIRCREW")
                                    .middleInitial("G")
                                    .notified(true)
                                    .phoneNumber("+14155552671")
                                    .physAvCode("D")
                                    .physAvStatus("OVERDUE")
                                    .physDue(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                    .rank("Capt")
                                    .remarkCode("ABE33")
                                    .rmsMds("C017A")
                                    .showTime(OffsetDateTime.parse("2024-02-26T10:15:00.123Z"))
                                    .squadron("21AS")
                                    .trainingDate(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                    .username("fgsmith")
                                    .wing("60AMW")
                                    .build()
                            )
                            .crewName("falcon")
                            .crewRms("ARMS")
                            .crewRole("DEADHEAD")
                            .crewSource("ACTIVE")
                            .crewSquadron("21AS")
                            .crewType("AIRLAND")
                            .crewUnit("00016ALSQ")
                            .crewWing("60AMW")
                            .currentIcao("KCOS")
                            .fdpEligType("A")
                            .fdpType("A")
                            .femaleEnlistedQty(2)
                            .femaleOfficerQty(1)
                            .fltAuthNum("KT001")
                            .idSiteCurrent("b677cf3b-d44d-450e-8b8f-d23f997f8778")
                            .idSortie("4ef3d1e8-ab08-ab70-498f-edc479734e5c")
                            .initStartTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .lastAlertTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .legalAlertTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                            .legalBravoTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                            .linkedTask(false)
                            .maleEnlistedQty(3)
                            .maleOfficerQty(1)
                            .missionAlias("PACIFIC DEPLOY / CHAP 3 MOVEMENT")
                            .missionId("AJM123456123")
                            .origin("THIRD_PARTY_DATASOURCE")
                            .origNetwork("OPS1")
                            .personnelType("AIRCREW")
                            .pickupTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .postRestApplied(false)
                            .postRestEnd(OffsetDateTime.parse("2024-01-02T16:00:00.123Z"))
                            .postRestOffset("+05:00")
                            .preRestApplied(false)
                            .preRestStart(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .addReqQualCode("AL")
                            .addReqQualCode("CS")
                            .returnTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                            .sourceDl("AXE")
                            .stage1Qual("1AXXX")
                            .stage2Qual("2AXXX")
                            .stage3Qual("3AXXX")
                            .stageName("Falcon Squadron")
                            .stageTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .status("APPROVED")
                            .transportReq(true)
                            .tripKit("TK-1234")
                            .updatedAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                            .updatedBy("some.user")
                            .build()
                    )
                    .build()
            )

        val response = future.get()
    }
}
