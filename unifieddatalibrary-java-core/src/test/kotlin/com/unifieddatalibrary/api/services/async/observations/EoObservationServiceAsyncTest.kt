// File generated from our OpenAPI spec by Stainless.

package com.unifieddatalibrary.api.services.async.observations

import com.unifieddatalibrary.api.TestServerExtension
import com.unifieddatalibrary.api.client.okhttp.UnifieddatalibraryOkHttpClientAsync
import com.unifieddatalibrary.api.models.observations.eoobservations.EoObservationCountParams
import com.unifieddatalibrary.api.models.observations.eoobservations.EoObservationCreateBulkParams
import com.unifieddatalibrary.api.models.observations.eoobservations.EoObservationCreateParams
import com.unifieddatalibrary.api.models.observations.eoobservations.EoObservationListParams
import com.unifieddatalibrary.api.models.observations.eoobservations.EoObservationRetrieveParams
import com.unifieddatalibrary.api.models.observations.eoobservations.EoObservationTupleParams
import com.unifieddatalibrary.api.models.observations.eoobservations.EoObservationUnvalidatedPublishParams
import java.time.OffsetDateTime
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.extension.ExtendWith

@ExtendWith(TestServerExtension::class)
internal class EoObservationServiceAsyncTest {

    @Test
    fun create() {
        val client =
            UnifieddatalibraryOkHttpClientAsync.builder()
                .baseUrl(TestServerExtension.BASE_URL)
                .password("My Password")
                .username("My Username")
                .build()
        val eoObservationServiceAsync = client.observations().eoObservations()

        val future =
            eoObservationServiceAsync.create(
                EoObservationCreateParams.builder()
                    .classificationMarking("U")
                    .dataMode(EoObservationCreateParams.DataMode.TEST)
                    .obTime(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                    .source("Bluestaq")
                    .id("EOOBSERVATION-ID")
                    .azimuth(1.1)
                    .azimuthBias(1.1)
                    .azimuthMeasured(true)
                    .azimuthRate(1.1)
                    .azimuthUnc(1.1)
                    .bgIntensity(1.1)
                    .collectMethod("AUTOTRACK")
                    .corrQuality(1.1)
                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .declination(1.1)
                    .declinationBias(1.1)
                    .declinationMeasured(true)
                    .declinationRate(1.1)
                    .declinationUnc(1.1)
                    .descriptor("PROVIDED_DATA1")
                    .elevation(1.1)
                    .elevationBias(1.1)
                    .elevationMeasured(true)
                    .elevationRate(1.1)
                    .elevationUnc(1.1)
                    .eoobservationDetails(
                        EoObservationCreateParams.EoobservationDetails.builder()
                            .acalCrPixX(123.2)
                            .acalCrPixY(123.2)
                            .acalCrValX(123.2)
                            .acalCrValY(123.2)
                            .acalNumStars(123L)
                            .backgroundSignal(4134.1)
                            .backgroundSignalUnc(123.2)
                            .binningHoriz(12L)
                            .binningVert(14L)
                            .ccdObjPosX(123.3)
                            .ccdObjPosY(321.4)
                            .ccdObjWidth(133.2)
                            .ccdTemp(123.4)
                            .centroidColumn(0.5)
                            .centroidRow(0.1)
                            .classificationMarking("U")
                            .colorCoeffs(listOf(1.1, 2.1, 3.1))
                            .columnVariance(0.1)
                            .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .createdBy("some.user")
                            .currentNeutralDensityFilterNum(3L)
                            .currentSpectralFilterNum(23L)
                            .dataMode(EoObservationCreateParams.EoobservationDetails.DataMode.TEST)
                            .declinationCov(123.2)
                            .distFromStreakCenter(listOf(-127.153, -126.153, -125.153))
                            .does(123.2)
                            .extinctionCoeffs(listOf(1.1, 2.1, 3.1))
                            .extinctionCoeffsUnc(listOf(1.1, 2.1, 3.1))
                            .gain(234.2)
                            .idEoObservation("EOOBSERVATION-ID")
                            .ifov(0.2)
                            .magInstrumental(123.3)
                            .magInstrumentalUnc(123.3)
                            .addNeutralDensityFilterName("numNeutralDensityFilters1")
                            .addNeutralDensityFilterName("numNeutralDensityFilters2")
                            .neutralDensityFilterTransmissions(listOf(1.1, 2.1, 3.1))
                            .neutralDensityFilterTransmissionsUnc(listOf(1.1, 2.1, 3.1))
                            .numCatalogStars(123L)
                            .numCorrelatedStars(123L)
                            .numDetectedStars(123L)
                            .numNeutralDensityFilters(12L)
                            .numSpectralFilters(10L)
                            .objSunRange(123.2)
                            .obTime(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                            .opticalCrossSection(123.3)
                            .opticalCrossSectionUnc(123.3)
                            .pcalNumStars(23)
                            .peakApertureCount(123.2)
                            .peakBackgroundCount(321)
                            .phaseAngBisect(123.2)
                            .pixelArrayHeight(23L)
                            .pixelArrayWidth(12L)
                            .pixelMax(256)
                            .pixelMin(12L)
                            .predictedAzimuth(10.1)
                            .predictedDeclination(10.1)
                            .predictedDeclinationUnc(123.2)
                            .predictedElevation(10.1)
                            .predictedRa(10.1)
                            .predictedRaUnc(123.2)
                            .raCov(123.2)
                            .raDeclinationCov(123.2)
                            .rowColCov(0.01)
                            .rowVariance(0.1)
                            .snrEst(13.4)
                            .solarDiskFrac(123.2)
                            .source("Bluestaq")
                            .addSpectralFilter("Keyword1")
                            .addSpectralFilter("Keyword2")
                            .spectralFilterSolarMag(listOf(1.1, 2.1, 3.1))
                            .spectralZmfl(listOf(1.1, 2.1, 3.1))
                            .sunAzimuth(10.1)
                            .sunElevation(10.1)
                            .sunStatePosX(123.3)
                            .sunStatePosY(123.3)
                            .sunStatePosZ(123.3)
                            .sunStateVelX(123.3)
                            .sunStateVelY(123.3)
                            .sunStateVelZ(123.3)
                            .surfBrightness(listOf(21.01, 21.382, 21.725))
                            .surfBrightnessUnc(listOf(0.165, 0.165, 0.165))
                            .timesUnc(13.1)
                            .toes(123.2)
                            .zeroPoints(listOf(1.1, 2.1, 3.1))
                            .zeroPointsUnc(listOf(1.1, 2.1, 3.1))
                            .build()
                    )
                    .expDuration(1.1)
                    .fovCount(1)
                    .fovCountUct(2)
                    .geoalt(1.1)
                    .geolat(1.1)
                    .geolon(1.1)
                    .georange(1.1)
                    .idOnOrbit("ONORBIT-ID")
                    .idSensor("SENSOR-ID")
                    .idSkyImagery("SKYIMAGERY-ID")
                    .intensity(1.1)
                    .losUnc(1.1)
                    .losx(1.1)
                    .losxvel(1.1)
                    .losy(1.1)
                    .losyvel(1.1)
                    .losz(1.1)
                    .loszvel(1.1)
                    .mag(1.1)
                    .magNormRange(1.1)
                    .magUnc(1.1)
                    .netObjSig(1.1)
                    .netObjSigUnc(1.1)
                    .obPosition("FIRST")
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("OPS1")
                    .origObjectId("ORIGOBJECT-ID")
                    .origSensorId("ORIGSENSOR-ID")
                    .penumbra(false)
                    .primaryExtinction(1.1)
                    .primaryExtinctionUnc(1.1)
                    .ra(1.1)
                    .raBias(1.1)
                    .raMeasured(true)
                    .range(1.1)
                    .rangeBias(1.1)
                    .rangeMeasured(true)
                    .rangeRate(1.1)
                    .rangeRateMeasured(true)
                    .rangeRateUnc(1.1)
                    .rangeUnc(1.1)
                    .raRate(1.1)
                    .raUnc(1.1)
                    .rawFileUri("Example URI")
                    .referenceFrame(EoObservationCreateParams.ReferenceFrame.J2000)
                    .satNo(5)
                    .senalt(1.1)
                    .senlat(45.1)
                    .senlon(179.1)
                    .senQuat(listOf(0.4492, 0.02, 0.8765, 0.2213))
                    .senReferenceFrame(EoObservationCreateParams.SenReferenceFrame.J2000)
                    .senvelx(1.1)
                    .senvely(1.1)
                    .senvelz(1.1)
                    .senx(1.1)
                    .seny(1.1)
                    .senz(1.1)
                    .shutterDelay(1.1)
                    .skyBkgrnd(1.1)
                    .solarDecAngle(1.1)
                    .solarEqPhaseAngle(1.1)
                    .solarPhaseAngle(1.1)
                    .sourceDl("AXE")
                    .addTag("PROVIDER_TAG1")
                    .addTag("PROVIDER_TAG2")
                    .taskId("TASK-ID")
                    .timingBias(1.1)
                    .trackId("TRACK-ID")
                    .transactionId("TRANSACTION-ID")
                    .type("OPTICAL")
                    .uct(false)
                    .umbra(false)
                    .zeroptd(1.1)
                    .zeroPtdUnc(1.1)
                    .build()
            )

        val response = future.get()
    }

    @Test
    fun retrieve() {
        val client =
            UnifieddatalibraryOkHttpClientAsync.builder()
                .baseUrl(TestServerExtension.BASE_URL)
                .password("My Password")
                .username("My Username")
                .build()
        val eoObservationServiceAsync = client.observations().eoObservations()

        val eoObservationFullFuture =
            eoObservationServiceAsync.retrieve(
                EoObservationRetrieveParams.builder()
                    .id("id")
                    .firstResult(0L)
                    .maxResults(0L)
                    .build()
            )

        val eoObservationFull = eoObservationFullFuture.get()
        eoObservationFull.validate()
    }

    @Test
    fun list() {
        val client =
            UnifieddatalibraryOkHttpClientAsync.builder()
                .baseUrl(TestServerExtension.BASE_URL)
                .password("My Password")
                .username("My Username")
                .build()
        val eoObservationServiceAsync = client.observations().eoObservations()

        val pageFuture =
            eoObservationServiceAsync.list(
                EoObservationListParams.builder()
                    .obTime(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .build()
            )

        val page = pageFuture.get()
        page.items().forEach { it.validate() }
    }

    @Test
    fun count() {
        val client =
            UnifieddatalibraryOkHttpClientAsync.builder()
                .baseUrl(TestServerExtension.BASE_URL)
                .password("My Password")
                .username("My Username")
                .build()
        val eoObservationServiceAsync = client.observations().eoObservations()

        val responseFuture =
            eoObservationServiceAsync.count(
                EoObservationCountParams.builder()
                    .obTime(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .firstResult(0L)
                    .maxResults(0L)
                    .build()
            )

        val response = responseFuture.get()
    }

    @Test
    fun createBulk() {
        val client =
            UnifieddatalibraryOkHttpClientAsync.builder()
                .baseUrl(TestServerExtension.BASE_URL)
                .password("My Password")
                .username("My Username")
                .build()
        val eoObservationServiceAsync = client.observations().eoObservations()

        val future =
            eoObservationServiceAsync.createBulk(
                EoObservationCreateBulkParams.builder()
                    .convertToJ2K(true)
                    .addBody(
                        EoObservationCreateBulkParams.Body.builder()
                            .classificationMarking("U")
                            .dataMode(EoObservationCreateBulkParams.Body.DataMode.TEST)
                            .obTime(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                            .source("Bluestaq")
                            .id("EOOBSERVATION-ID")
                            .azimuth(1.1)
                            .azimuthBias(1.1)
                            .azimuthMeasured(true)
                            .azimuthRate(1.1)
                            .azimuthUnc(1.1)
                            .bgIntensity(1.1)
                            .collectMethod("AUTOTRACK")
                            .corrQuality(1.1)
                            .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .createdBy("some.user")
                            .declination(1.1)
                            .declinationBias(1.1)
                            .declinationMeasured(true)
                            .declinationRate(1.1)
                            .declinationUnc(1.1)
                            .descriptor("PROVIDED_DATA1")
                            .elevation(1.1)
                            .elevationBias(1.1)
                            .elevationMeasured(true)
                            .elevationRate(1.1)
                            .elevationUnc(1.1)
                            .eoobservationDetails(
                                EoObservationCreateBulkParams.Body.EoobservationDetails.builder()
                                    .acalCrPixX(123.2)
                                    .acalCrPixY(123.2)
                                    .acalCrValX(123.2)
                                    .acalCrValY(123.2)
                                    .acalNumStars(123L)
                                    .backgroundSignal(4134.1)
                                    .backgroundSignalUnc(123.2)
                                    .binningHoriz(12L)
                                    .binningVert(14L)
                                    .ccdObjPosX(123.3)
                                    .ccdObjPosY(321.4)
                                    .ccdObjWidth(133.2)
                                    .ccdTemp(123.4)
                                    .centroidColumn(0.5)
                                    .centroidRow(0.1)
                                    .classificationMarking("U")
                                    .colorCoeffs(listOf(1.1, 2.1, 3.1))
                                    .columnVariance(0.1)
                                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .currentNeutralDensityFilterNum(3L)
                                    .currentSpectralFilterNum(23L)
                                    .dataMode(
                                        EoObservationCreateBulkParams.Body.EoobservationDetails
                                            .DataMode
                                            .TEST
                                    )
                                    .declinationCov(123.2)
                                    .distFromStreakCenter(listOf(-127.153, -126.153, -125.153))
                                    .does(123.2)
                                    .extinctionCoeffs(listOf(1.1, 2.1, 3.1))
                                    .extinctionCoeffsUnc(listOf(1.1, 2.1, 3.1))
                                    .gain(234.2)
                                    .idEoObservation("EOOBSERVATION-ID")
                                    .ifov(0.2)
                                    .magInstrumental(123.3)
                                    .magInstrumentalUnc(123.3)
                                    .addNeutralDensityFilterName("numNeutralDensityFilters1")
                                    .addNeutralDensityFilterName("numNeutralDensityFilters2")
                                    .neutralDensityFilterTransmissions(listOf(1.1, 2.1, 3.1))
                                    .neutralDensityFilterTransmissionsUnc(listOf(1.1, 2.1, 3.1))
                                    .numCatalogStars(123L)
                                    .numCorrelatedStars(123L)
                                    .numDetectedStars(123L)
                                    .numNeutralDensityFilters(12L)
                                    .numSpectralFilters(10L)
                                    .objSunRange(123.2)
                                    .obTime(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                                    .opticalCrossSection(123.3)
                                    .opticalCrossSectionUnc(123.3)
                                    .pcalNumStars(23)
                                    .peakApertureCount(123.2)
                                    .peakBackgroundCount(321)
                                    .phaseAngBisect(123.2)
                                    .pixelArrayHeight(23L)
                                    .pixelArrayWidth(12L)
                                    .pixelMax(256)
                                    .pixelMin(12L)
                                    .predictedAzimuth(10.1)
                                    .predictedDeclination(10.1)
                                    .predictedDeclinationUnc(123.2)
                                    .predictedElevation(10.1)
                                    .predictedRa(10.1)
                                    .predictedRaUnc(123.2)
                                    .raCov(123.2)
                                    .raDeclinationCov(123.2)
                                    .rowColCov(0.01)
                                    .rowVariance(0.1)
                                    .snrEst(13.4)
                                    .solarDiskFrac(123.2)
                                    .source("Bluestaq")
                                    .addSpectralFilter("Keyword1")
                                    .addSpectralFilter("Keyword2")
                                    .spectralFilterSolarMag(listOf(1.1, 2.1, 3.1))
                                    .spectralZmfl(listOf(1.1, 2.1, 3.1))
                                    .sunAzimuth(10.1)
                                    .sunElevation(10.1)
                                    .sunStatePosX(123.3)
                                    .sunStatePosY(123.3)
                                    .sunStatePosZ(123.3)
                                    .sunStateVelX(123.3)
                                    .sunStateVelY(123.3)
                                    .sunStateVelZ(123.3)
                                    .surfBrightness(listOf(21.01, 21.382, 21.725))
                                    .surfBrightnessUnc(listOf(0.165, 0.165, 0.165))
                                    .timesUnc(13.1)
                                    .toes(123.2)
                                    .zeroPoints(listOf(1.1, 2.1, 3.1))
                                    .zeroPointsUnc(listOf(1.1, 2.1, 3.1))
                                    .build()
                            )
                            .expDuration(1.1)
                            .fovCount(1)
                            .fovCountUct(2)
                            .geoalt(1.1)
                            .geolat(1.1)
                            .geolon(1.1)
                            .georange(1.1)
                            .idOnOrbit("ONORBIT-ID")
                            .idSensor("SENSOR-ID")
                            .idSkyImagery("SKYIMAGERY-ID")
                            .intensity(1.1)
                            .losUnc(1.1)
                            .losx(1.1)
                            .losxvel(1.1)
                            .losy(1.1)
                            .losyvel(1.1)
                            .losz(1.1)
                            .loszvel(1.1)
                            .mag(1.1)
                            .magNormRange(1.1)
                            .magUnc(1.1)
                            .netObjSig(1.1)
                            .netObjSigUnc(1.1)
                            .obPosition("FIRST")
                            .origin("THIRD_PARTY_DATASOURCE")
                            .origNetwork("OPS1")
                            .origObjectId("ORIGOBJECT-ID")
                            .origSensorId("ORIGSENSOR-ID")
                            .penumbra(false)
                            .primaryExtinction(1.1)
                            .primaryExtinctionUnc(1.1)
                            .ra(1.1)
                            .raBias(1.1)
                            .raMeasured(true)
                            .range(1.1)
                            .rangeBias(1.1)
                            .rangeMeasured(true)
                            .rangeRate(1.1)
                            .rangeRateMeasured(true)
                            .rangeRateUnc(1.1)
                            .rangeUnc(1.1)
                            .raRate(1.1)
                            .raUnc(1.1)
                            .rawFileUri("Example URI")
                            .referenceFrame(EoObservationCreateBulkParams.Body.ReferenceFrame.J2000)
                            .satNo(5)
                            .senalt(1.1)
                            .senlat(45.1)
                            .senlon(179.1)
                            .senQuat(listOf(0.4492, 0.02, 0.8765, 0.2213))
                            .senReferenceFrame(
                                EoObservationCreateBulkParams.Body.SenReferenceFrame.J2000
                            )
                            .senvelx(1.1)
                            .senvely(1.1)
                            .senvelz(1.1)
                            .senx(1.1)
                            .seny(1.1)
                            .senz(1.1)
                            .shutterDelay(1.1)
                            .skyBkgrnd(1.1)
                            .solarDecAngle(1.1)
                            .solarEqPhaseAngle(1.1)
                            .solarPhaseAngle(1.1)
                            .sourceDl("AXE")
                            .addTag("PROVIDER_TAG1")
                            .addTag("PROVIDER_TAG2")
                            .taskId("TASK-ID")
                            .timingBias(1.1)
                            .trackId("TRACK-ID")
                            .transactionId("TRANSACTION-ID")
                            .type("OPTICAL")
                            .uct(false)
                            .umbra(false)
                            .zeroptd(1.1)
                            .zeroPtdUnc(1.1)
                            .build()
                    )
                    .build()
            )

        val response = future.get()
    }

    @Test
    fun queryhelp() {
        val client =
            UnifieddatalibraryOkHttpClientAsync.builder()
                .baseUrl(TestServerExtension.BASE_URL)
                .password("My Password")
                .username("My Username")
                .build()
        val eoObservationServiceAsync = client.observations().eoObservations()

        val responseFuture = eoObservationServiceAsync.queryhelp()

        val response = responseFuture.get()
        response.validate()
    }

    @Test
    fun tuple() {
        val client =
            UnifieddatalibraryOkHttpClientAsync.builder()
                .baseUrl(TestServerExtension.BASE_URL)
                .password("My Password")
                .username("My Username")
                .build()
        val eoObservationServiceAsync = client.observations().eoObservations()

        val eoObservationFullsFuture =
            eoObservationServiceAsync.tuple(
                EoObservationTupleParams.builder()
                    .columns("columns")
                    .obTime(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .firstResult(0L)
                    .maxResults(0L)
                    .build()
            )

        val eoObservationFulls = eoObservationFullsFuture.get()
        eoObservationFulls.forEach { it.validate() }
    }

    @Test
    fun unvalidatedPublish() {
        val client =
            UnifieddatalibraryOkHttpClientAsync.builder()
                .baseUrl(TestServerExtension.BASE_URL)
                .password("My Password")
                .username("My Username")
                .build()
        val eoObservationServiceAsync = client.observations().eoObservations()

        val future =
            eoObservationServiceAsync.unvalidatedPublish(
                EoObservationUnvalidatedPublishParams.builder()
                    .addBody(
                        EoObservationUnvalidatedPublishParams.Body.builder()
                            .classificationMarking("U")
                            .dataMode(EoObservationUnvalidatedPublishParams.Body.DataMode.TEST)
                            .obTime(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                            .source("Bluestaq")
                            .id("EOOBSERVATION-ID")
                            .azimuth(1.1)
                            .azimuthBias(1.1)
                            .azimuthMeasured(true)
                            .azimuthRate(1.1)
                            .azimuthUnc(1.1)
                            .bgIntensity(1.1)
                            .collectMethod("AUTOTRACK")
                            .corrQuality(1.1)
                            .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .createdBy("some.user")
                            .declination(1.1)
                            .declinationBias(1.1)
                            .declinationMeasured(true)
                            .declinationRate(1.1)
                            .declinationUnc(1.1)
                            .descriptor("PROVIDED_DATA1")
                            .elevation(1.1)
                            .elevationBias(1.1)
                            .elevationMeasured(true)
                            .elevationRate(1.1)
                            .elevationUnc(1.1)
                            .eoobservationDetails(
                                EoObservationUnvalidatedPublishParams.Body.EoobservationDetails
                                    .builder()
                                    .acalCrPixX(123.2)
                                    .acalCrPixY(123.2)
                                    .acalCrValX(123.2)
                                    .acalCrValY(123.2)
                                    .acalNumStars(123L)
                                    .backgroundSignal(4134.1)
                                    .backgroundSignalUnc(123.2)
                                    .binningHoriz(12L)
                                    .binningVert(14L)
                                    .ccdObjPosX(123.3)
                                    .ccdObjPosY(321.4)
                                    .ccdObjWidth(133.2)
                                    .ccdTemp(123.4)
                                    .centroidColumn(0.5)
                                    .centroidRow(0.1)
                                    .classificationMarking("U")
                                    .colorCoeffs(listOf(1.1, 2.1, 3.1))
                                    .columnVariance(0.1)
                                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .currentNeutralDensityFilterNum(3L)
                                    .currentSpectralFilterNum(23L)
                                    .dataMode(
                                        EoObservationUnvalidatedPublishParams.Body
                                            .EoobservationDetails
                                            .DataMode
                                            .TEST
                                    )
                                    .declinationCov(123.2)
                                    .distFromStreakCenter(listOf(-127.153, -126.153, -125.153))
                                    .does(123.2)
                                    .extinctionCoeffs(listOf(1.1, 2.1, 3.1))
                                    .extinctionCoeffsUnc(listOf(1.1, 2.1, 3.1))
                                    .gain(234.2)
                                    .idEoObservation("EOOBSERVATION-ID")
                                    .ifov(0.2)
                                    .magInstrumental(123.3)
                                    .magInstrumentalUnc(123.3)
                                    .addNeutralDensityFilterName("numNeutralDensityFilters1")
                                    .addNeutralDensityFilterName("numNeutralDensityFilters2")
                                    .neutralDensityFilterTransmissions(listOf(1.1, 2.1, 3.1))
                                    .neutralDensityFilterTransmissionsUnc(listOf(1.1, 2.1, 3.1))
                                    .numCatalogStars(123L)
                                    .numCorrelatedStars(123L)
                                    .numDetectedStars(123L)
                                    .numNeutralDensityFilters(12L)
                                    .numSpectralFilters(10L)
                                    .objSunRange(123.2)
                                    .obTime(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                                    .opticalCrossSection(123.3)
                                    .opticalCrossSectionUnc(123.3)
                                    .pcalNumStars(23)
                                    .peakApertureCount(123.2)
                                    .peakBackgroundCount(321)
                                    .phaseAngBisect(123.2)
                                    .pixelArrayHeight(23L)
                                    .pixelArrayWidth(12L)
                                    .pixelMax(256)
                                    .pixelMin(12L)
                                    .predictedAzimuth(10.1)
                                    .predictedDeclination(10.1)
                                    .predictedDeclinationUnc(123.2)
                                    .predictedElevation(10.1)
                                    .predictedRa(10.1)
                                    .predictedRaUnc(123.2)
                                    .raCov(123.2)
                                    .raDeclinationCov(123.2)
                                    .rowColCov(0.01)
                                    .rowVariance(0.1)
                                    .snrEst(13.4)
                                    .solarDiskFrac(123.2)
                                    .source("Bluestaq")
                                    .addSpectralFilter("Keyword1")
                                    .addSpectralFilter("Keyword2")
                                    .spectralFilterSolarMag(listOf(1.1, 2.1, 3.1))
                                    .spectralZmfl(listOf(1.1, 2.1, 3.1))
                                    .sunAzimuth(10.1)
                                    .sunElevation(10.1)
                                    .sunStatePosX(123.3)
                                    .sunStatePosY(123.3)
                                    .sunStatePosZ(123.3)
                                    .sunStateVelX(123.3)
                                    .sunStateVelY(123.3)
                                    .sunStateVelZ(123.3)
                                    .surfBrightness(listOf(21.01, 21.382, 21.725))
                                    .surfBrightnessUnc(listOf(0.165, 0.165, 0.165))
                                    .timesUnc(13.1)
                                    .toes(123.2)
                                    .zeroPoints(listOf(1.1, 2.1, 3.1))
                                    .zeroPointsUnc(listOf(1.1, 2.1, 3.1))
                                    .build()
                            )
                            .expDuration(1.1)
                            .fovCount(1)
                            .fovCountUct(2)
                            .geoalt(1.1)
                            .geolat(1.1)
                            .geolon(1.1)
                            .georange(1.1)
                            .idOnOrbit("ONORBIT-ID")
                            .idSensor("SENSOR-ID")
                            .idSkyImagery("SKYIMAGERY-ID")
                            .intensity(1.1)
                            .losUnc(1.1)
                            .losx(1.1)
                            .losxvel(1.1)
                            .losy(1.1)
                            .losyvel(1.1)
                            .losz(1.1)
                            .loszvel(1.1)
                            .mag(1.1)
                            .magNormRange(1.1)
                            .magUnc(1.1)
                            .netObjSig(1.1)
                            .netObjSigUnc(1.1)
                            .obPosition("FIRST")
                            .origin("THIRD_PARTY_DATASOURCE")
                            .origNetwork("OPS1")
                            .origObjectId("ORIGOBJECT-ID")
                            .origSensorId("ORIGSENSOR-ID")
                            .penumbra(false)
                            .primaryExtinction(1.1)
                            .primaryExtinctionUnc(1.1)
                            .ra(1.1)
                            .raBias(1.1)
                            .raMeasured(true)
                            .range(1.1)
                            .rangeBias(1.1)
                            .rangeMeasured(true)
                            .rangeRate(1.1)
                            .rangeRateMeasured(true)
                            .rangeRateUnc(1.1)
                            .rangeUnc(1.1)
                            .raRate(1.1)
                            .raUnc(1.1)
                            .rawFileUri("Example URI")
                            .referenceFrame(
                                EoObservationUnvalidatedPublishParams.Body.ReferenceFrame.J2000
                            )
                            .satNo(5)
                            .senalt(1.1)
                            .senlat(45.1)
                            .senlon(179.1)
                            .senQuat(listOf(0.4492, 0.02, 0.8765, 0.2213))
                            .senReferenceFrame(
                                EoObservationUnvalidatedPublishParams.Body.SenReferenceFrame.J2000
                            )
                            .senvelx(1.1)
                            .senvely(1.1)
                            .senvelz(1.1)
                            .senx(1.1)
                            .seny(1.1)
                            .senz(1.1)
                            .shutterDelay(1.1)
                            .skyBkgrnd(1.1)
                            .solarDecAngle(1.1)
                            .solarEqPhaseAngle(1.1)
                            .solarPhaseAngle(1.1)
                            .sourceDl("AXE")
                            .addTag("PROVIDER_TAG1")
                            .addTag("PROVIDER_TAG2")
                            .taskId("TASK-ID")
                            .timingBias(1.1)
                            .trackId("TRACK-ID")
                            .transactionId("TRANSACTION-ID")
                            .type("OPTICAL")
                            .uct(false)
                            .umbra(false)
                            .zeroptd(1.1)
                            .zeroPtdUnc(1.1)
                            .build()
                    )
                    .build()
            )

        val response = future.get()
    }
}
