// File generated from our OpenAPI spec by Stainless.

package com.unifieddatalibrary.api.services.blocking

import com.unifieddatalibrary.api.TestServerExtension
import com.unifieddatalibrary.api.client.okhttp.UnifieddatalibraryOkHttpClient
import com.unifieddatalibrary.api.models.evac.EvacCountParams
import com.unifieddatalibrary.api.models.evac.EvacCreateBulkParams
import com.unifieddatalibrary.api.models.evac.EvacCreateParams
import com.unifieddatalibrary.api.models.evac.EvacListParams
import com.unifieddatalibrary.api.models.evac.EvacRetrieveParams
import com.unifieddatalibrary.api.models.evac.EvacUnvalidatedPublishParams
import java.time.OffsetDateTime
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.extension.ExtendWith

@ExtendWith(TestServerExtension::class)
internal class EvacServiceTest {

    @Test
    fun create() {
        val client =
            UnifieddatalibraryOkHttpClient.builder()
                .baseUrl(TestServerExtension.BASE_URL)
                .password("My Password")
                .username("My Username")
                .build()
        val evacService = client.evac()

        evacService.create(
            EvacCreateParams.builder()
                .classificationMarking("U")
                .dataMode(EvacCreateParams.DataMode.TEST)
                .pickupLat(75.1234)
                .pickupLon(175.1234)
                .reqTime(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                .source("Bluestaq")
                .type(EvacCreateParams.Type.REQUEST)
                .id("MEDEVACEVENT-ID")
                .addCasualtyInfo(
                    EvacCreateParams.CasualtyInfo.builder()
                        .age(35)
                        .addAllergy(
                            EvacCreateParams.CasualtyInfo.Allergy.builder()
                                .comments("Comments on the patient's allergies.")
                                .type("PENICILLIN")
                                .build()
                        )
                        .bloodType("O NEG")
                        .bodyPart("FACE")
                        .burialLocation(listOf(-33.123, 150.33, 0.24))
                        .callSign("SHARK")
                        .careProviderUrn("CARE_PROVIDER-1")
                        .casualtyKey("casualty-007")
                        .casualtyType("DENTAL")
                        .collectionPoint(listOf(12.44, 122.55, 0.98))
                        .comments("Comments relating to this casualty info.")
                        .addCondition(
                            EvacCreateParams.CasualtyInfo.Condition.builder()
                                .bodyPart("ANKLE LEFT FRONT")
                                .comments("Comments on the patient's condition.")
                                .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                .type("ACTIVITY LOW")
                                .build()
                        )
                        .contamType("NONE")
                        .disposition("EVACUATE WOUNDED")
                        .dispositionType("EVACUATE")
                        .addEtiology(
                            EvacCreateParams.CasualtyInfo.Etiology.builder()
                                .bodyPart("ARM LEFT FRONT")
                                .comments("Comments on the etiology info.")
                                .time(OffsetDateTime.parse("2021-10-16T16:00:00.123Z"))
                                .type("BURN")
                                .build()
                        )
                        .evacType("GROUND")
                        .gender("MALE")
                        .addHealthState(
                            EvacCreateParams.CasualtyInfo.HealthState.builder()
                                .healthStateCode("BLUE")
                                .medConfFactor(1)
                                .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                .type("COGNITIVE")
                                .build()
                        )
                        .addInjury(
                            EvacCreateParams.CasualtyInfo.Injury.builder()
                                .bodyPart("ARM LEFT FRONT")
                                .comments("Comments on the patient's injury.")
                                .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                .type("ABRASION")
                                .build()
                        )
                        .last4Ssn("1234")
                        .addMedication(
                            EvacCreateParams.CasualtyInfo.Medication.builder()
                                .adminRoute("ORAL")
                                .bodyPart("ARM LEFT BACK")
                                .comments("Comments on the patient's medication information.")
                                .dose("800mg")
                                .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                .type("TYLENOL")
                                .build()
                        )
                        .name("John Smith")
                        .nationality("US")
                        .occSpeciality("Healthcare")
                        .patientIdentity("FRIEND CIVILIAN")
                        .patientStatus("US CIVILIAN")
                        .payGrade("CIVILIAN")
                        .priority("ROUTINE")
                        .reportGen("DEVICE")
                        .reportTime(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                        .service("CIV")
                        .addSpecMedEquip("OXYGEN")
                        .addSpecMedEquip("HOIST")
                        .addTreatment(
                            EvacCreateParams.CasualtyInfo.Treatment.builder()
                                .bodyPart("CHEST")
                                .comments("Comments on the treatment info.")
                                .time(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .type("BREATHING CHEST TUBE")
                                .build()
                        )
                        .addVitalSignData(
                            EvacCreateParams.CasualtyInfo.VitalSignData.builder()
                                .medConfFactor(1)
                                .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                .vitalSign("HEART RATE")
                                .vitalSign1(120.0)
                                .vitalSign2(80.0)
                                .build()
                        )
                        .build()
                )
                .ce(10.1234)
                .cntctFreq(3.11)
                .comments("Comments concerning mission")
                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                .createdBy("some.user")
                .addEnemyData(
                    EvacCreateParams.EnemyData.builder()
                        .dirToEnemy("NORTH")
                        .friendliesRemarks("Comments from friendlies.")
                        .hlzRemarks("Remarks about hot landing zone.")
                        .hostileFireType("SMALL ARMS")
                        .build()
                )
                .idWeatherReport("WeatherReport-ID")
                .le(5.1234)
                .medevacId("MedEvac-ID")
                .medicReq(true)
                .missionType("GROUND")
                .numAmbulatory(5)
                .numCasualties(5)
                .numKia(0)
                .numLitter(0)
                .numWia(3)
                .obstaclesRemarks("N/A")
                .origin("THIRD_PARTY_DATASOURCE")
                .origNetwork("OPS1")
                .pickupAlt(30.1234)
                .pickupTime(OffsetDateTime.parse("2021-10-20T16:00:00.123Z"))
                .reqCallSign("Bravo")
                .reqNum("MED.1.223908")
                .terrain("ROCKY")
                .terrainRemarks("N/A")
                .zoneContrCallSign("Tango")
                .zoneHot(false)
                .zoneMarking("ILLUMINATION")
                .zoneMarkingColor("RED")
                .zoneName("example-zone")
                .zoneSecurity("NO ENEMY")
                .build()
        )
    }

    @Test
    fun retrieve() {
        val client =
            UnifieddatalibraryOkHttpClient.builder()
                .baseUrl(TestServerExtension.BASE_URL)
                .password("My Password")
                .username("My Username")
                .build()
        val evacService = client.evac()

        val evacFull =
            evacService.retrieve(
                EvacRetrieveParams.builder().id("id").firstResult(0L).maxResults(0L).build()
            )

        evacFull.validate()
    }

    @Test
    fun list() {
        val client =
            UnifieddatalibraryOkHttpClient.builder()
                .baseUrl(TestServerExtension.BASE_URL)
                .password("My Password")
                .username("My Username")
                .build()
        val evacService = client.evac()

        val page =
            evacService.list(
                EvacListParams.builder()
                    .reqTime(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .build()
            )

        page.items().forEach { it.validate() }
    }

    @Test
    fun count() {
        val client =
            UnifieddatalibraryOkHttpClient.builder()
                .baseUrl(TestServerExtension.BASE_URL)
                .password("My Password")
                .username("My Username")
                .build()
        val evacService = client.evac()

        evacService.count(
            EvacCountParams.builder()
                .reqTime(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                .firstResult(0L)
                .maxResults(0L)
                .build()
        )
    }

    @Test
    fun createBulk() {
        val client =
            UnifieddatalibraryOkHttpClient.builder()
                .baseUrl(TestServerExtension.BASE_URL)
                .password("My Password")
                .username("My Username")
                .build()
        val evacService = client.evac()

        evacService.createBulk(
            EvacCreateBulkParams.builder()
                .addBody(
                    EvacCreateBulkParams.Body.builder()
                        .classificationMarking("U")
                        .dataMode(EvacCreateBulkParams.Body.DataMode.TEST)
                        .pickupLat(75.1234)
                        .pickupLon(175.1234)
                        .reqTime(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                        .source("Bluestaq")
                        .type(EvacCreateBulkParams.Body.Type.REQUEST)
                        .id("MEDEVACEVENT-ID")
                        .addCasualtyInfo(
                            EvacCreateBulkParams.Body.CasualtyInfo.builder()
                                .age(35)
                                .addAllergy(
                                    EvacCreateBulkParams.Body.CasualtyInfo.Allergy.builder()
                                        .comments("Comments on the patient's allergies.")
                                        .type("PENICILLIN")
                                        .build()
                                )
                                .bloodType("O NEG")
                                .bodyPart("FACE")
                                .burialLocation(listOf(-33.123, 150.33, 0.24))
                                .callSign("SHARK")
                                .careProviderUrn("CARE_PROVIDER-1")
                                .casualtyKey("casualty-007")
                                .casualtyType("DENTAL")
                                .collectionPoint(listOf(12.44, 122.55, 0.98))
                                .comments("Comments relating to this casualty info.")
                                .addCondition(
                                    EvacCreateBulkParams.Body.CasualtyInfo.Condition.builder()
                                        .bodyPart("ANKLE LEFT FRONT")
                                        .comments("Comments on the patient's condition.")
                                        .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                        .type("ACTIVITY LOW")
                                        .build()
                                )
                                .contamType("NONE")
                                .disposition("EVACUATE WOUNDED")
                                .dispositionType("EVACUATE")
                                .addEtiology(
                                    EvacCreateBulkParams.Body.CasualtyInfo.Etiology.builder()
                                        .bodyPart("ARM LEFT FRONT")
                                        .comments("Comments on the etiology info.")
                                        .time(OffsetDateTime.parse("2021-10-16T16:00:00.123Z"))
                                        .type("BURN")
                                        .build()
                                )
                                .evacType("GROUND")
                                .gender("MALE")
                                .addHealthState(
                                    EvacCreateBulkParams.Body.CasualtyInfo.HealthState.builder()
                                        .healthStateCode("BLUE")
                                        .medConfFactor(1)
                                        .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                        .type("COGNITIVE")
                                        .build()
                                )
                                .addInjury(
                                    EvacCreateBulkParams.Body.CasualtyInfo.Injury.builder()
                                        .bodyPart("ARM LEFT FRONT")
                                        .comments("Comments on the patient's injury.")
                                        .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                        .type("ABRASION")
                                        .build()
                                )
                                .last4Ssn("1234")
                                .addMedication(
                                    EvacCreateBulkParams.Body.CasualtyInfo.Medication.builder()
                                        .adminRoute("ORAL")
                                        .bodyPart("ARM LEFT BACK")
                                        .comments(
                                            "Comments on the patient's medication information."
                                        )
                                        .dose("800mg")
                                        .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                        .type("TYLENOL")
                                        .build()
                                )
                                .name("John Smith")
                                .nationality("US")
                                .occSpeciality("Healthcare")
                                .patientIdentity("FRIEND CIVILIAN")
                                .patientStatus("US CIVILIAN")
                                .payGrade("CIVILIAN")
                                .priority("ROUTINE")
                                .reportGen("DEVICE")
                                .reportTime(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                .service("CIV")
                                .addSpecMedEquip("OXYGEN")
                                .addSpecMedEquip("HOIST")
                                .addTreatment(
                                    EvacCreateBulkParams.Body.CasualtyInfo.Treatment.builder()
                                        .bodyPart("CHEST")
                                        .comments("Comments on the treatment info.")
                                        .time(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .type("BREATHING CHEST TUBE")
                                        .build()
                                )
                                .addVitalSignData(
                                    EvacCreateBulkParams.Body.CasualtyInfo.VitalSignData.builder()
                                        .medConfFactor(1)
                                        .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                        .vitalSign("HEART RATE")
                                        .vitalSign1(120.0)
                                        .vitalSign2(80.0)
                                        .build()
                                )
                                .build()
                        )
                        .ce(10.1234)
                        .cntctFreq(3.11)
                        .comments("Comments concerning mission")
                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .createdBy("some.user")
                        .addEnemyData(
                            EvacCreateBulkParams.Body.EnemyData.builder()
                                .dirToEnemy("NORTH")
                                .friendliesRemarks("Comments from friendlies.")
                                .hlzRemarks("Remarks about hot landing zone.")
                                .hostileFireType("SMALL ARMS")
                                .build()
                        )
                        .idWeatherReport("WeatherReport-ID")
                        .le(5.1234)
                        .medevacId("MedEvac-ID")
                        .medicReq(true)
                        .missionType("GROUND")
                        .numAmbulatory(5)
                        .numCasualties(5)
                        .numKia(0)
                        .numLitter(0)
                        .numWia(3)
                        .obstaclesRemarks("N/A")
                        .origin("THIRD_PARTY_DATASOURCE")
                        .origNetwork("OPS1")
                        .pickupAlt(30.1234)
                        .pickupTime(OffsetDateTime.parse("2021-10-20T16:00:00.123Z"))
                        .reqCallSign("Bravo")
                        .reqNum("MED.1.223908")
                        .terrain("ROCKY")
                        .terrainRemarks("N/A")
                        .zoneContrCallSign("Tango")
                        .zoneHot(false)
                        .zoneMarking("ILLUMINATION")
                        .zoneMarkingColor("RED")
                        .zoneName("example-zone")
                        .zoneSecurity("NO ENEMY")
                        .build()
                )
                .build()
        )
    }

    @Test
    fun queryHelp() {
        val client =
            UnifieddatalibraryOkHttpClient.builder()
                .baseUrl(TestServerExtension.BASE_URL)
                .password("My Password")
                .username("My Username")
                .build()
        val evacService = client.evac()

        val response = evacService.queryHelp()

        response.validate()
    }

    @Test
    fun unvalidatedPublish() {
        val client =
            UnifieddatalibraryOkHttpClient.builder()
                .baseUrl(TestServerExtension.BASE_URL)
                .password("My Password")
                .username("My Username")
                .build()
        val evacService = client.evac()

        evacService.unvalidatedPublish(
            EvacUnvalidatedPublishParams.builder()
                .addBody(
                    EvacUnvalidatedPublishParams.Body.builder()
                        .classificationMarking("U")
                        .dataMode(EvacUnvalidatedPublishParams.Body.DataMode.TEST)
                        .pickupLat(75.1234)
                        .pickupLon(175.1234)
                        .reqTime(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                        .source("Bluestaq")
                        .type(EvacUnvalidatedPublishParams.Body.Type.REQUEST)
                        .id("MEDEVACEVENT-ID")
                        .addCasualtyInfo(
                            EvacUnvalidatedPublishParams.Body.CasualtyInfo.builder()
                                .age(35)
                                .addAllergy(
                                    EvacUnvalidatedPublishParams.Body.CasualtyInfo.Allergy.builder()
                                        .comments("Comments on the patient's allergies.")
                                        .type("PENICILLIN")
                                        .build()
                                )
                                .bloodType("O NEG")
                                .bodyPart("FACE")
                                .burialLocation(listOf(-33.123, 150.33, 0.24))
                                .callSign("SHARK")
                                .careProviderUrn("CARE_PROVIDER-1")
                                .casualtyKey("casualty-007")
                                .casualtyType("DENTAL")
                                .collectionPoint(listOf(12.44, 122.55, 0.98))
                                .comments("Comments relating to this casualty info.")
                                .addCondition(
                                    EvacUnvalidatedPublishParams.Body.CasualtyInfo.Condition
                                        .builder()
                                        .bodyPart("ANKLE LEFT FRONT")
                                        .comments("Comments on the patient's condition.")
                                        .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                        .type("ACTIVITY LOW")
                                        .build()
                                )
                                .contamType("NONE")
                                .disposition("EVACUATE WOUNDED")
                                .dispositionType("EVACUATE")
                                .addEtiology(
                                    EvacUnvalidatedPublishParams.Body.CasualtyInfo.Etiology
                                        .builder()
                                        .bodyPart("ARM LEFT FRONT")
                                        .comments("Comments on the etiology info.")
                                        .time(OffsetDateTime.parse("2021-10-16T16:00:00.123Z"))
                                        .type("BURN")
                                        .build()
                                )
                                .evacType("GROUND")
                                .gender("MALE")
                                .addHealthState(
                                    EvacUnvalidatedPublishParams.Body.CasualtyInfo.HealthState
                                        .builder()
                                        .healthStateCode("BLUE")
                                        .medConfFactor(1)
                                        .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                        .type("COGNITIVE")
                                        .build()
                                )
                                .addInjury(
                                    EvacUnvalidatedPublishParams.Body.CasualtyInfo.Injury.builder()
                                        .bodyPart("ARM LEFT FRONT")
                                        .comments("Comments on the patient's injury.")
                                        .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                        .type("ABRASION")
                                        .build()
                                )
                                .last4Ssn("1234")
                                .addMedication(
                                    EvacUnvalidatedPublishParams.Body.CasualtyInfo.Medication
                                        .builder()
                                        .adminRoute("ORAL")
                                        .bodyPart("ARM LEFT BACK")
                                        .comments(
                                            "Comments on the patient's medication information."
                                        )
                                        .dose("800mg")
                                        .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                        .type("TYLENOL")
                                        .build()
                                )
                                .name("John Smith")
                                .nationality("US")
                                .occSpeciality("Healthcare")
                                .patientIdentity("FRIEND CIVILIAN")
                                .patientStatus("US CIVILIAN")
                                .payGrade("CIVILIAN")
                                .priority("ROUTINE")
                                .reportGen("DEVICE")
                                .reportTime(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                .service("CIV")
                                .addSpecMedEquip("OXYGEN")
                                .addSpecMedEquip("HOIST")
                                .addTreatment(
                                    EvacUnvalidatedPublishParams.Body.CasualtyInfo.Treatment
                                        .builder()
                                        .bodyPart("CHEST")
                                        .comments("Comments on the treatment info.")
                                        .time(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .type("BREATHING CHEST TUBE")
                                        .build()
                                )
                                .addVitalSignData(
                                    EvacUnvalidatedPublishParams.Body.CasualtyInfo.VitalSignData
                                        .builder()
                                        .medConfFactor(1)
                                        .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                        .vitalSign("HEART RATE")
                                        .vitalSign1(120.0)
                                        .vitalSign2(80.0)
                                        .build()
                                )
                                .build()
                        )
                        .ce(10.1234)
                        .cntctFreq(3.11)
                        .comments("Comments concerning mission")
                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .createdBy("some.user")
                        .addEnemyData(
                            EvacUnvalidatedPublishParams.Body.EnemyData.builder()
                                .dirToEnemy("NORTH")
                                .friendliesRemarks("Comments from friendlies.")
                                .hlzRemarks("Remarks about hot landing zone.")
                                .hostileFireType("SMALL ARMS")
                                .build()
                        )
                        .idWeatherReport("WeatherReport-ID")
                        .le(5.1234)
                        .medevacId("MedEvac-ID")
                        .medicReq(true)
                        .missionType("GROUND")
                        .numAmbulatory(5)
                        .numCasualties(5)
                        .numKia(0)
                        .numLitter(0)
                        .numWia(3)
                        .obstaclesRemarks("N/A")
                        .origin("THIRD_PARTY_DATASOURCE")
                        .origNetwork("OPS1")
                        .pickupAlt(30.1234)
                        .pickupTime(OffsetDateTime.parse("2021-10-20T16:00:00.123Z"))
                        .reqCallSign("Bravo")
                        .reqNum("MED.1.223908")
                        .terrain("ROCKY")
                        .terrainRemarks("N/A")
                        .zoneContrCallSign("Tango")
                        .zoneHot(false)
                        .zoneMarking("ILLUMINATION")
                        .zoneMarkingColor("RED")
                        .zoneName("example-zone")
                        .zoneSecurity("NO ENEMY")
                        .build()
                )
                .build()
        )
    }
}
