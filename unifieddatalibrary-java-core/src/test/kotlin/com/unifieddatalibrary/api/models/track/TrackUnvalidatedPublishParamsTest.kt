// File generated from our OpenAPI spec by Stainless.

package com.unifieddatalibrary.api.models.track

import java.time.OffsetDateTime
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class TrackUnvalidatedPublishParamsTest {

    @Test
    fun create() {
        TrackUnvalidatedPublishParams.builder()
            .addBody(
                TrackUnvalidatedPublishParams.Body.builder()
                    .classificationMarking("U")
                    .dataMode(TrackUnvalidatedPublishParams.Body.DataMode.TEST)
                    .source("Bluestaq")
                    .ts(OffsetDateTime.parse("2021-06-07T14:17:39.653043Z"))
                    .id("TRACK-ID")
                    .alt(2024.15)
                    .asset("asset")
                    .assetNat("US")
                    .attitude(listOf(10.1, 0.1, 1.1))
                    .attitudeRate(listOf(0.0003, 1e-7, 0.00003))
                    .callSign("callSign")
                    .cntct("Contact Info")
                    .contextKeys(listOf("MsnID_DescLabel", "msnVer", "serVer", "velTs", "accelTs"))
                    .contextValues(
                        listOf(
                            "MissionID Descriptive Label text",
                            "1",
                            "001.9b",
                            "2024-06-07T14:17:39.234Z",
                            "2024-06-07T14:17:39.123Z",
                        )
                    )
                    .course(215.2)
                    .cov(listOf(1.1, 2.2, 3.3))
                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .ecefAcc(listOf(-0.0265, -0.2764, -0.1773))
                    .ecefPos(listOf(-1273011.47, -48108810.77, 3979360.49))
                    .ecefVel(listOf(25.635, -1.097, 57.373))
                    .eNuAcc(listOf(0.0003, 0.014, 0.0003))
                    .eNuGroundVel(listOf(1.23, 2.34, 3.45))
                    .eNuPos(listOf(1.23, 2.34, 3.45))
                    .eNuVel(listOf(1.23, 2.34, 3.45))
                    .env("LAND")
                    .envConf(1.23)
                    .errEllp(listOf(1.23, 2.34, 3.45))
                    .hdng(215.7)
                    .identAmp("ZOMBIE")
                    .identCred(0)
                    .identRel(0)
                    .jSeries("J12.5")
                    .lat(38.8353)
                    .lcAcc(listOf(1.23, 2.34, 3.45))
                    .lco(listOf(1.23, 2.34, 3.45))
                    .lcPos(listOf(1.23, 2.34, 3.45))
                    .lcs(listOf(1.23, 2.34, 3.45))
                    .lcVel(listOf(1.23, 2.34, 3.45))
                    .lon(-104.8216)
                    .m1(11)
                    .m1v(1)
                    .m2(1234)
                    .m2v(1)
                    .m3a(2636)
                    .m3av(1)
                    .modType("MASINT")
                    .msgTs(OffsetDateTime.parse("2021-01-01T01:01:01.123456Z"))
                    .msnId("msnId")
                    .multiSource(true)
                    .objAct("HOLDING")
                    .objDescription("Object description text.")
                    .objId("objId")
                    .objIdent("FRIEND")
                    .objNat("NATO")
                    .objPlat("COMBAT_VEHICLE")
                    .objSpec("LIGHT_TANK")
                    .objType("WATERCRAFT")
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("OPS1")
                    .sen("sen")
                    .senQual("senQual")
                    .sourceDl("AXE")
                    .spd(62.9921)
                    .addSrcId("f7c70cc8-f9b7-4467-b4ad-3904e360e842")
                    .addSrcId("1da3fab000014e3133709830937387405")
                    .addSrcTyp("MTI")
                    .addSrcTyp("POI")
                    .strength(14)
                    .addTag("TAG1")
                    .addTag("TAG2")
                    .trkConf(0.67)
                    .trkId("trkId")
                    .trkItmId("38f3a71f-4bba-4d58-9765-c1b93212aff1")
                    .trkNum("trkNum")
                    .trkPtType("MEASURED")
                    .trkQual(0)
                    .trkStat("INITIATING")
                    .vertUnc(4.56)
                    .wanderAng(1.23)
                    .build()
            )
            .build()
    }

    @Test
    fun body() {
        val params =
            TrackUnvalidatedPublishParams.builder()
                .addBody(
                    TrackUnvalidatedPublishParams.Body.builder()
                        .classificationMarking("U")
                        .dataMode(TrackUnvalidatedPublishParams.Body.DataMode.TEST)
                        .source("Bluestaq")
                        .ts(OffsetDateTime.parse("2021-06-07T14:17:39.653043Z"))
                        .id("TRACK-ID")
                        .alt(2024.15)
                        .asset("asset")
                        .assetNat("US")
                        .attitude(listOf(10.1, 0.1, 1.1))
                        .attitudeRate(listOf(0.0003, 1e-7, 0.00003))
                        .callSign("callSign")
                        .cntct("Contact Info")
                        .contextKeys(
                            listOf("MsnID_DescLabel", "msnVer", "serVer", "velTs", "accelTs")
                        )
                        .contextValues(
                            listOf(
                                "MissionID Descriptive Label text",
                                "1",
                                "001.9b",
                                "2024-06-07T14:17:39.234Z",
                                "2024-06-07T14:17:39.123Z",
                            )
                        )
                        .course(215.2)
                        .cov(listOf(1.1, 2.2, 3.3))
                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .createdBy("some.user")
                        .ecefAcc(listOf(-0.0265, -0.2764, -0.1773))
                        .ecefPos(listOf(-1273011.47, -48108810.77, 3979360.49))
                        .ecefVel(listOf(25.635, -1.097, 57.373))
                        .eNuAcc(listOf(0.0003, 0.014, 0.0003))
                        .eNuGroundVel(listOf(1.23, 2.34, 3.45))
                        .eNuPos(listOf(1.23, 2.34, 3.45))
                        .eNuVel(listOf(1.23, 2.34, 3.45))
                        .env("LAND")
                        .envConf(1.23)
                        .errEllp(listOf(1.23, 2.34, 3.45))
                        .hdng(215.7)
                        .identAmp("ZOMBIE")
                        .identCred(0)
                        .identRel(0)
                        .jSeries("J12.5")
                        .lat(38.8353)
                        .lcAcc(listOf(1.23, 2.34, 3.45))
                        .lco(listOf(1.23, 2.34, 3.45))
                        .lcPos(listOf(1.23, 2.34, 3.45))
                        .lcs(listOf(1.23, 2.34, 3.45))
                        .lcVel(listOf(1.23, 2.34, 3.45))
                        .lon(-104.8216)
                        .m1(11)
                        .m1v(1)
                        .m2(1234)
                        .m2v(1)
                        .m3a(2636)
                        .m3av(1)
                        .modType("MASINT")
                        .msgTs(OffsetDateTime.parse("2021-01-01T01:01:01.123456Z"))
                        .msnId("msnId")
                        .multiSource(true)
                        .objAct("HOLDING")
                        .objDescription("Object description text.")
                        .objId("objId")
                        .objIdent("FRIEND")
                        .objNat("NATO")
                        .objPlat("COMBAT_VEHICLE")
                        .objSpec("LIGHT_TANK")
                        .objType("WATERCRAFT")
                        .origin("THIRD_PARTY_DATASOURCE")
                        .origNetwork("OPS1")
                        .sen("sen")
                        .senQual("senQual")
                        .sourceDl("AXE")
                        .spd(62.9921)
                        .addSrcId("f7c70cc8-f9b7-4467-b4ad-3904e360e842")
                        .addSrcId("1da3fab000014e3133709830937387405")
                        .addSrcTyp("MTI")
                        .addSrcTyp("POI")
                        .strength(14)
                        .addTag("TAG1")
                        .addTag("TAG2")
                        .trkConf(0.67)
                        .trkId("trkId")
                        .trkItmId("38f3a71f-4bba-4d58-9765-c1b93212aff1")
                        .trkNum("trkNum")
                        .trkPtType("MEASURED")
                        .trkQual(0)
                        .trkStat("INITIATING")
                        .vertUnc(4.56)
                        .wanderAng(1.23)
                        .build()
                )
                .build()

        val body = params._body()

        assertThat(body)
            .containsExactly(
                TrackUnvalidatedPublishParams.Body.builder()
                    .classificationMarking("U")
                    .dataMode(TrackUnvalidatedPublishParams.Body.DataMode.TEST)
                    .source("Bluestaq")
                    .ts(OffsetDateTime.parse("2021-06-07T14:17:39.653043Z"))
                    .id("TRACK-ID")
                    .alt(2024.15)
                    .asset("asset")
                    .assetNat("US")
                    .attitude(listOf(10.1, 0.1, 1.1))
                    .attitudeRate(listOf(0.0003, 1e-7, 0.00003))
                    .callSign("callSign")
                    .cntct("Contact Info")
                    .contextKeys(listOf("MsnID_DescLabel", "msnVer", "serVer", "velTs", "accelTs"))
                    .contextValues(
                        listOf(
                            "MissionID Descriptive Label text",
                            "1",
                            "001.9b",
                            "2024-06-07T14:17:39.234Z",
                            "2024-06-07T14:17:39.123Z",
                        )
                    )
                    .course(215.2)
                    .cov(listOf(1.1, 2.2, 3.3))
                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .ecefAcc(listOf(-0.0265, -0.2764, -0.1773))
                    .ecefPos(listOf(-1273011.47, -48108810.77, 3979360.49))
                    .ecefVel(listOf(25.635, -1.097, 57.373))
                    .eNuAcc(listOf(0.0003, 0.014, 0.0003))
                    .eNuGroundVel(listOf(1.23, 2.34, 3.45))
                    .eNuPos(listOf(1.23, 2.34, 3.45))
                    .eNuVel(listOf(1.23, 2.34, 3.45))
                    .env("LAND")
                    .envConf(1.23)
                    .errEllp(listOf(1.23, 2.34, 3.45))
                    .hdng(215.7)
                    .identAmp("ZOMBIE")
                    .identCred(0)
                    .identRel(0)
                    .jSeries("J12.5")
                    .lat(38.8353)
                    .lcAcc(listOf(1.23, 2.34, 3.45))
                    .lco(listOf(1.23, 2.34, 3.45))
                    .lcPos(listOf(1.23, 2.34, 3.45))
                    .lcs(listOf(1.23, 2.34, 3.45))
                    .lcVel(listOf(1.23, 2.34, 3.45))
                    .lon(-104.8216)
                    .m1(11)
                    .m1v(1)
                    .m2(1234)
                    .m2v(1)
                    .m3a(2636)
                    .m3av(1)
                    .modType("MASINT")
                    .msgTs(OffsetDateTime.parse("2021-01-01T01:01:01.123456Z"))
                    .msnId("msnId")
                    .multiSource(true)
                    .objAct("HOLDING")
                    .objDescription("Object description text.")
                    .objId("objId")
                    .objIdent("FRIEND")
                    .objNat("NATO")
                    .objPlat("COMBAT_VEHICLE")
                    .objSpec("LIGHT_TANK")
                    .objType("WATERCRAFT")
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("OPS1")
                    .sen("sen")
                    .senQual("senQual")
                    .sourceDl("AXE")
                    .spd(62.9921)
                    .addSrcId("f7c70cc8-f9b7-4467-b4ad-3904e360e842")
                    .addSrcId("1da3fab000014e3133709830937387405")
                    .addSrcTyp("MTI")
                    .addSrcTyp("POI")
                    .strength(14)
                    .addTag("TAG1")
                    .addTag("TAG2")
                    .trkConf(0.67)
                    .trkId("trkId")
                    .trkItmId("38f3a71f-4bba-4d58-9765-c1b93212aff1")
                    .trkNum("trkNum")
                    .trkPtType("MEASURED")
                    .trkQual(0)
                    .trkStat("INITIATING")
                    .vertUnc(4.56)
                    .wanderAng(1.23)
                    .build()
            )
    }

    @Test
    fun bodyWithoutOptionalFields() {
        val params =
            TrackUnvalidatedPublishParams.builder()
                .addBody(
                    TrackUnvalidatedPublishParams.Body.builder()
                        .classificationMarking("U")
                        .dataMode(TrackUnvalidatedPublishParams.Body.DataMode.TEST)
                        .source("Bluestaq")
                        .ts(OffsetDateTime.parse("2021-06-07T14:17:39.653043Z"))
                        .build()
                )
                .build()

        val body = params._body()

        assertThat(body)
            .containsExactly(
                TrackUnvalidatedPublishParams.Body.builder()
                    .classificationMarking("U")
                    .dataMode(TrackUnvalidatedPublishParams.Body.DataMode.TEST)
                    .source("Bluestaq")
                    .ts(OffsetDateTime.parse("2021-06-07T14:17:39.653043Z"))
                    .build()
            )
    }
}
