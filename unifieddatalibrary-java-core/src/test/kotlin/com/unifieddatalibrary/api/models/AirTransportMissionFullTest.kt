// File generated from our OpenAPI spec by Stainless.

package com.unifieddatalibrary.api.models

import com.fasterxml.jackson.module.kotlin.jacksonTypeRef
import com.unifieddatalibrary.api.core.jsonMapper
import java.time.LocalDate
import java.time.OffsetDateTime
import kotlin.jvm.optionals.getOrNull
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class AirTransportMissionFullTest {

    @Test
    fun create() {
        val airTransportMissionFull =
            AirTransportMissionFull.builder()
                .classificationMarking("U")
                .dataMode(AirTransportMissionFull.DataMode.TEST)
                .source("Bluestaq")
                .id("bdad6945-c9e4-b829-f7be-1ad075541921")
                .abp("ZZ12")
                .addAircraftSorty(
                    AircraftsortieFull.builder()
                        .classificationMarking("U")
                        .dataMode(AircraftsortieFull.DataMode.TEST)
                        .plannedDepTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
                        .source("Bluestaq")
                        .id("AIRCRAFTSORTIE-ID")
                        .actualArrTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
                        .actualBlockInTime(OffsetDateTime.parse("2021-01-01T01:06:01.123Z"))
                        .actualBlockOutTime(OffsetDateTime.parse("2021-01-01T00:55:01.123Z"))
                        .actualDepTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
                        .aircraftAdsb("AE123C")
                        .aircraftAltId("ALT-AIRCRAFT-ID")
                        .aircraftEvent("Example event")
                        .aircraftMds("C017A")
                        .aircraftRemarks("Some remark about aircraft A")
                        .alertStatus(22)
                        .alertStatusCode("C1")
                        .amcMsnNum("AJM512571333")
                        .amcMsnType("SAAM")
                        .arrFaa("FAA1")
                        .arrIata("AAA")
                        .arrIcao("KCOS")
                        .arrItinerary(101)
                        .arrPurposeCode("O")
                        .callSign("BAKER")
                        .cargoConfig("C-1")
                        .commanderName("Smith")
                        .createdAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                        .createdBy("some.user")
                        .crew(
                            CrewFull.builder()
                                .classificationMarking("U")
                                .dataMode(CrewFull.DataMode.TEST)
                                .origCrewId("JHJDHjhuu929o92")
                                .source("Bluestaq")
                                .id("bdad6945-c9e4-b829-f7be-1ad075541921")
                                .adjReturnTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                .adjReturnTimeApprover("Smith")
                                .aircraftMds("C017A")
                                .alertedTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                                .alertType("ALPHA")
                                .armsCrewUnit("00016ALSQ")
                                .addAssignedQualCode("AL")
                                .addAssignedQualCode("CS")
                                .commanderId("763a1c1e8d2f3c16af825a11e3f1f579")
                                .commanderLast4Ssn("1234")
                                .commanderName("John Doe")
                                .createdAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .crewHome(false)
                                .addCrewMember(
                                    CrewFull.CrewMember.builder()
                                        .alerted(true)
                                        .allSortie(true)
                                        .approved(true)
                                        .attached(true)
                                        .branch("Air Force")
                                        .civilian(false)
                                        .commander(false)
                                        .crewPosition("EP A")
                                        .dodId("0123456789")
                                        .dutyPosition("IP")
                                        .dutyStatus("AGR")
                                        .emailed(true)
                                        .extraTime(true)
                                        .firstName("Freddie")
                                        .fltCurrencyExp(
                                            OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                        )
                                        .fltCurrencyExpId("SS05AM")
                                        .fltRecDate(
                                            OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                        )
                                        .fltRecDue(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                        .flySquadron("141ARS")
                                        .funded(true)
                                        .gender("F")
                                        .gndCurrencyExp(
                                            OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                        )
                                        .gndCurrencyExpId("AH03YM")
                                        .grounded(true)
                                        .guestStart(
                                            OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                        )
                                        .guestStop(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                        .last4Ssn("1234")
                                        .lastFltDate(
                                            OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                        )
                                        .lastName("Smith")
                                        .loanedTo("Thunderbirds")
                                        .lodging("Peterson SFB")
                                        .memberActualAlertTime(
                                            OffsetDateTime.parse("2024-02-26T09:15:00.123Z")
                                        )
                                        .memberAdjReturnTime(
                                            OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                        )
                                        .memberAdjReturnTimeApprover("Smith")
                                        .memberId("12345678abc")
                                        .memberInitStartTime(
                                            OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                        )
                                        .memberLastAlertTime(
                                            OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                        )
                                        .memberLegalAlertTime(
                                            OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                        )
                                        .memberPickupTime(
                                            OffsetDateTime.parse("2024-02-26T10:15:00.123Z")
                                        )
                                        .memberPostRestOffset("+05:00")
                                        .memberPostRestTime(
                                            OffsetDateTime.parse("2024-01-02T16:00:00.123Z")
                                        )
                                        .memberPreRestTime(
                                            OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                        )
                                        .memberRemarks("Crew member remark")
                                        .memberReturnTime(
                                            OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                        )
                                        .memberSchedAlertTime(
                                            OffsetDateTime.parse("2024-02-26T09:15:00.123Z")
                                        )
                                        .memberSource("ACTIVE")
                                        .memberStageName("Falcon Squadron")
                                        .memberTransportReq(true)
                                        .memberType("AIRCREW")
                                        .middleInitial("G")
                                        .notified(true)
                                        .phoneNumber("+14155552671")
                                        .physAvCode("D")
                                        .physAvStatus("OVERDUE")
                                        .physDue(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                        .rank("Capt")
                                        .remarkCode("ABE33")
                                        .rmsMds("C017A")
                                        .showTime(OffsetDateTime.parse("2024-02-26T10:15:00.123Z"))
                                        .squadron("21AS")
                                        .trainingDate(
                                            OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                        )
                                        .username("fgsmith")
                                        .wing("60AMW")
                                        .build()
                                )
                                .crewName("falcon")
                                .crewRms("ARMS")
                                .crewRole("DEADHEAD")
                                .crewSource("ACTIVE")
                                .crewSquadron("21AS")
                                .crewType("AIRLAND")
                                .crewUnit("00016ALSQ")
                                .crewWing("60AMW")
                                .currentIcao("KCOS")
                                .fdpEligType("A")
                                .fdpType("A")
                                .femaleEnlistedQty(2)
                                .femaleOfficerQty(1)
                                .fltAuthNum("KT001")
                                .idSiteCurrent("b677cf3b-d44d-450e-8b8f-d23f997f8778")
                                .idSortie("4ef3d1e8-ab08-ab70-498f-edc479734e5c")
                                .initStartTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                .lastAlertTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                .legalAlertTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                                .legalBravoTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                                .linkedTask(false)
                                .maleEnlistedQty(3)
                                .maleOfficerQty(1)
                                .missionAlias("PACIFIC DEPLOY / CHAP 3 MOVEMENT")
                                .missionId("AJM123456123")
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .personnelType("AIRCREW")
                                .pickupTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                .postRestApplied(false)
                                .postRestEnd(OffsetDateTime.parse("2024-01-02T16:00:00.123Z"))
                                .postRestOffset("+05:00")
                                .preRestApplied(false)
                                .preRestStart(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                .addReqQualCode("AL")
                                .addReqQualCode("CS")
                                .returnTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                                .sourceDl("AXE")
                                .stage1Qual("1AXXX")
                                .stage2Qual("2AXXX")
                                .stage3Qual("3AXXX")
                                .stageName("Falcon Squadron")
                                .stageTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                .status("APPROVED")
                                .transportReq(true)
                                .tripKit("TK-1234")
                                .updatedAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .build()
                        )
                        .currentState("Park")
                        .delayCode("500")
                        .depFaa("FAA1")
                        .depIata("AAA")
                        .depIcao("KCOS")
                        .depItinerary(100)
                        .depPurposeCode("P")
                        .dhd(OffsetDateTime.parse("2021-01-03T01:01:01.123Z"))
                        .dhdReason("Due for maintenance")
                        .estArrTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
                        .estBlockInTime(OffsetDateTime.parse("2021-01-01T01:06:01.123Z"))
                        .estBlockOutTime(OffsetDateTime.parse("2021-01-01T00:55:01.123Z"))
                        .estDepTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
                        .filename("ExampleFileName")
                        .filesize(12)
                        .flightTime(104.5)
                        .fmDeskNum("7198675309")
                        .fmName("Smith")
                        .fuelReq(20000.1)
                        .gndTime(387.8)
                        .idAircraft("REF-AIRCRAFT-ID")
                        .idMission("fa18d96e-91ea-60da-a7a8-1af6500066c8")
                        .jcsPriority("1A3")
                        .legNum(14)
                        .lineNumber(99)
                        .missionId("ABLE")
                        .missionUpdate(OffsetDateTime.parse("2024-09-09T01:01:01.123Z"))
                        .objectiveRemarks("Some objective remark about aircraft A")
                        .origin("THIRD_PARTY_DATASOURCE")
                        .origNetwork("OPS1")
                        .origSortieId("A0640")
                        .oxyOnCrew(12.3)
                        .oxyOnPax(12.3)
                        .oxyReqCrew(12.3)
                        .oxyReqPax(12.3)
                        .paperStatus(AircraftsortieFull.PaperStatus.PUBLISHED)
                        .papersVersion("1.1")
                        .parkingLoc("KCOS")
                        .passengers(17)
                        .plannedArrTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
                        .pprStatus(AircraftsortieFull.PprStatus.PENDING)
                        .primaryScl("ABC")
                        .rawFileUri("Example URI")
                        .reqConfig("C-1")
                        .resultRemarks("Some remark about aircraft A")
                        .rvnReq(AircraftsortieFull.RvnReq.R)
                        .scheduleRemarks("Some schedule remark about aircraft A")
                        .secondaryScl("ABC")
                        .soe("OPS")
                        .sortieDate(LocalDate.parse("2021-01-01"))
                        .addSortiePpr(
                            SortiePprFull.builder()
                                .classificationMarking("U")
                                .dataMode(SortiePprFull.DataMode.TEST)
                                .idSortie("4ef3d1e8-ab08-ab70-498f-edc479734e5c")
                                .source("Bluestaq")
                                .id("SORTIEPPR-ID")
                                .createdAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .endTime(OffsetDateTime.parse("2024-01-01T01:01:01.123Z"))
                                .externalId("aa714f4d52a37ab1a00b21af9566e379")
                                .grantor("SMITH")
                                .number("07-21-07W")
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .remarks("PPR remark")
                                .requestor("jsmith1")
                                .sourceDl("AXE")
                                .startTime(OffsetDateTime.parse("2024-01-01T01:01:01.123Z"))
                                .type(SortiePprFull.Type.M)
                                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .build()
                        )
                        .sourceDl("AXE")
                        .tailNumber("Tail_1")
                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .updatedBy("some.user")
                        .build()
                )
                .alias("PACIFIC DEPLOY / CHAP 3 MOVEMENT")
                .allocatedUnit("437 AEW")
                .amcMissionId("AJM7939B1123")
                .apacsId("1083034")
                .atoCallSign("CHARLIE")
                .atoMissionId("8900")
                .callSign("RCH123")
                .createdAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                .createdBy("some.user")
                .cw(true)
                .dipWorksheetName("G2-182402-AB")
                .firstPickUp("KFAY")
                .gdssMissionId("1e6edeec-72e9-aaec-d33c-51147cb5ffdd")
                .addHazMat(
                    AirTransportMissionFull.HazMat.builder()
                        .applicableNotes("11,12")
                        .cgc("A")
                        .cgn("4,5,7,8")
                        .classDiv(1.1)
                        .extHazMatId("cb6289e0f38534e01291ab6421d42724")
                        .itemName("LITHIUM METAL BATTERIES")
                        .netExpWt(12.1)
                        .offIcao("MBPV")
                        .offItin(300)
                        .onIcao("LIRQ")
                        .onItin(50)
                        .pieces(29)
                        .planned("P")
                        .unNum("0181")
                        .weight(22.1)
                        .build()
                )
                .jcsPriority("1A3")
                .lastDropOff("PGUA")
                .loadCategoryType("MIXED")
                .m1("11")
                .m2("3214")
                .m3a("6655")
                .naf("18AF")
                .nextAmcMissionId("AJM7939B1124")
                .nextMissionId("186e5658-1079-45c0-bccc-02d2fa31b663")
                .node("45TEST")
                .objective("Deliver water to island X.")
                .operation("Golden Eye")
                .origin("THIRD_PARTY_DATASOURCE")
                .origMissionId("614bebb6-a62e-053c-ca51-e79f8a402b28")
                .origNetwork("OPS1")
                .prevAmcMissionId("AJM7939B1122")
                .prevMissionId("a77055df-edc3-4047-a5fa-604f80b9fe3c")
                .purpose(
                    "People at island X need water ASAP. Two previous attempts failed due to weather."
                )
                .addRemark(
                    AirTransportMissionFull.Remark.builder()
                        .date(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                        .gdssRemarkId("GDSSREMARK-ID")
                        .itineraryNum(825)
                        .text("Example mission remarks.")
                        .type("MP")
                        .user("John Doe")
                        .build()
                )
                .addRequirement(
                    AirTransportMissionFull.Requirement.builder()
                        .bulkWeight(1.3)
                        .ead(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .gdssReqId("23a1fb67-cc2d-5ebe-6b99-68130cb1aa6c")
                        .lad(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .numAmbulatory(10)
                        .numAttendant(10)
                        .numLitter(10)
                        .numPax(44)
                        .offloadId(300)
                        .offloadLoCode("KHOP")
                        .onloadId(200)
                        .onloadLoCode("KCHS")
                        .oplan("5027")
                        .outsizeWeight(1.3)
                        .oversizeWeight(1.3)
                        .projName("CENTINTRA21")
                        .transReqNum("T01ME01")
                        .uln("T01ME01")
                        .build()
                )
                .sourceDl("AXE")
                .sourceSysDeviation(-90.12)
                .state("EXECUTION")
                .type("SAAM")
                .updatedAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                .updatedBy("some.user")
                .build()

        assertThat(airTransportMissionFull.classificationMarking()).isEqualTo("U")
        assertThat(airTransportMissionFull.dataMode())
            .isEqualTo(AirTransportMissionFull.DataMode.TEST)
        assertThat(airTransportMissionFull.source()).isEqualTo("Bluestaq")
        assertThat(airTransportMissionFull.id()).contains("bdad6945-c9e4-b829-f7be-1ad075541921")
        assertThat(airTransportMissionFull.abp()).contains("ZZ12")
        assertThat(airTransportMissionFull.aircraftSorties().getOrNull())
            .containsExactly(
                AircraftsortieFull.builder()
                    .classificationMarking("U")
                    .dataMode(AircraftsortieFull.DataMode.TEST)
                    .plannedDepTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
                    .source("Bluestaq")
                    .id("AIRCRAFTSORTIE-ID")
                    .actualArrTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
                    .actualBlockInTime(OffsetDateTime.parse("2021-01-01T01:06:01.123Z"))
                    .actualBlockOutTime(OffsetDateTime.parse("2021-01-01T00:55:01.123Z"))
                    .actualDepTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
                    .aircraftAdsb("AE123C")
                    .aircraftAltId("ALT-AIRCRAFT-ID")
                    .aircraftEvent("Example event")
                    .aircraftMds("C017A")
                    .aircraftRemarks("Some remark about aircraft A")
                    .alertStatus(22)
                    .alertStatusCode("C1")
                    .amcMsnNum("AJM512571333")
                    .amcMsnType("SAAM")
                    .arrFaa("FAA1")
                    .arrIata("AAA")
                    .arrIcao("KCOS")
                    .arrItinerary(101)
                    .arrPurposeCode("O")
                    .callSign("BAKER")
                    .cargoConfig("C-1")
                    .commanderName("Smith")
                    .createdAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .crew(
                        CrewFull.builder()
                            .classificationMarking("U")
                            .dataMode(CrewFull.DataMode.TEST)
                            .origCrewId("JHJDHjhuu929o92")
                            .source("Bluestaq")
                            .id("bdad6945-c9e4-b829-f7be-1ad075541921")
                            .adjReturnTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .adjReturnTimeApprover("Smith")
                            .aircraftMds("C017A")
                            .alertedTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                            .alertType("ALPHA")
                            .armsCrewUnit("00016ALSQ")
                            .addAssignedQualCode("AL")
                            .addAssignedQualCode("CS")
                            .commanderId("763a1c1e8d2f3c16af825a11e3f1f579")
                            .commanderLast4Ssn("1234")
                            .commanderName("John Doe")
                            .createdAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                            .createdBy("some.user")
                            .crewHome(false)
                            .addCrewMember(
                                CrewFull.CrewMember.builder()
                                    .alerted(true)
                                    .allSortie(true)
                                    .approved(true)
                                    .attached(true)
                                    .branch("Air Force")
                                    .civilian(false)
                                    .commander(false)
                                    .crewPosition("EP A")
                                    .dodId("0123456789")
                                    .dutyPosition("IP")
                                    .dutyStatus("AGR")
                                    .emailed(true)
                                    .extraTime(true)
                                    .firstName("Freddie")
                                    .fltCurrencyExp(
                                        OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                    )
                                    .fltCurrencyExpId("SS05AM")
                                    .fltRecDate(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                    .fltRecDue(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                    .flySquadron("141ARS")
                                    .funded(true)
                                    .gender("F")
                                    .gndCurrencyExp(
                                        OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                    )
                                    .gndCurrencyExpId("AH03YM")
                                    .grounded(true)
                                    .guestStart(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                    .guestStop(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                    .last4Ssn("1234")
                                    .lastFltDate(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                    .lastName("Smith")
                                    .loanedTo("Thunderbirds")
                                    .lodging("Peterson SFB")
                                    .memberActualAlertTime(
                                        OffsetDateTime.parse("2024-02-26T09:15:00.123Z")
                                    )
                                    .memberAdjReturnTime(
                                        OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                    )
                                    .memberAdjReturnTimeApprover("Smith")
                                    .memberId("12345678abc")
                                    .memberInitStartTime(
                                        OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                    )
                                    .memberLastAlertTime(
                                        OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                    )
                                    .memberLegalAlertTime(
                                        OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                    )
                                    .memberPickupTime(
                                        OffsetDateTime.parse("2024-02-26T10:15:00.123Z")
                                    )
                                    .memberPostRestOffset("+05:00")
                                    .memberPostRestTime(
                                        OffsetDateTime.parse("2024-01-02T16:00:00.123Z")
                                    )
                                    .memberPreRestTime(
                                        OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                    )
                                    .memberRemarks("Crew member remark")
                                    .memberReturnTime(
                                        OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                    )
                                    .memberSchedAlertTime(
                                        OffsetDateTime.parse("2024-02-26T09:15:00.123Z")
                                    )
                                    .memberSource("ACTIVE")
                                    .memberStageName("Falcon Squadron")
                                    .memberTransportReq(true)
                                    .memberType("AIRCREW")
                                    .middleInitial("G")
                                    .notified(true)
                                    .phoneNumber("+14155552671")
                                    .physAvCode("D")
                                    .physAvStatus("OVERDUE")
                                    .physDue(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                    .rank("Capt")
                                    .remarkCode("ABE33")
                                    .rmsMds("C017A")
                                    .showTime(OffsetDateTime.parse("2024-02-26T10:15:00.123Z"))
                                    .squadron("21AS")
                                    .trainingDate(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                    .username("fgsmith")
                                    .wing("60AMW")
                                    .build()
                            )
                            .crewName("falcon")
                            .crewRms("ARMS")
                            .crewRole("DEADHEAD")
                            .crewSource("ACTIVE")
                            .crewSquadron("21AS")
                            .crewType("AIRLAND")
                            .crewUnit("00016ALSQ")
                            .crewWing("60AMW")
                            .currentIcao("KCOS")
                            .fdpEligType("A")
                            .fdpType("A")
                            .femaleEnlistedQty(2)
                            .femaleOfficerQty(1)
                            .fltAuthNum("KT001")
                            .idSiteCurrent("b677cf3b-d44d-450e-8b8f-d23f997f8778")
                            .idSortie("4ef3d1e8-ab08-ab70-498f-edc479734e5c")
                            .initStartTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .lastAlertTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .legalAlertTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                            .legalBravoTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                            .linkedTask(false)
                            .maleEnlistedQty(3)
                            .maleOfficerQty(1)
                            .missionAlias("PACIFIC DEPLOY / CHAP 3 MOVEMENT")
                            .missionId("AJM123456123")
                            .origin("THIRD_PARTY_DATASOURCE")
                            .origNetwork("OPS1")
                            .personnelType("AIRCREW")
                            .pickupTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .postRestApplied(false)
                            .postRestEnd(OffsetDateTime.parse("2024-01-02T16:00:00.123Z"))
                            .postRestOffset("+05:00")
                            .preRestApplied(false)
                            .preRestStart(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .addReqQualCode("AL")
                            .addReqQualCode("CS")
                            .returnTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                            .sourceDl("AXE")
                            .stage1Qual("1AXXX")
                            .stage2Qual("2AXXX")
                            .stage3Qual("3AXXX")
                            .stageName("Falcon Squadron")
                            .stageTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                            .status("APPROVED")
                            .transportReq(true)
                            .tripKit("TK-1234")
                            .updatedAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                            .updatedBy("some.user")
                            .build()
                    )
                    .currentState("Park")
                    .delayCode("500")
                    .depFaa("FAA1")
                    .depIata("AAA")
                    .depIcao("KCOS")
                    .depItinerary(100)
                    .depPurposeCode("P")
                    .dhd(OffsetDateTime.parse("2021-01-03T01:01:01.123Z"))
                    .dhdReason("Due for maintenance")
                    .estArrTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
                    .estBlockInTime(OffsetDateTime.parse("2021-01-01T01:06:01.123Z"))
                    .estBlockOutTime(OffsetDateTime.parse("2021-01-01T00:55:01.123Z"))
                    .estDepTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
                    .filename("ExampleFileName")
                    .filesize(12)
                    .flightTime(104.5)
                    .fmDeskNum("7198675309")
                    .fmName("Smith")
                    .fuelReq(20000.1)
                    .gndTime(387.8)
                    .idAircraft("REF-AIRCRAFT-ID")
                    .idMission("fa18d96e-91ea-60da-a7a8-1af6500066c8")
                    .jcsPriority("1A3")
                    .legNum(14)
                    .lineNumber(99)
                    .missionId("ABLE")
                    .missionUpdate(OffsetDateTime.parse("2024-09-09T01:01:01.123Z"))
                    .objectiveRemarks("Some objective remark about aircraft A")
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("OPS1")
                    .origSortieId("A0640")
                    .oxyOnCrew(12.3)
                    .oxyOnPax(12.3)
                    .oxyReqCrew(12.3)
                    .oxyReqPax(12.3)
                    .paperStatus(AircraftsortieFull.PaperStatus.PUBLISHED)
                    .papersVersion("1.1")
                    .parkingLoc("KCOS")
                    .passengers(17)
                    .plannedArrTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
                    .pprStatus(AircraftsortieFull.PprStatus.PENDING)
                    .primaryScl("ABC")
                    .rawFileUri("Example URI")
                    .reqConfig("C-1")
                    .resultRemarks("Some remark about aircraft A")
                    .rvnReq(AircraftsortieFull.RvnReq.R)
                    .scheduleRemarks("Some schedule remark about aircraft A")
                    .secondaryScl("ABC")
                    .soe("OPS")
                    .sortieDate(LocalDate.parse("2021-01-01"))
                    .addSortiePpr(
                        SortiePprFull.builder()
                            .classificationMarking("U")
                            .dataMode(SortiePprFull.DataMode.TEST)
                            .idSortie("4ef3d1e8-ab08-ab70-498f-edc479734e5c")
                            .source("Bluestaq")
                            .id("SORTIEPPR-ID")
                            .createdAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                            .createdBy("some.user")
                            .endTime(OffsetDateTime.parse("2024-01-01T01:01:01.123Z"))
                            .externalId("aa714f4d52a37ab1a00b21af9566e379")
                            .grantor("SMITH")
                            .number("07-21-07W")
                            .origin("THIRD_PARTY_DATASOURCE")
                            .origNetwork("OPS1")
                            .remarks("PPR remark")
                            .requestor("jsmith1")
                            .sourceDl("AXE")
                            .startTime(OffsetDateTime.parse("2024-01-01T01:01:01.123Z"))
                            .type(SortiePprFull.Type.M)
                            .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .updatedBy("some.user")
                            .build()
                    )
                    .sourceDl("AXE")
                    .tailNumber("Tail_1")
                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .updatedBy("some.user")
                    .build()
            )
        assertThat(airTransportMissionFull.alias()).contains("PACIFIC DEPLOY / CHAP 3 MOVEMENT")
        assertThat(airTransportMissionFull.allocatedUnit()).contains("437 AEW")
        assertThat(airTransportMissionFull.amcMissionId()).contains("AJM7939B1123")
        assertThat(airTransportMissionFull.apacsId()).contains("1083034")
        assertThat(airTransportMissionFull.atoCallSign()).contains("CHARLIE")
        assertThat(airTransportMissionFull.atoMissionId()).contains("8900")
        assertThat(airTransportMissionFull.callSign()).contains("RCH123")
        assertThat(airTransportMissionFull.createdAt())
            .contains(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
        assertThat(airTransportMissionFull.createdBy()).contains("some.user")
        assertThat(airTransportMissionFull.cw()).contains(true)
        assertThat(airTransportMissionFull.dipWorksheetName()).contains("G2-182402-AB")
        assertThat(airTransportMissionFull.firstPickUp()).contains("KFAY")
        assertThat(airTransportMissionFull.gdssMissionId())
            .contains("1e6edeec-72e9-aaec-d33c-51147cb5ffdd")
        assertThat(airTransportMissionFull.hazMat().getOrNull())
            .containsExactly(
                AirTransportMissionFull.HazMat.builder()
                    .applicableNotes("11,12")
                    .cgc("A")
                    .cgn("4,5,7,8")
                    .classDiv(1.1)
                    .extHazMatId("cb6289e0f38534e01291ab6421d42724")
                    .itemName("LITHIUM METAL BATTERIES")
                    .netExpWt(12.1)
                    .offIcao("MBPV")
                    .offItin(300)
                    .onIcao("LIRQ")
                    .onItin(50)
                    .pieces(29)
                    .planned("P")
                    .unNum("0181")
                    .weight(22.1)
                    .build()
            )
        assertThat(airTransportMissionFull.jcsPriority()).contains("1A3")
        assertThat(airTransportMissionFull.lastDropOff()).contains("PGUA")
        assertThat(airTransportMissionFull.loadCategoryType()).contains("MIXED")
        assertThat(airTransportMissionFull.m1()).contains("11")
        assertThat(airTransportMissionFull.m2()).contains("3214")
        assertThat(airTransportMissionFull.m3a()).contains("6655")
        assertThat(airTransportMissionFull.naf()).contains("18AF")
        assertThat(airTransportMissionFull.nextAmcMissionId()).contains("AJM7939B1124")
        assertThat(airTransportMissionFull.nextMissionId())
            .contains("186e5658-1079-45c0-bccc-02d2fa31b663")
        assertThat(airTransportMissionFull.node()).contains("45TEST")
        assertThat(airTransportMissionFull.objective()).contains("Deliver water to island X.")
        assertThat(airTransportMissionFull.operation()).contains("Golden Eye")
        assertThat(airTransportMissionFull.origin()).contains("THIRD_PARTY_DATASOURCE")
        assertThat(airTransportMissionFull.origMissionId())
            .contains("614bebb6-a62e-053c-ca51-e79f8a402b28")
        assertThat(airTransportMissionFull.origNetwork()).contains("OPS1")
        assertThat(airTransportMissionFull.prevAmcMissionId()).contains("AJM7939B1122")
        assertThat(airTransportMissionFull.prevMissionId())
            .contains("a77055df-edc3-4047-a5fa-604f80b9fe3c")
        assertThat(airTransportMissionFull.purpose())
            .contains(
                "People at island X need water ASAP. Two previous attempts failed due to weather."
            )
        assertThat(airTransportMissionFull.remarks().getOrNull())
            .containsExactly(
                AirTransportMissionFull.Remark.builder()
                    .date(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                    .gdssRemarkId("GDSSREMARK-ID")
                    .itineraryNum(825)
                    .text("Example mission remarks.")
                    .type("MP")
                    .user("John Doe")
                    .build()
            )
        assertThat(airTransportMissionFull.requirements().getOrNull())
            .containsExactly(
                AirTransportMissionFull.Requirement.builder()
                    .bulkWeight(1.3)
                    .ead(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .gdssReqId("23a1fb67-cc2d-5ebe-6b99-68130cb1aa6c")
                    .lad(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .numAmbulatory(10)
                    .numAttendant(10)
                    .numLitter(10)
                    .numPax(44)
                    .offloadId(300)
                    .offloadLoCode("KHOP")
                    .onloadId(200)
                    .onloadLoCode("KCHS")
                    .oplan("5027")
                    .outsizeWeight(1.3)
                    .oversizeWeight(1.3)
                    .projName("CENTINTRA21")
                    .transReqNum("T01ME01")
                    .uln("T01ME01")
                    .build()
            )
        assertThat(airTransportMissionFull.sourceDl()).contains("AXE")
        assertThat(airTransportMissionFull.sourceSysDeviation()).contains(-90.12)
        assertThat(airTransportMissionFull.state()).contains("EXECUTION")
        assertThat(airTransportMissionFull.type()).contains("SAAM")
        assertThat(airTransportMissionFull.updatedAt())
            .contains(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
        assertThat(airTransportMissionFull.updatedBy()).contains("some.user")
    }

    @Test
    fun roundtrip() {
        val jsonMapper = jsonMapper()
        val airTransportMissionFull =
            AirTransportMissionFull.builder()
                .classificationMarking("U")
                .dataMode(AirTransportMissionFull.DataMode.TEST)
                .source("Bluestaq")
                .id("bdad6945-c9e4-b829-f7be-1ad075541921")
                .abp("ZZ12")
                .addAircraftSorty(
                    AircraftsortieFull.builder()
                        .classificationMarking("U")
                        .dataMode(AircraftsortieFull.DataMode.TEST)
                        .plannedDepTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
                        .source("Bluestaq")
                        .id("AIRCRAFTSORTIE-ID")
                        .actualArrTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
                        .actualBlockInTime(OffsetDateTime.parse("2021-01-01T01:06:01.123Z"))
                        .actualBlockOutTime(OffsetDateTime.parse("2021-01-01T00:55:01.123Z"))
                        .actualDepTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
                        .aircraftAdsb("AE123C")
                        .aircraftAltId("ALT-AIRCRAFT-ID")
                        .aircraftEvent("Example event")
                        .aircraftMds("C017A")
                        .aircraftRemarks("Some remark about aircraft A")
                        .alertStatus(22)
                        .alertStatusCode("C1")
                        .amcMsnNum("AJM512571333")
                        .amcMsnType("SAAM")
                        .arrFaa("FAA1")
                        .arrIata("AAA")
                        .arrIcao("KCOS")
                        .arrItinerary(101)
                        .arrPurposeCode("O")
                        .callSign("BAKER")
                        .cargoConfig("C-1")
                        .commanderName("Smith")
                        .createdAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                        .createdBy("some.user")
                        .crew(
                            CrewFull.builder()
                                .classificationMarking("U")
                                .dataMode(CrewFull.DataMode.TEST)
                                .origCrewId("JHJDHjhuu929o92")
                                .source("Bluestaq")
                                .id("bdad6945-c9e4-b829-f7be-1ad075541921")
                                .adjReturnTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                .adjReturnTimeApprover("Smith")
                                .aircraftMds("C017A")
                                .alertedTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                                .alertType("ALPHA")
                                .armsCrewUnit("00016ALSQ")
                                .addAssignedQualCode("AL")
                                .addAssignedQualCode("CS")
                                .commanderId("763a1c1e8d2f3c16af825a11e3f1f579")
                                .commanderLast4Ssn("1234")
                                .commanderName("John Doe")
                                .createdAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .crewHome(false)
                                .addCrewMember(
                                    CrewFull.CrewMember.builder()
                                        .alerted(true)
                                        .allSortie(true)
                                        .approved(true)
                                        .attached(true)
                                        .branch("Air Force")
                                        .civilian(false)
                                        .commander(false)
                                        .crewPosition("EP A")
                                        .dodId("0123456789")
                                        .dutyPosition("IP")
                                        .dutyStatus("AGR")
                                        .emailed(true)
                                        .extraTime(true)
                                        .firstName("Freddie")
                                        .fltCurrencyExp(
                                            OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                        )
                                        .fltCurrencyExpId("SS05AM")
                                        .fltRecDate(
                                            OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                        )
                                        .fltRecDue(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                        .flySquadron("141ARS")
                                        .funded(true)
                                        .gender("F")
                                        .gndCurrencyExp(
                                            OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                        )
                                        .gndCurrencyExpId("AH03YM")
                                        .grounded(true)
                                        .guestStart(
                                            OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                        )
                                        .guestStop(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                        .last4Ssn("1234")
                                        .lastFltDate(
                                            OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                        )
                                        .lastName("Smith")
                                        .loanedTo("Thunderbirds")
                                        .lodging("Peterson SFB")
                                        .memberActualAlertTime(
                                            OffsetDateTime.parse("2024-02-26T09:15:00.123Z")
                                        )
                                        .memberAdjReturnTime(
                                            OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                        )
                                        .memberAdjReturnTimeApprover("Smith")
                                        .memberId("12345678abc")
                                        .memberInitStartTime(
                                            OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                        )
                                        .memberLastAlertTime(
                                            OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                        )
                                        .memberLegalAlertTime(
                                            OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                        )
                                        .memberPickupTime(
                                            OffsetDateTime.parse("2024-02-26T10:15:00.123Z")
                                        )
                                        .memberPostRestOffset("+05:00")
                                        .memberPostRestTime(
                                            OffsetDateTime.parse("2024-01-02T16:00:00.123Z")
                                        )
                                        .memberPreRestTime(
                                            OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                        )
                                        .memberRemarks("Crew member remark")
                                        .memberReturnTime(
                                            OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                        )
                                        .memberSchedAlertTime(
                                            OffsetDateTime.parse("2024-02-26T09:15:00.123Z")
                                        )
                                        .memberSource("ACTIVE")
                                        .memberStageName("Falcon Squadron")
                                        .memberTransportReq(true)
                                        .memberType("AIRCREW")
                                        .middleInitial("G")
                                        .notified(true)
                                        .phoneNumber("+14155552671")
                                        .physAvCode("D")
                                        .physAvStatus("OVERDUE")
                                        .physDue(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                        .rank("Capt")
                                        .remarkCode("ABE33")
                                        .rmsMds("C017A")
                                        .showTime(OffsetDateTime.parse("2024-02-26T10:15:00.123Z"))
                                        .squadron("21AS")
                                        .trainingDate(
                                            OffsetDateTime.parse("2024-01-01T16:00:00.123Z")
                                        )
                                        .username("fgsmith")
                                        .wing("60AMW")
                                        .build()
                                )
                                .crewName("falcon")
                                .crewRms("ARMS")
                                .crewRole("DEADHEAD")
                                .crewSource("ACTIVE")
                                .crewSquadron("21AS")
                                .crewType("AIRLAND")
                                .crewUnit("00016ALSQ")
                                .crewWing("60AMW")
                                .currentIcao("KCOS")
                                .fdpEligType("A")
                                .fdpType("A")
                                .femaleEnlistedQty(2)
                                .femaleOfficerQty(1)
                                .fltAuthNum("KT001")
                                .idSiteCurrent("b677cf3b-d44d-450e-8b8f-d23f997f8778")
                                .idSortie("4ef3d1e8-ab08-ab70-498f-edc479734e5c")
                                .initStartTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                .lastAlertTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                .legalAlertTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                                .legalBravoTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                                .linkedTask(false)
                                .maleEnlistedQty(3)
                                .maleOfficerQty(1)
                                .missionAlias("PACIFIC DEPLOY / CHAP 3 MOVEMENT")
                                .missionId("AJM123456123")
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .personnelType("AIRCREW")
                                .pickupTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                .postRestApplied(false)
                                .postRestEnd(OffsetDateTime.parse("2024-01-02T16:00:00.123Z"))
                                .postRestOffset("+05:00")
                                .preRestApplied(false)
                                .preRestStart(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                .addReqQualCode("AL")
                                .addReqQualCode("CS")
                                .returnTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                                .sourceDl("AXE")
                                .stage1Qual("1AXXX")
                                .stage2Qual("2AXXX")
                                .stage3Qual("3AXXX")
                                .stageName("Falcon Squadron")
                                .stageTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                                .status("APPROVED")
                                .transportReq(true)
                                .tripKit("TK-1234")
                                .updatedAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .build()
                        )
                        .currentState("Park")
                        .delayCode("500")
                        .depFaa("FAA1")
                        .depIata("AAA")
                        .depIcao("KCOS")
                        .depItinerary(100)
                        .depPurposeCode("P")
                        .dhd(OffsetDateTime.parse("2021-01-03T01:01:01.123Z"))
                        .dhdReason("Due for maintenance")
                        .estArrTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
                        .estBlockInTime(OffsetDateTime.parse("2021-01-01T01:06:01.123Z"))
                        .estBlockOutTime(OffsetDateTime.parse("2021-01-01T00:55:01.123Z"))
                        .estDepTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
                        .filename("ExampleFileName")
                        .filesize(12)
                        .flightTime(104.5)
                        .fmDeskNum("7198675309")
                        .fmName("Smith")
                        .fuelReq(20000.1)
                        .gndTime(387.8)
                        .idAircraft("REF-AIRCRAFT-ID")
                        .idMission("fa18d96e-91ea-60da-a7a8-1af6500066c8")
                        .jcsPriority("1A3")
                        .legNum(14)
                        .lineNumber(99)
                        .missionId("ABLE")
                        .missionUpdate(OffsetDateTime.parse("2024-09-09T01:01:01.123Z"))
                        .objectiveRemarks("Some objective remark about aircraft A")
                        .origin("THIRD_PARTY_DATASOURCE")
                        .origNetwork("OPS1")
                        .origSortieId("A0640")
                        .oxyOnCrew(12.3)
                        .oxyOnPax(12.3)
                        .oxyReqCrew(12.3)
                        .oxyReqPax(12.3)
                        .paperStatus(AircraftsortieFull.PaperStatus.PUBLISHED)
                        .papersVersion("1.1")
                        .parkingLoc("KCOS")
                        .passengers(17)
                        .plannedArrTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
                        .pprStatus(AircraftsortieFull.PprStatus.PENDING)
                        .primaryScl("ABC")
                        .rawFileUri("Example URI")
                        .reqConfig("C-1")
                        .resultRemarks("Some remark about aircraft A")
                        .rvnReq(AircraftsortieFull.RvnReq.R)
                        .scheduleRemarks("Some schedule remark about aircraft A")
                        .secondaryScl("ABC")
                        .soe("OPS")
                        .sortieDate(LocalDate.parse("2021-01-01"))
                        .addSortiePpr(
                            SortiePprFull.builder()
                                .classificationMarking("U")
                                .dataMode(SortiePprFull.DataMode.TEST)
                                .idSortie("4ef3d1e8-ab08-ab70-498f-edc479734e5c")
                                .source("Bluestaq")
                                .id("SORTIEPPR-ID")
                                .createdAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .endTime(OffsetDateTime.parse("2024-01-01T01:01:01.123Z"))
                                .externalId("aa714f4d52a37ab1a00b21af9566e379")
                                .grantor("SMITH")
                                .number("07-21-07W")
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .remarks("PPR remark")
                                .requestor("jsmith1")
                                .sourceDl("AXE")
                                .startTime(OffsetDateTime.parse("2024-01-01T01:01:01.123Z"))
                                .type(SortiePprFull.Type.M)
                                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .build()
                        )
                        .sourceDl("AXE")
                        .tailNumber("Tail_1")
                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .updatedBy("some.user")
                        .build()
                )
                .alias("PACIFIC DEPLOY / CHAP 3 MOVEMENT")
                .allocatedUnit("437 AEW")
                .amcMissionId("AJM7939B1123")
                .apacsId("1083034")
                .atoCallSign("CHARLIE")
                .atoMissionId("8900")
                .callSign("RCH123")
                .createdAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                .createdBy("some.user")
                .cw(true)
                .dipWorksheetName("G2-182402-AB")
                .firstPickUp("KFAY")
                .gdssMissionId("1e6edeec-72e9-aaec-d33c-51147cb5ffdd")
                .addHazMat(
                    AirTransportMissionFull.HazMat.builder()
                        .applicableNotes("11,12")
                        .cgc("A")
                        .cgn("4,5,7,8")
                        .classDiv(1.1)
                        .extHazMatId("cb6289e0f38534e01291ab6421d42724")
                        .itemName("LITHIUM METAL BATTERIES")
                        .netExpWt(12.1)
                        .offIcao("MBPV")
                        .offItin(300)
                        .onIcao("LIRQ")
                        .onItin(50)
                        .pieces(29)
                        .planned("P")
                        .unNum("0181")
                        .weight(22.1)
                        .build()
                )
                .jcsPriority("1A3")
                .lastDropOff("PGUA")
                .loadCategoryType("MIXED")
                .m1("11")
                .m2("3214")
                .m3a("6655")
                .naf("18AF")
                .nextAmcMissionId("AJM7939B1124")
                .nextMissionId("186e5658-1079-45c0-bccc-02d2fa31b663")
                .node("45TEST")
                .objective("Deliver water to island X.")
                .operation("Golden Eye")
                .origin("THIRD_PARTY_DATASOURCE")
                .origMissionId("614bebb6-a62e-053c-ca51-e79f8a402b28")
                .origNetwork("OPS1")
                .prevAmcMissionId("AJM7939B1122")
                .prevMissionId("a77055df-edc3-4047-a5fa-604f80b9fe3c")
                .purpose(
                    "People at island X need water ASAP. Two previous attempts failed due to weather."
                )
                .addRemark(
                    AirTransportMissionFull.Remark.builder()
                        .date(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                        .gdssRemarkId("GDSSREMARK-ID")
                        .itineraryNum(825)
                        .text("Example mission remarks.")
                        .type("MP")
                        .user("John Doe")
                        .build()
                )
                .addRequirement(
                    AirTransportMissionFull.Requirement.builder()
                        .bulkWeight(1.3)
                        .ead(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .gdssReqId("23a1fb67-cc2d-5ebe-6b99-68130cb1aa6c")
                        .lad(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .numAmbulatory(10)
                        .numAttendant(10)
                        .numLitter(10)
                        .numPax(44)
                        .offloadId(300)
                        .offloadLoCode("KHOP")
                        .onloadId(200)
                        .onloadLoCode("KCHS")
                        .oplan("5027")
                        .outsizeWeight(1.3)
                        .oversizeWeight(1.3)
                        .projName("CENTINTRA21")
                        .transReqNum("T01ME01")
                        .uln("T01ME01")
                        .build()
                )
                .sourceDl("AXE")
                .sourceSysDeviation(-90.12)
                .state("EXECUTION")
                .type("SAAM")
                .updatedAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                .updatedBy("some.user")
                .build()

        val roundtrippedAirTransportMissionFull =
            jsonMapper.readValue(
                jsonMapper.writeValueAsString(airTransportMissionFull),
                jacksonTypeRef<AirTransportMissionFull>(),
            )

        assertThat(roundtrippedAirTransportMissionFull).isEqualTo(airTransportMissionFull)
    }
}
