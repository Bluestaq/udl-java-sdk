// File generated from our OpenAPI spec by Stainless.

package com.unifieddatalibrary.api.models

import com.fasterxml.jackson.module.kotlin.jacksonTypeRef
import com.unifieddatalibrary.api.core.jsonMapper
import java.time.LocalDate
import java.time.OffsetDateTime
import kotlin.jvm.optionals.getOrNull
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class BusFullTest {

    @Test
    fun create() {
        val busFull =
            BusFull.builder()
                .classificationMarking("U")
                .dataMode(BusFull.DataMode.TEST)
                .name("Example name")
                .source("Bluestaq")
                .id("BUS-ID")
                .aocsNotes("Example notes")
                .avgDryMass(2879.1)
                .avgPayloadMass(10.1)
                .avgPayloadPower(10.1)
                .avgSpacecraftPower(10.1)
                .avgWetMass(5246.1)
                .bodyDimensionX(10.1)
                .bodyDimensionY(10.1)
                .bodyDimensionZ(10.1)
                .busKitDesignerOrgId("BUSKITDESIGNERORG-ID")
                .countryCode("US")
                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                .createdBy("some.user")
                .description("Dedicated small spacecraft bus.")
                .entity(
                    EntityFull.builder()
                        .classificationMarking("U")
                        .dataMode(EntityFull.DataMode.TEST)
                        .name("Example name")
                        .source("Bluestaq")
                        .type(EntityFull.Type.ONORBIT)
                        .countryCode("US")
                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .createdBy("some.user")
                        .idEntity("ENTITY-ID")
                        .idLocation("LOCATION-ID")
                        .idOnOrbit("ONORBIT-ID")
                        .idOperatingUnit("OPERATINGUNIT-ID")
                        .location(
                            LocationFull.builder()
                                .classificationMarking("U")
                                .dataMode(LocationFull.DataMode.TEST)
                                .name("Example location")
                                .source("Bluestaq")
                                .altitude(10.23)
                                .countryCode("US")
                                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .idLocation("LOCATION-ID")
                                .lat(45.23)
                                .lon(179.1)
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .build()
                        )
                        .onOrbit(
                            EntityFull.OnOrbit.builder()
                                .classificationMarking("U")
                                .dataMode(EntityFull.OnOrbit.DataMode.TEST)
                                .satNo(1)
                                .source("Bluestaq")
                                .altName("Alternate Name")
                                .addAntenna(
                                    OnorbitAntennaFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OnorbitAntennaFull.DataMode.TEST)
                                        .idAntenna("ANTENNA-ID")
                                        .idOnOrbit("ONORBIT-ID")
                                        .source("Bluestaq")
                                        .id("ONORBITANTENNA-ID")
                                        .antenna(
                                            AntennaFull.builder()
                                                .dataMode(AntennaFull.DataMode.TEST)
                                                .name("IRIDIUM NEXT 121-ANTENNA-10075")
                                                .source("Bluestaq")
                                                .id("ANTENNA-ID")
                                                .addAntennaDetail(
                                                    AntennaDetailsFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(AntennaDetailsFull.DataMode.TEST)
                                                        .idAntenna("ANTENNA-ID")
                                                        .source("Bluestaq")
                                                        .id("ANTENNADETAILS-ID")
                                                        .beamForming(false)
                                                        .beamwidth(14.1)
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .description("Description of antenna A")
                                                        .diameter(0.01)
                                                        .endFrequency(3.3)
                                                        .gain(20.1)
                                                        .gainTolerance(5.1)
                                                        .manufacturerOrg(
                                                            OrganizationFull.builder()
                                                                .classificationMarking("U")
                                                                .dataMode(
                                                                    OrganizationFull.DataMode.TEST
                                                                )
                                                                .name("some.user")
                                                                .source("some.user")
                                                                .type("GOVERNMENT")
                                                                .id("ORGANIZATION-ID")
                                                                .active(false)
                                                                .category("Private company")
                                                                .countryCode("US")
                                                                .createdAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .createdBy("some.user")
                                                                .description("Example description")
                                                                .externalId("EXTERNAL-ID")
                                                                .nationality("US")
                                                                .addOrganizationDetail(
                                                                    OrganizationDetailsFull
                                                                        .builder()
                                                                        .classificationMarking("U")
                                                                        .dataMode(
                                                                            OrganizationDetailsFull
                                                                                .DataMode
                                                                                .TEST
                                                                        )
                                                                        .idOrganization(
                                                                            "ORGANIZATION-ID"
                                                                        )
                                                                        .name("some.user")
                                                                        .source("some.user")
                                                                        .id(
                                                                            "ORGANIZATIONDETAILS-ID"
                                                                        )
                                                                        .address1("123 Main Street")
                                                                        .address2("Apt 4B")
                                                                        .address3(
                                                                            "Colorado Springs CO, 80903"
                                                                        )
                                                                        .broker("some.user")
                                                                        .ceo("some.user")
                                                                        .cfo("some.user")
                                                                        .createdAt(
                                                                            OffsetDateTime.parse(
                                                                                "2018-01-01T16:00:00.123Z"
                                                                            )
                                                                        )
                                                                        .createdBy("some.user")
                                                                        .cto("some.user")
                                                                        .description(
                                                                            "Example description"
                                                                        )
                                                                        .ebitda(123.4)
                                                                        .email(
                                                                            "some_organization@organization.com"
                                                                        )
                                                                        .financialNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .financialYearEndDate(
                                                                            OffsetDateTime.parse(
                                                                                "2021-01-01T01:01:01.123Z"
                                                                            )
                                                                        )
                                                                        .fleetPlanNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .formerOrgId("FORMERORG-ID")
                                                                        .ftes(123)
                                                                        .geoAdminLevel1("Colorado")
                                                                        .geoAdminLevel2(
                                                                            "El Paso County"
                                                                        )
                                                                        .geoAdminLevel3(
                                                                            "Colorado Springs"
                                                                        )
                                                                        .massRanking(123)
                                                                        .origin("some.user")
                                                                        .origNetwork("OPS1")
                                                                        .parentOrgId("PARENTORG-ID")
                                                                        .postalCode("80903")
                                                                        .profit(123.4)
                                                                        .revenue(123.4)
                                                                        .revenueRanking(123)
                                                                        .riskManager("some.user")
                                                                        .servicesNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .addTag("PROVIDER_TAG1")
                                                                        .addTag("PROVIDER_TAG2")
                                                                        .updatedAt(
                                                                            OffsetDateTime.parse(
                                                                                "2018-01-01T16:00:00.123Z"
                                                                            )
                                                                        )
                                                                        .updatedBy("some.user")
                                                                        .build()
                                                                )
                                                                .origin("some.user")
                                                                .origNetwork("OPS1")
                                                                .updatedAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .updatedBy("some.user")
                                                                .build()
                                                        )
                                                        .manufacturerOrgId("MANUFACTUREORG-ID")
                                                        .mode(AntennaDetailsFull.Mode.TX)
                                                        .origin("THIRD_PARTY_DATASOURCE")
                                                        .origNetwork("OPS1")
                                                        .polarization(45.1)
                                                        .position("Top")
                                                        .addSize(0.03)
                                                        .addSize(0.05)
                                                        .startFrequency(2.1)
                                                        .steerable(false)
                                                        .addTag("PROVIDER_TAG1")
                                                        .addTag("PROVIDER_TAG2")
                                                        .type("Reflector")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .addBattery(
                                    OnorbitBatteryFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OnorbitBatteryFull.DataMode.TEST)
                                        .idBattery("BATTERY-ID")
                                        .idOnOrbit("ONORBIT-ID")
                                        .source("Bluestaq")
                                        .id("ONORBITBATTERY-ID")
                                        .battery(
                                            BatteryFull.builder()
                                                .dataMode(BatteryFull.DataMode.TEST)
                                                .name("JAK-BATTERY-1479")
                                                .source("Bluestaq")
                                                .id("BATTERY-ID")
                                                .addBatteryDetail(
                                                    BatterydetailsFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(BatterydetailsFull.DataMode.TEST)
                                                        .idBattery("BATTERY-ID")
                                                        .source("Bluestaq")
                                                        .id("BATTERYDETAILS-ID")
                                                        .capacity(10.1)
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .description("example notes")
                                                        .dischargeDepth(0.2)
                                                        .manufacturerOrg(
                                                            OrganizationFull.builder()
                                                                .classificationMarking("U")
                                                                .dataMode(
                                                                    OrganizationFull.DataMode.TEST
                                                                )
                                                                .name("some.user")
                                                                .source("some.user")
                                                                .type("GOVERNMENT")
                                                                .id("ORGANIZATION-ID")
                                                                .active(false)
                                                                .category("Private company")
                                                                .countryCode("US")
                                                                .createdAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .createdBy("some.user")
                                                                .description("Example description")
                                                                .externalId("EXTERNAL-ID")
                                                                .nationality("US")
                                                                .addOrganizationDetail(
                                                                    OrganizationDetailsFull
                                                                        .builder()
                                                                        .classificationMarking("U")
                                                                        .dataMode(
                                                                            OrganizationDetailsFull
                                                                                .DataMode
                                                                                .TEST
                                                                        )
                                                                        .idOrganization(
                                                                            "ORGANIZATION-ID"
                                                                        )
                                                                        .name("some.user")
                                                                        .source("some.user")
                                                                        .id(
                                                                            "ORGANIZATIONDETAILS-ID"
                                                                        )
                                                                        .address1("123 Main Street")
                                                                        .address2("Apt 4B")
                                                                        .address3(
                                                                            "Colorado Springs CO, 80903"
                                                                        )
                                                                        .broker("some.user")
                                                                        .ceo("some.user")
                                                                        .cfo("some.user")
                                                                        .createdAt(
                                                                            OffsetDateTime.parse(
                                                                                "2018-01-01T16:00:00.123Z"
                                                                            )
                                                                        )
                                                                        .createdBy("some.user")
                                                                        .cto("some.user")
                                                                        .description(
                                                                            "Example description"
                                                                        )
                                                                        .ebitda(123.4)
                                                                        .email(
                                                                            "some_organization@organization.com"
                                                                        )
                                                                        .financialNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .financialYearEndDate(
                                                                            OffsetDateTime.parse(
                                                                                "2021-01-01T01:01:01.123Z"
                                                                            )
                                                                        )
                                                                        .fleetPlanNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .formerOrgId("FORMERORG-ID")
                                                                        .ftes(123)
                                                                        .geoAdminLevel1("Colorado")
                                                                        .geoAdminLevel2(
                                                                            "El Paso County"
                                                                        )
                                                                        .geoAdminLevel3(
                                                                            "Colorado Springs"
                                                                        )
                                                                        .massRanking(123)
                                                                        .origin("some.user")
                                                                        .origNetwork("OPS1")
                                                                        .parentOrgId("PARENTORG-ID")
                                                                        .postalCode("80903")
                                                                        .profit(123.4)
                                                                        .revenue(123.4)
                                                                        .revenueRanking(123)
                                                                        .riskManager("some.user")
                                                                        .servicesNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .addTag("PROVIDER_TAG1")
                                                                        .addTag("PROVIDER_TAG2")
                                                                        .updatedAt(
                                                                            OffsetDateTime.parse(
                                                                                "2018-01-01T16:00:00.123Z"
                                                                            )
                                                                        )
                                                                        .updatedBy("some.user")
                                                                        .build()
                                                                )
                                                                .origin("some.user")
                                                                .origNetwork("OPS1")
                                                                .updatedAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .updatedBy("some.user")
                                                                .build()
                                                        )
                                                        .manufacturerOrgId("MANUFACTURERORG-ID")
                                                        .model("11212")
                                                        .origin("THIRD_PARTY_DATASOURCE")
                                                        .origNetwork("OPS1")
                                                        .addTag("PROVIDER_TAG1")
                                                        .addTag("PROVIDER_TAG2")
                                                        .technology("Ni-Cd")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .quantity(5)
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .category(EntityFull.OnOrbit.Category.LUNAR)
                                .commonName("Example common name")
                                .constellation("Big Dipper")
                                .countryCode("US")
                                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .decayDate(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .idOnOrbit("ONORBIT-ID")
                                .intlDes("2021123ABC")
                                .launchDate(LocalDate.parse("2018-01-01"))
                                .launchSiteId("LAUNCHSITE-ID")
                                .lifetimeYears(10)
                                .missionNumber("Expedition 1")
                                .objectType(EntityFull.OnOrbit.ObjectType.PAYLOAD)
                                .addOnorbitDetail(
                                    OnorbitDetailsFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OnorbitDetailsFull.DataMode.TEST)
                                        .idOnOrbit("REF-ONORBIT-ID")
                                        .source("Bluestaq")
                                        .id("ONORBITDETAILS-ID")
                                        .additionalMass(10.23)
                                        .adeptRadius(10.23)
                                        .bolDeltaV(1000.1)
                                        .bolFuelMass(10.23)
                                        .busCrossSection(10.23)
                                        .busType("A2100")
                                        .colaRadius(10.23)
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .crossSection(10.23)
                                        .currentMass(500.0)
                                        .deltaVUnc(50.1)
                                        .addDepEstMass(20.0)
                                        .addDepEstMass(21.0)
                                        .addDepMassUnc(10.0)
                                        .addDepMassUnc(5.0)
                                        .addDepName("GOES-18A")
                                        .addDepName("GOES-18B")
                                        .driftRate(1.23)
                                        .dryMass(10.23)
                                        .estDeltaVDuration(10.23)
                                        .fuelRemaining(10.23)
                                        .geoSlot(90.23)
                                        .lastObSource("THIRD_PARTY_DATASOURCE")
                                        .lastObTime(
                                            OffsetDateTime.parse("2021-01-01T01:01:01.123456Z")
                                        )
                                        .launchMass(10.23)
                                        .launchMassMax(15.23)
                                        .launchMassMin(5.23)
                                        .maneuverable(false)
                                        .maxDeltaV(10.23)
                                        .maxRadius(10.23)
                                        .addMissionType("Weather")
                                        .addMissionType("Space Weather")
                                        .numDeployable(2)
                                        .numMission(2)
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .rcs(10.23)
                                        .rcsMax(15.23)
                                        .rcsMean(10.23)
                                        .rcsMin(5.23)
                                        .refSource("Wikipedia")
                                        .solarArrayArea(10.23)
                                        .totalMassUnc(50.1)
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .vismag(10.23)
                                        .vismagMax(15.23)
                                        .vismagMean(10.23)
                                        .vismagMin(5.23)
                                        .build()
                                )
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .addSolarArray(
                                    OnorbitSolarArrayFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OnorbitSolarArrayFull.DataMode.TEST)
                                        .idOnOrbit("ONORBIT-ID")
                                        .idSolarArray("SOLARARRAY-ID")
                                        .source("Bluestaq")
                                        .id("ONORBITSOLARARRAY-ID")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .quantity(10)
                                        .solarArray(
                                            SolarArrayFull.builder()
                                                .dataMode(SolarArrayFull.DataMode.TEST)
                                                .name("Solar1")
                                                .source("Bluestaq")
                                                .id("SOLARARRAY-ID")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .addSolarArrayDetail(
                                                    SolarArrayDetailsFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(
                                                            SolarArrayDetailsFull.DataMode.TEST
                                                        )
                                                        .idSolarArray("SOLARARRAY-ID")
                                                        .source("Bluestaq")
                                                        .id("SOLARARRAYDETAILS-ID")
                                                        .area(123.4)
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .description("Example notes")
                                                        .junctionTechnology("Triple")
                                                        .manufacturerOrg(
                                                            OrganizationFull.builder()
                                                                .classificationMarking("U")
                                                                .dataMode(
                                                                    OrganizationFull.DataMode.TEST
                                                                )
                                                                .name("some.user")
                                                                .source("some.user")
                                                                .type("GOVERNMENT")
                                                                .id("ORGANIZATION-ID")
                                                                .active(false)
                                                                .category("Private company")
                                                                .countryCode("US")
                                                                .createdAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .createdBy("some.user")
                                                                .description("Example description")
                                                                .externalId("EXTERNAL-ID")
                                                                .nationality("US")
                                                                .addOrganizationDetail(
                                                                    OrganizationDetailsFull
                                                                        .builder()
                                                                        .classificationMarking("U")
                                                                        .dataMode(
                                                                            OrganizationDetailsFull
                                                                                .DataMode
                                                                                .TEST
                                                                        )
                                                                        .idOrganization(
                                                                            "ORGANIZATION-ID"
                                                                        )
                                                                        .name("some.user")
                                                                        .source("some.user")
                                                                        .id(
                                                                            "ORGANIZATIONDETAILS-ID"
                                                                        )
                                                                        .address1("123 Main Street")
                                                                        .address2("Apt 4B")
                                                                        .address3(
                                                                            "Colorado Springs CO, 80903"
                                                                        )
                                                                        .broker("some.user")
                                                                        .ceo("some.user")
                                                                        .cfo("some.user")
                                                                        .createdAt(
                                                                            OffsetDateTime.parse(
                                                                                "2018-01-01T16:00:00.123Z"
                                                                            )
                                                                        )
                                                                        .createdBy("some.user")
                                                                        .cto("some.user")
                                                                        .description(
                                                                            "Example description"
                                                                        )
                                                                        .ebitda(123.4)
                                                                        .email(
                                                                            "some_organization@organization.com"
                                                                        )
                                                                        .financialNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .financialYearEndDate(
                                                                            OffsetDateTime.parse(
                                                                                "2021-01-01T01:01:01.123Z"
                                                                            )
                                                                        )
                                                                        .fleetPlanNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .formerOrgId("FORMERORG-ID")
                                                                        .ftes(123)
                                                                        .geoAdminLevel1("Colorado")
                                                                        .geoAdminLevel2(
                                                                            "El Paso County"
                                                                        )
                                                                        .geoAdminLevel3(
                                                                            "Colorado Springs"
                                                                        )
                                                                        .massRanking(123)
                                                                        .origin("some.user")
                                                                        .origNetwork("OPS1")
                                                                        .parentOrgId("PARENTORG-ID")
                                                                        .postalCode("80903")
                                                                        .profit(123.4)
                                                                        .revenue(123.4)
                                                                        .revenueRanking(123)
                                                                        .riskManager("some.user")
                                                                        .servicesNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .addTag("PROVIDER_TAG1")
                                                                        .addTag("PROVIDER_TAG2")
                                                                        .updatedAt(
                                                                            OffsetDateTime.parse(
                                                                                "2018-01-01T16:00:00.123Z"
                                                                            )
                                                                        )
                                                                        .updatedBy("some.user")
                                                                        .build()
                                                                )
                                                                .origin("some.user")
                                                                .origNetwork("OPS1")
                                                                .updatedAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .updatedBy("some.user")
                                                                .build()
                                                        )
                                                        .manufacturerOrgId("MANUFACTURERORG-ID")
                                                        .origin("THIRD_PARTY_DATASOURCE")
                                                        .origNetwork("OPS1")
                                                        .span(123.4)
                                                        .addTag("TAG1")
                                                        .addTag("TAG2")
                                                        .technology("Ga-As")
                                                        .type("U Shaped")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .addThruster(
                                    OnorbitThrusterFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OnorbitThrusterFull.DataMode.TEST)
                                        .idEngine("ENGINE-ID")
                                        .idOnOrbit("ONORBIT-ID")
                                        .source("Bluestaq")
                                        .id("ONORBITTHRUSTER-ID")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .engine(
                                            Engine.builder()
                                                .classificationMarking("U")
                                                .dataMode(Engine.DataMode.TEST)
                                                .name("ENGINE_VARIANT1")
                                                .source("Bluestaq")
                                                .id("ENGINE-ID")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .addEngineDetail(
                                                    EngineDetailsFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(EngineDetailsFull.DataMode.TEST)
                                                        .idEngine("ENGINE-ID")
                                                        .source("Bluestaq")
                                                        .id("ENGINEDETAILS-ID")
                                                        .burnTime(1.1)
                                                        .chamberPressure(1.1)
                                                        .characteristicType("Electric")
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .cycleType("Pressure Fed")
                                                        .family("ENGINE_TYPE1")
                                                        .manufacturerOrgId("MANUFACTURERORG-ID")
                                                        .maxFirings(5)
                                                        .notes("Example notes")
                                                        .nozzleExpansionRatio(1.1)
                                                        .origin("THIRD_PARTY_DATASOURCE")
                                                        .origNetwork("OPS1")
                                                        .oxidizer("Liquid Oxygen")
                                                        .propellant("Liquid")
                                                        .seaLevelThrust(1.1)
                                                        .specificImpulse(1.1)
                                                        .addTag("PROVIDER_TAG1")
                                                        .addTag("PROVIDER_TAG2")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .vacuumThrust(1.1)
                                                        .build()
                                                )
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .quantity(10)
                                        .type("Hydrazine REA")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .build()
                        )
                        .operatingUnit(
                            OperatingunitFull.builder()
                                .classificationMarking("U")
                                .dataMode(OperatingunitFull.DataMode.TEST)
                                .name("SOME_NAME")
                                .source("some.user")
                                .airDefArea("AL006")
                                .allegiance("OTHR")
                                .altAllegiance("HL")
                                .altCountryCode("IZ")
                                .altOperatingUnitId("32100000000021")
                                .classRating("1")
                                .condition("RDY")
                                .conditionAvail("A")
                                .coord("340000000N0430000000E")
                                .coordDatum("WGS")
                                .coordDerivAcc(12.345)
                                .countryCode("IQ")
                                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .deployStatus("ND")
                                .description("Description of unit")
                                .divCat("5")
                                .echelon("SHIP")
                                .echelonTier("68")
                                .elevMsl(123.45)
                                .elevMslConfLvl(50)
                                .elevMslDerivAcc(12.34)
                                .eval(7)
                                .flagFlown("IZ")
                                .fleetId("A")
                                .force("NV")
                                .forceName("FORCE-NAME")
                                .fpa("EOB")
                                .functRole("MIL")
                                .geoidalMslSep(12.34)
                                .idContact("CONTACT-ID")
                                .ident("FRIEND")
                                .idLocation("LOCATION-ID")
                                .idOperatingUnit("OPERATINGUNIT-ID")
                                .idOrganization("ORGANIZATION-ID")
                                .lat(45.23)
                                .location(
                                    LocationFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(LocationFull.DataMode.TEST)
                                        .name("Example location")
                                        .source("Bluestaq")
                                        .altitude(10.23)
                                        .countryCode("US")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .idLocation("LOCATION-ID")
                                        .lat(45.23)
                                        .lon(179.1)
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .locName("LOCATION_NAME")
                                .locReason("GR")
                                .lon(179.1)
                                .masterUnit(true)
                                .milGrid("4QFJ12345678")
                                .milGridSys("UTM")
                                .msnPrimary("W6")
                                .msnPrimarySpecialty("QK")
                                .addOperatingUnitRemark(
                                    OperatingUnitRemarkFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OperatingUnitRemarkFull.DataMode.TEST)
                                        .idOperatingUnit("OperatingUnit-ID")
                                        .source("some.user")
                                        .text("This is a remark")
                                        .id("0167f577-e06c-358e-85aa-0a07a730bdd0")
                                        .altRmkId("123456ABC")
                                        .code("M")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .name("Remark name")
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .type("Restriction")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .operStatus("OPR")
                                .organization(
                                    OrganizationFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OrganizationFull.DataMode.TEST)
                                        .name("some.user")
                                        .source("some.user")
                                        .type("GOVERNMENT")
                                        .id("ORGANIZATION-ID")
                                        .active(false)
                                        .category("Private company")
                                        .countryCode("US")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .description("Example description")
                                        .externalId("EXTERNAL-ID")
                                        .nationality("US")
                                        .addOrganizationDetail(
                                            OrganizationDetailsFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(OrganizationDetailsFull.DataMode.TEST)
                                                .idOrganization("ORGANIZATION-ID")
                                                .name("some.user")
                                                .source("some.user")
                                                .id("ORGANIZATIONDETAILS-ID")
                                                .address1("123 Main Street")
                                                .address2("Apt 4B")
                                                .address3("Colorado Springs CO, 80903")
                                                .broker("some.user")
                                                .ceo("some.user")
                                                .cfo("some.user")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .cto("some.user")
                                                .description("Example description")
                                                .ebitda(123.4)
                                                .email("some_organization@organization.com")
                                                .financialNotes("Example notes")
                                                .financialYearEndDate(
                                                    OffsetDateTime.parse("2021-01-01T01:01:01.123Z")
                                                )
                                                .fleetPlanNotes("Example notes")
                                                .formerOrgId("FORMERORG-ID")
                                                .ftes(123)
                                                .geoAdminLevel1("Colorado")
                                                .geoAdminLevel2("El Paso County")
                                                .geoAdminLevel3("Colorado Springs")
                                                .massRanking(123)
                                                .origin("some.user")
                                                .origNetwork("OPS1")
                                                .parentOrgId("PARENTORG-ID")
                                                .postalCode("80903")
                                                .profit(123.4)
                                                .revenue(123.4)
                                                .revenueRanking(123)
                                                .riskManager("some.user")
                                                .servicesNotes("Example notes")
                                                .addTag("PROVIDER_TAG1")
                                                .addTag("PROVIDER_TAG2")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .origin("some.user")
                                        .origNetwork("OPS1")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .origin("THIRD_PARTY_DATASOURCE")
                                .polSubdiv("IZ07")
                                .recStatus("A")
                                .referenceDoc("Provider Reference Documentation")
                                .resProd("RT")
                                .reviewDate(LocalDate.parse("2008-06-10"))
                                .stylizedUnit(true)
                                .symCode("SOGPU----------")
                                .unitIdentifier("AZXAZ12345")
                                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .utm("19P4390691376966")
                                .wac("0427")
                                .build()
                        )
                        .origin("THIRD_PARTY_DATASOURCE")
                        .origNetwork("OPS1")
                        .ownerType(EntityFull.OwnerType.COMMERCIAL)
                        .addRfBand(
                            RfBandFull.builder()
                                .classificationMarking("U")
                                .dataMode(RfBandFull.DataMode.TEST)
                                .idEntity("ENTITY-ID")
                                .name("BAND_NAME")
                                .source("Bluestaq")
                                .id("ad88770b-d824-443f-bdce-5f9e3fa500a9")
                                .band("Ku")
                                .bandwidth(100.23)
                                .addBandwidthSetting(250.1)
                                .addBandwidthSetting(500.1)
                                .beamwidth(45.23)
                                .addBeamwidthSetting(5.1)
                                .addBeamwidthSetting(10.1)
                                .centerFreq(1000.23)
                                .createdAt(OffsetDateTime.parse("2025-03-05T16:00:00.123Z"))
                                .createdBy("some.user")
                                .addDelaySetting(2.77)
                                .addDelaySetting(5.64)
                                .edgeGain(100.23)
                                .eirp(2.23)
                                .erp(2.23)
                                .freqMax(2000.23)
                                .freqMin(50.23)
                                .addFrequencySetting(12250.1)
                                .addFrequencySetting(15000.1)
                                .addGainSetting(2.77)
                                .addGainSetting(5.64)
                                .mode(RfBandFull.Mode.TX)
                                .addNoiseSetting(0.00033)
                                .addNoiseSetting(0.0033)
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .peakGain(120.23)
                                .polarization(RfBandFull.Polarization.H)
                                .purpose(RfBandFull.Purpose.TTC)
                                .updatedAt(OffsetDateTime.parse("2025-03-05T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .build()
                        )
                        .addStatusCollection(
                            StatusFull.builder()
                                .classificationMarking("U")
                                .dataMode(StatusFull.DataMode.TEST)
                                .idEntity("ENTITY-ID")
                                .source("Bluestaq")
                                .id("STATUS-ID")
                                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .declassificationDate(
                                    OffsetDateTime.parse("2021-01-01T01:02:02.123Z")
                                )
                                .declassificationString("U")
                                .derivedFrom("SOME_SOURCE")
                                .notes("Example Notes")
                                .opsCap(StatusFull.OpsCap.FMC)
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .state(StatusFull.State.ACTIVE)
                                .addSubStatusCollection(
                                    SubStatusFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(SubStatusFull.DataMode.TEST)
                                        .notes("Sample Notes")
                                        .source("Bluestaq")
                                        .status(SubStatusFull.Status.FMC)
                                        .statusId("REF-STATUS-ID")
                                        .type(SubStatusFull.Type.MD_CAP)
                                        .id("SUBSTATUS-ID")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .sysCap(StatusFull.SysCap.FMC)
                                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .build()
                        )
                        .taskable(false)
                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .updatedBy("some.user")
                        .addUrl("URL1")
                        .addUrl("URL2")
                        .build()
                )
                .generic(false)
                .idEntity("0167f577-e06c-358e-85aa-0a07a730bdd0")
                .launchEnvelopeDimensionX(10.1)
                .launchEnvelopeDimensionY(10.1)
                .launchEnvelopeDimensionZ(10.1)
                .mainComputerManufacturerOrgId("MAINCOMPUTERMANUFACTURERORG-ID")
                .manufacturerOrgId("MANUFACTURERORG-ID")
                .massCategory("Nanosatellite")
                .maxBolPowerLower(10.1)
                .maxBolPowerUpper(10.1)
                .maxBolStationMass(10.1)
                .maxDryMass(2900.1)
                .maxEolPowerLower(10.1)
                .maxEolPowerUpper(10.1)
                .maxLaunchMassLower(10.1)
                .maxLaunchMassUpper(10.1)
                .maxPayloadMass(10.1)
                .maxPayloadPower(10.1)
                .maxSpacecraftPower(10.1)
                .maxWetMass(5300.0)
                .medianDryMass(2950.1)
                .medianWetMass(5260.1)
                .minDryMass(2858.1)
                .minWetMass(5192.1)
                .numOrbitType(3)
                .oapPayloadPower(10.1)
                .oapSpacecraftPower(10.1)
                .orbitTypes(listOf("LEO", "HEO", "GEO"))
                .origin("THIRD_PARTY_DATASOURCE")
                .origNetwork("OPS1")
                .payloadDimensionX(1.1)
                .payloadDimensionY(1.1)
                .payloadDimensionZ(1.1)
                .payloadVolume(1.1)
                .powerCategory("low power")
                .telemetryTrackingManufacturerOrgId("TELEMETRYTRACKINGMANUFACTURERORG-ID")
                .type("Example type")
                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                .updatedBy("some.user")
                .build()

        assertThat(busFull.classificationMarking()).isEqualTo("U")
        assertThat(busFull.dataMode()).isEqualTo(BusFull.DataMode.TEST)
        assertThat(busFull.name()).isEqualTo("Example name")
        assertThat(busFull.source()).isEqualTo("Bluestaq")
        assertThat(busFull.id()).contains("BUS-ID")
        assertThat(busFull.aocsNotes()).contains("Example notes")
        assertThat(busFull.avgDryMass()).contains(2879.1)
        assertThat(busFull.avgPayloadMass()).contains(10.1)
        assertThat(busFull.avgPayloadPower()).contains(10.1)
        assertThat(busFull.avgSpacecraftPower()).contains(10.1)
        assertThat(busFull.avgWetMass()).contains(5246.1)
        assertThat(busFull.bodyDimensionX()).contains(10.1)
        assertThat(busFull.bodyDimensionY()).contains(10.1)
        assertThat(busFull.bodyDimensionZ()).contains(10.1)
        assertThat(busFull.busKitDesignerOrgId()).contains("BUSKITDESIGNERORG-ID")
        assertThat(busFull.countryCode()).contains("US")
        assertThat(busFull.createdAt()).contains(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
        assertThat(busFull.createdBy()).contains("some.user")
        assertThat(busFull.description()).contains("Dedicated small spacecraft bus.")
        assertThat(busFull.entity())
            .contains(
                EntityFull.builder()
                    .classificationMarking("U")
                    .dataMode(EntityFull.DataMode.TEST)
                    .name("Example name")
                    .source("Bluestaq")
                    .type(EntityFull.Type.ONORBIT)
                    .countryCode("US")
                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .idEntity("ENTITY-ID")
                    .idLocation("LOCATION-ID")
                    .idOnOrbit("ONORBIT-ID")
                    .idOperatingUnit("OPERATINGUNIT-ID")
                    .location(
                        LocationFull.builder()
                            .classificationMarking("U")
                            .dataMode(LocationFull.DataMode.TEST)
                            .name("Example location")
                            .source("Bluestaq")
                            .altitude(10.23)
                            .countryCode("US")
                            .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .createdBy("some.user")
                            .idLocation("LOCATION-ID")
                            .lat(45.23)
                            .lon(179.1)
                            .origin("THIRD_PARTY_DATASOURCE")
                            .origNetwork("OPS1")
                            .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .updatedBy("some.user")
                            .build()
                    )
                    .onOrbit(
                        EntityFull.OnOrbit.builder()
                            .classificationMarking("U")
                            .dataMode(EntityFull.OnOrbit.DataMode.TEST)
                            .satNo(1)
                            .source("Bluestaq")
                            .altName("Alternate Name")
                            .addAntenna(
                                OnorbitAntennaFull.builder()
                                    .classificationMarking("U")
                                    .dataMode(OnorbitAntennaFull.DataMode.TEST)
                                    .idAntenna("ANTENNA-ID")
                                    .idOnOrbit("ONORBIT-ID")
                                    .source("Bluestaq")
                                    .id("ONORBITANTENNA-ID")
                                    .antenna(
                                        AntennaFull.builder()
                                            .dataMode(AntennaFull.DataMode.TEST)
                                            .name("IRIDIUM NEXT 121-ANTENNA-10075")
                                            .source("Bluestaq")
                                            .id("ANTENNA-ID")
                                            .addAntennaDetail(
                                                AntennaDetailsFull.builder()
                                                    .classificationMarking("U")
                                                    .dataMode(AntennaDetailsFull.DataMode.TEST)
                                                    .idAntenna("ANTENNA-ID")
                                                    .source("Bluestaq")
                                                    .id("ANTENNADETAILS-ID")
                                                    .beamForming(false)
                                                    .beamwidth(14.1)
                                                    .createdAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .createdBy("some.user")
                                                    .description("Description of antenna A")
                                                    .diameter(0.01)
                                                    .endFrequency(3.3)
                                                    .gain(20.1)
                                                    .gainTolerance(5.1)
                                                    .manufacturerOrg(
                                                        OrganizationFull.builder()
                                                            .classificationMarking("U")
                                                            .dataMode(
                                                                OrganizationFull.DataMode.TEST
                                                            )
                                                            .name("some.user")
                                                            .source("some.user")
                                                            .type("GOVERNMENT")
                                                            .id("ORGANIZATION-ID")
                                                            .active(false)
                                                            .category("Private company")
                                                            .countryCode("US")
                                                            .createdAt(
                                                                OffsetDateTime.parse(
                                                                    "2018-01-01T16:00:00.123Z"
                                                                )
                                                            )
                                                            .createdBy("some.user")
                                                            .description("Example description")
                                                            .externalId("EXTERNAL-ID")
                                                            .nationality("US")
                                                            .addOrganizationDetail(
                                                                OrganizationDetailsFull.builder()
                                                                    .classificationMarking("U")
                                                                    .dataMode(
                                                                        OrganizationDetailsFull
                                                                            .DataMode
                                                                            .TEST
                                                                    )
                                                                    .idOrganization(
                                                                        "ORGANIZATION-ID"
                                                                    )
                                                                    .name("some.user")
                                                                    .source("some.user")
                                                                    .id("ORGANIZATIONDETAILS-ID")
                                                                    .address1("123 Main Street")
                                                                    .address2("Apt 4B")
                                                                    .address3(
                                                                        "Colorado Springs CO, 80903"
                                                                    )
                                                                    .broker("some.user")
                                                                    .ceo("some.user")
                                                                    .cfo("some.user")
                                                                    .createdAt(
                                                                        OffsetDateTime.parse(
                                                                            "2018-01-01T16:00:00.123Z"
                                                                        )
                                                                    )
                                                                    .createdBy("some.user")
                                                                    .cto("some.user")
                                                                    .description(
                                                                        "Example description"
                                                                    )
                                                                    .ebitda(123.4)
                                                                    .email(
                                                                        "some_organization@organization.com"
                                                                    )
                                                                    .financialNotes("Example notes")
                                                                    .financialYearEndDate(
                                                                        OffsetDateTime.parse(
                                                                            "2021-01-01T01:01:01.123Z"
                                                                        )
                                                                    )
                                                                    .fleetPlanNotes("Example notes")
                                                                    .formerOrgId("FORMERORG-ID")
                                                                    .ftes(123)
                                                                    .geoAdminLevel1("Colorado")
                                                                    .geoAdminLevel2(
                                                                        "El Paso County"
                                                                    )
                                                                    .geoAdminLevel3(
                                                                        "Colorado Springs"
                                                                    )
                                                                    .massRanking(123)
                                                                    .origin("some.user")
                                                                    .origNetwork("OPS1")
                                                                    .parentOrgId("PARENTORG-ID")
                                                                    .postalCode("80903")
                                                                    .profit(123.4)
                                                                    .revenue(123.4)
                                                                    .revenueRanking(123)
                                                                    .riskManager("some.user")
                                                                    .servicesNotes("Example notes")
                                                                    .addTag("PROVIDER_TAG1")
                                                                    .addTag("PROVIDER_TAG2")
                                                                    .updatedAt(
                                                                        OffsetDateTime.parse(
                                                                            "2018-01-01T16:00:00.123Z"
                                                                        )
                                                                    )
                                                                    .updatedBy("some.user")
                                                                    .build()
                                                            )
                                                            .origin("some.user")
                                                            .origNetwork("OPS1")
                                                            .updatedAt(
                                                                OffsetDateTime.parse(
                                                                    "2018-01-01T16:00:00.123Z"
                                                                )
                                                            )
                                                            .updatedBy("some.user")
                                                            .build()
                                                    )
                                                    .manufacturerOrgId("MANUFACTUREORG-ID")
                                                    .mode(AntennaDetailsFull.Mode.TX)
                                                    .origin("THIRD_PARTY_DATASOURCE")
                                                    .origNetwork("OPS1")
                                                    .polarization(45.1)
                                                    .position("Top")
                                                    .addSize(0.03)
                                                    .addSize(0.05)
                                                    .startFrequency(2.1)
                                                    .steerable(false)
                                                    .addTag("PROVIDER_TAG1")
                                                    .addTag("PROVIDER_TAG2")
                                                    .type("Reflector")
                                                    .updatedAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .updatedBy("some.user")
                                                    .build()
                                            )
                                            .createdAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .createdBy("some.user")
                                            .origin("THIRD_PARTY_DATASOURCE")
                                            .origNetwork("OPS1")
                                            .updatedAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .updatedBy("some.user")
                                            .build()
                                    )
                                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .origin("THIRD_PARTY_DATASOURCE")
                                    .origNetwork("OPS1")
                                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .updatedBy("some.user")
                                    .build()
                            )
                            .addBattery(
                                OnorbitBatteryFull.builder()
                                    .classificationMarking("U")
                                    .dataMode(OnorbitBatteryFull.DataMode.TEST)
                                    .idBattery("BATTERY-ID")
                                    .idOnOrbit("ONORBIT-ID")
                                    .source("Bluestaq")
                                    .id("ONORBITBATTERY-ID")
                                    .battery(
                                        BatteryFull.builder()
                                            .dataMode(BatteryFull.DataMode.TEST)
                                            .name("JAK-BATTERY-1479")
                                            .source("Bluestaq")
                                            .id("BATTERY-ID")
                                            .addBatteryDetail(
                                                BatterydetailsFull.builder()
                                                    .classificationMarking("U")
                                                    .dataMode(BatterydetailsFull.DataMode.TEST)
                                                    .idBattery("BATTERY-ID")
                                                    .source("Bluestaq")
                                                    .id("BATTERYDETAILS-ID")
                                                    .capacity(10.1)
                                                    .createdAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .createdBy("some.user")
                                                    .description("example notes")
                                                    .dischargeDepth(0.2)
                                                    .manufacturerOrg(
                                                        OrganizationFull.builder()
                                                            .classificationMarking("U")
                                                            .dataMode(
                                                                OrganizationFull.DataMode.TEST
                                                            )
                                                            .name("some.user")
                                                            .source("some.user")
                                                            .type("GOVERNMENT")
                                                            .id("ORGANIZATION-ID")
                                                            .active(false)
                                                            .category("Private company")
                                                            .countryCode("US")
                                                            .createdAt(
                                                                OffsetDateTime.parse(
                                                                    "2018-01-01T16:00:00.123Z"
                                                                )
                                                            )
                                                            .createdBy("some.user")
                                                            .description("Example description")
                                                            .externalId("EXTERNAL-ID")
                                                            .nationality("US")
                                                            .addOrganizationDetail(
                                                                OrganizationDetailsFull.builder()
                                                                    .classificationMarking("U")
                                                                    .dataMode(
                                                                        OrganizationDetailsFull
                                                                            .DataMode
                                                                            .TEST
                                                                    )
                                                                    .idOrganization(
                                                                        "ORGANIZATION-ID"
                                                                    )
                                                                    .name("some.user")
                                                                    .source("some.user")
                                                                    .id("ORGANIZATIONDETAILS-ID")
                                                                    .address1("123 Main Street")
                                                                    .address2("Apt 4B")
                                                                    .address3(
                                                                        "Colorado Springs CO, 80903"
                                                                    )
                                                                    .broker("some.user")
                                                                    .ceo("some.user")
                                                                    .cfo("some.user")
                                                                    .createdAt(
                                                                        OffsetDateTime.parse(
                                                                            "2018-01-01T16:00:00.123Z"
                                                                        )
                                                                    )
                                                                    .createdBy("some.user")
                                                                    .cto("some.user")
                                                                    .description(
                                                                        "Example description"
                                                                    )
                                                                    .ebitda(123.4)
                                                                    .email(
                                                                        "some_organization@organization.com"
                                                                    )
                                                                    .financialNotes("Example notes")
                                                                    .financialYearEndDate(
                                                                        OffsetDateTime.parse(
                                                                            "2021-01-01T01:01:01.123Z"
                                                                        )
                                                                    )
                                                                    .fleetPlanNotes("Example notes")
                                                                    .formerOrgId("FORMERORG-ID")
                                                                    .ftes(123)
                                                                    .geoAdminLevel1("Colorado")
                                                                    .geoAdminLevel2(
                                                                        "El Paso County"
                                                                    )
                                                                    .geoAdminLevel3(
                                                                        "Colorado Springs"
                                                                    )
                                                                    .massRanking(123)
                                                                    .origin("some.user")
                                                                    .origNetwork("OPS1")
                                                                    .parentOrgId("PARENTORG-ID")
                                                                    .postalCode("80903")
                                                                    .profit(123.4)
                                                                    .revenue(123.4)
                                                                    .revenueRanking(123)
                                                                    .riskManager("some.user")
                                                                    .servicesNotes("Example notes")
                                                                    .addTag("PROVIDER_TAG1")
                                                                    .addTag("PROVIDER_TAG2")
                                                                    .updatedAt(
                                                                        OffsetDateTime.parse(
                                                                            "2018-01-01T16:00:00.123Z"
                                                                        )
                                                                    )
                                                                    .updatedBy("some.user")
                                                                    .build()
                                                            )
                                                            .origin("some.user")
                                                            .origNetwork("OPS1")
                                                            .updatedAt(
                                                                OffsetDateTime.parse(
                                                                    "2018-01-01T16:00:00.123Z"
                                                                )
                                                            )
                                                            .updatedBy("some.user")
                                                            .build()
                                                    )
                                                    .manufacturerOrgId("MANUFACTURERORG-ID")
                                                    .model("11212")
                                                    .origin("THIRD_PARTY_DATASOURCE")
                                                    .origNetwork("OPS1")
                                                    .addTag("PROVIDER_TAG1")
                                                    .addTag("PROVIDER_TAG2")
                                                    .technology("Ni-Cd")
                                                    .updatedAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .updatedBy("some.user")
                                                    .build()
                                            )
                                            .createdAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .createdBy("some.user")
                                            .origin("THIRD_PARTY_DATASOURCE")
                                            .origNetwork("OPS1")
                                            .updatedAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .updatedBy("some.user")
                                            .build()
                                    )
                                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .origin("THIRD_PARTY_DATASOURCE")
                                    .origNetwork("OPS1")
                                    .quantity(5)
                                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .updatedBy("some.user")
                                    .build()
                            )
                            .category(EntityFull.OnOrbit.Category.LUNAR)
                            .commonName("Example common name")
                            .constellation("Big Dipper")
                            .countryCode("US")
                            .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .createdBy("some.user")
                            .decayDate(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .idOnOrbit("ONORBIT-ID")
                            .intlDes("2021123ABC")
                            .launchDate(LocalDate.parse("2018-01-01"))
                            .launchSiteId("LAUNCHSITE-ID")
                            .lifetimeYears(10)
                            .missionNumber("Expedition 1")
                            .objectType(EntityFull.OnOrbit.ObjectType.PAYLOAD)
                            .addOnorbitDetail(
                                OnorbitDetailsFull.builder()
                                    .classificationMarking("U")
                                    .dataMode(OnorbitDetailsFull.DataMode.TEST)
                                    .idOnOrbit("REF-ONORBIT-ID")
                                    .source("Bluestaq")
                                    .id("ONORBITDETAILS-ID")
                                    .additionalMass(10.23)
                                    .adeptRadius(10.23)
                                    .bolDeltaV(1000.1)
                                    .bolFuelMass(10.23)
                                    .busCrossSection(10.23)
                                    .busType("A2100")
                                    .colaRadius(10.23)
                                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .crossSection(10.23)
                                    .currentMass(500.0)
                                    .deltaVUnc(50.1)
                                    .addDepEstMass(20.0)
                                    .addDepEstMass(21.0)
                                    .addDepMassUnc(10.0)
                                    .addDepMassUnc(5.0)
                                    .addDepName("GOES-18A")
                                    .addDepName("GOES-18B")
                                    .driftRate(1.23)
                                    .dryMass(10.23)
                                    .estDeltaVDuration(10.23)
                                    .fuelRemaining(10.23)
                                    .geoSlot(90.23)
                                    .lastObSource("THIRD_PARTY_DATASOURCE")
                                    .lastObTime(OffsetDateTime.parse("2021-01-01T01:01:01.123456Z"))
                                    .launchMass(10.23)
                                    .launchMassMax(15.23)
                                    .launchMassMin(5.23)
                                    .maneuverable(false)
                                    .maxDeltaV(10.23)
                                    .maxRadius(10.23)
                                    .addMissionType("Weather")
                                    .addMissionType("Space Weather")
                                    .numDeployable(2)
                                    .numMission(2)
                                    .origin("THIRD_PARTY_DATASOURCE")
                                    .origNetwork("OPS1")
                                    .rcs(10.23)
                                    .rcsMax(15.23)
                                    .rcsMean(10.23)
                                    .rcsMin(5.23)
                                    .refSource("Wikipedia")
                                    .solarArrayArea(10.23)
                                    .totalMassUnc(50.1)
                                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .updatedBy("some.user")
                                    .vismag(10.23)
                                    .vismagMax(15.23)
                                    .vismagMean(10.23)
                                    .vismagMin(5.23)
                                    .build()
                            )
                            .origin("THIRD_PARTY_DATASOURCE")
                            .origNetwork("OPS1")
                            .addSolarArray(
                                OnorbitSolarArrayFull.builder()
                                    .classificationMarking("U")
                                    .dataMode(OnorbitSolarArrayFull.DataMode.TEST)
                                    .idOnOrbit("ONORBIT-ID")
                                    .idSolarArray("SOLARARRAY-ID")
                                    .source("Bluestaq")
                                    .id("ONORBITSOLARARRAY-ID")
                                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .origin("THIRD_PARTY_DATASOURCE")
                                    .origNetwork("OPS1")
                                    .quantity(10)
                                    .solarArray(
                                        SolarArrayFull.builder()
                                            .dataMode(SolarArrayFull.DataMode.TEST)
                                            .name("Solar1")
                                            .source("Bluestaq")
                                            .id("SOLARARRAY-ID")
                                            .createdAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .createdBy("some.user")
                                            .origin("THIRD_PARTY_DATASOURCE")
                                            .origNetwork("OPS1")
                                            .addSolarArrayDetail(
                                                SolarArrayDetailsFull.builder()
                                                    .classificationMarking("U")
                                                    .dataMode(SolarArrayDetailsFull.DataMode.TEST)
                                                    .idSolarArray("SOLARARRAY-ID")
                                                    .source("Bluestaq")
                                                    .id("SOLARARRAYDETAILS-ID")
                                                    .area(123.4)
                                                    .createdAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .createdBy("some.user")
                                                    .description("Example notes")
                                                    .junctionTechnology("Triple")
                                                    .manufacturerOrg(
                                                        OrganizationFull.builder()
                                                            .classificationMarking("U")
                                                            .dataMode(
                                                                OrganizationFull.DataMode.TEST
                                                            )
                                                            .name("some.user")
                                                            .source("some.user")
                                                            .type("GOVERNMENT")
                                                            .id("ORGANIZATION-ID")
                                                            .active(false)
                                                            .category("Private company")
                                                            .countryCode("US")
                                                            .createdAt(
                                                                OffsetDateTime.parse(
                                                                    "2018-01-01T16:00:00.123Z"
                                                                )
                                                            )
                                                            .createdBy("some.user")
                                                            .description("Example description")
                                                            .externalId("EXTERNAL-ID")
                                                            .nationality("US")
                                                            .addOrganizationDetail(
                                                                OrganizationDetailsFull.builder()
                                                                    .classificationMarking("U")
                                                                    .dataMode(
                                                                        OrganizationDetailsFull
                                                                            .DataMode
                                                                            .TEST
                                                                    )
                                                                    .idOrganization(
                                                                        "ORGANIZATION-ID"
                                                                    )
                                                                    .name("some.user")
                                                                    .source("some.user")
                                                                    .id("ORGANIZATIONDETAILS-ID")
                                                                    .address1("123 Main Street")
                                                                    .address2("Apt 4B")
                                                                    .address3(
                                                                        "Colorado Springs CO, 80903"
                                                                    )
                                                                    .broker("some.user")
                                                                    .ceo("some.user")
                                                                    .cfo("some.user")
                                                                    .createdAt(
                                                                        OffsetDateTime.parse(
                                                                            "2018-01-01T16:00:00.123Z"
                                                                        )
                                                                    )
                                                                    .createdBy("some.user")
                                                                    .cto("some.user")
                                                                    .description(
                                                                        "Example description"
                                                                    )
                                                                    .ebitda(123.4)
                                                                    .email(
                                                                        "some_organization@organization.com"
                                                                    )
                                                                    .financialNotes("Example notes")
                                                                    .financialYearEndDate(
                                                                        OffsetDateTime.parse(
                                                                            "2021-01-01T01:01:01.123Z"
                                                                        )
                                                                    )
                                                                    .fleetPlanNotes("Example notes")
                                                                    .formerOrgId("FORMERORG-ID")
                                                                    .ftes(123)
                                                                    .geoAdminLevel1("Colorado")
                                                                    .geoAdminLevel2(
                                                                        "El Paso County"
                                                                    )
                                                                    .geoAdminLevel3(
                                                                        "Colorado Springs"
                                                                    )
                                                                    .massRanking(123)
                                                                    .origin("some.user")
                                                                    .origNetwork("OPS1")
                                                                    .parentOrgId("PARENTORG-ID")
                                                                    .postalCode("80903")
                                                                    .profit(123.4)
                                                                    .revenue(123.4)
                                                                    .revenueRanking(123)
                                                                    .riskManager("some.user")
                                                                    .servicesNotes("Example notes")
                                                                    .addTag("PROVIDER_TAG1")
                                                                    .addTag("PROVIDER_TAG2")
                                                                    .updatedAt(
                                                                        OffsetDateTime.parse(
                                                                            "2018-01-01T16:00:00.123Z"
                                                                        )
                                                                    )
                                                                    .updatedBy("some.user")
                                                                    .build()
                                                            )
                                                            .origin("some.user")
                                                            .origNetwork("OPS1")
                                                            .updatedAt(
                                                                OffsetDateTime.parse(
                                                                    "2018-01-01T16:00:00.123Z"
                                                                )
                                                            )
                                                            .updatedBy("some.user")
                                                            .build()
                                                    )
                                                    .manufacturerOrgId("MANUFACTURERORG-ID")
                                                    .origin("THIRD_PARTY_DATASOURCE")
                                                    .origNetwork("OPS1")
                                                    .span(123.4)
                                                    .addTag("TAG1")
                                                    .addTag("TAG2")
                                                    .technology("Ga-As")
                                                    .type("U Shaped")
                                                    .updatedAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .updatedBy("some.user")
                                                    .build()
                                            )
                                            .updatedAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .updatedBy("some.user")
                                            .build()
                                    )
                                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .updatedBy("some.user")
                                    .build()
                            )
                            .addThruster(
                                OnorbitThrusterFull.builder()
                                    .classificationMarking("U")
                                    .dataMode(OnorbitThrusterFull.DataMode.TEST)
                                    .idEngine("ENGINE-ID")
                                    .idOnOrbit("ONORBIT-ID")
                                    .source("Bluestaq")
                                    .id("ONORBITTHRUSTER-ID")
                                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .engine(
                                        Engine.builder()
                                            .classificationMarking("U")
                                            .dataMode(Engine.DataMode.TEST)
                                            .name("ENGINE_VARIANT1")
                                            .source("Bluestaq")
                                            .id("ENGINE-ID")
                                            .createdAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .createdBy("some.user")
                                            .addEngineDetail(
                                                EngineDetailsFull.builder()
                                                    .classificationMarking("U")
                                                    .dataMode(EngineDetailsFull.DataMode.TEST)
                                                    .idEngine("ENGINE-ID")
                                                    .source("Bluestaq")
                                                    .id("ENGINEDETAILS-ID")
                                                    .burnTime(1.1)
                                                    .chamberPressure(1.1)
                                                    .characteristicType("Electric")
                                                    .createdAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .createdBy("some.user")
                                                    .cycleType("Pressure Fed")
                                                    .family("ENGINE_TYPE1")
                                                    .manufacturerOrgId("MANUFACTURERORG-ID")
                                                    .maxFirings(5)
                                                    .notes("Example notes")
                                                    .nozzleExpansionRatio(1.1)
                                                    .origin("THIRD_PARTY_DATASOURCE")
                                                    .origNetwork("OPS1")
                                                    .oxidizer("Liquid Oxygen")
                                                    .propellant("Liquid")
                                                    .seaLevelThrust(1.1)
                                                    .specificImpulse(1.1)
                                                    .addTag("PROVIDER_TAG1")
                                                    .addTag("PROVIDER_TAG2")
                                                    .updatedAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .updatedBy("some.user")
                                                    .vacuumThrust(1.1)
                                                    .build()
                                            )
                                            .origin("THIRD_PARTY_DATASOURCE")
                                            .origNetwork("OPS1")
                                            .updatedAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .updatedBy("some.user")
                                            .build()
                                    )
                                    .origin("THIRD_PARTY_DATASOURCE")
                                    .origNetwork("OPS1")
                                    .quantity(10)
                                    .type("Hydrazine REA")
                                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .updatedBy("some.user")
                                    .build()
                            )
                            .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .updatedBy("some.user")
                            .build()
                    )
                    .operatingUnit(
                        OperatingunitFull.builder()
                            .classificationMarking("U")
                            .dataMode(OperatingunitFull.DataMode.TEST)
                            .name("SOME_NAME")
                            .source("some.user")
                            .airDefArea("AL006")
                            .allegiance("OTHR")
                            .altAllegiance("HL")
                            .altCountryCode("IZ")
                            .altOperatingUnitId("32100000000021")
                            .classRating("1")
                            .condition("RDY")
                            .conditionAvail("A")
                            .coord("340000000N0430000000E")
                            .coordDatum("WGS")
                            .coordDerivAcc(12.345)
                            .countryCode("IQ")
                            .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .createdBy("some.user")
                            .deployStatus("ND")
                            .description("Description of unit")
                            .divCat("5")
                            .echelon("SHIP")
                            .echelonTier("68")
                            .elevMsl(123.45)
                            .elevMslConfLvl(50)
                            .elevMslDerivAcc(12.34)
                            .eval(7)
                            .flagFlown("IZ")
                            .fleetId("A")
                            .force("NV")
                            .forceName("FORCE-NAME")
                            .fpa("EOB")
                            .functRole("MIL")
                            .geoidalMslSep(12.34)
                            .idContact("CONTACT-ID")
                            .ident("FRIEND")
                            .idLocation("LOCATION-ID")
                            .idOperatingUnit("OPERATINGUNIT-ID")
                            .idOrganization("ORGANIZATION-ID")
                            .lat(45.23)
                            .location(
                                LocationFull.builder()
                                    .classificationMarking("U")
                                    .dataMode(LocationFull.DataMode.TEST)
                                    .name("Example location")
                                    .source("Bluestaq")
                                    .altitude(10.23)
                                    .countryCode("US")
                                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .idLocation("LOCATION-ID")
                                    .lat(45.23)
                                    .lon(179.1)
                                    .origin("THIRD_PARTY_DATASOURCE")
                                    .origNetwork("OPS1")
                                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .updatedBy("some.user")
                                    .build()
                            )
                            .locName("LOCATION_NAME")
                            .locReason("GR")
                            .lon(179.1)
                            .masterUnit(true)
                            .milGrid("4QFJ12345678")
                            .milGridSys("UTM")
                            .msnPrimary("W6")
                            .msnPrimarySpecialty("QK")
                            .addOperatingUnitRemark(
                                OperatingUnitRemarkFull.builder()
                                    .classificationMarking("U")
                                    .dataMode(OperatingUnitRemarkFull.DataMode.TEST)
                                    .idOperatingUnit("OperatingUnit-ID")
                                    .source("some.user")
                                    .text("This is a remark")
                                    .id("0167f577-e06c-358e-85aa-0a07a730bdd0")
                                    .altRmkId("123456ABC")
                                    .code("M")
                                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .name("Remark name")
                                    .origin("THIRD_PARTY_DATASOURCE")
                                    .type("Restriction")
                                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .updatedBy("some.user")
                                    .build()
                            )
                            .operStatus("OPR")
                            .organization(
                                OrganizationFull.builder()
                                    .classificationMarking("U")
                                    .dataMode(OrganizationFull.DataMode.TEST)
                                    .name("some.user")
                                    .source("some.user")
                                    .type("GOVERNMENT")
                                    .id("ORGANIZATION-ID")
                                    .active(false)
                                    .category("Private company")
                                    .countryCode("US")
                                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .description("Example description")
                                    .externalId("EXTERNAL-ID")
                                    .nationality("US")
                                    .addOrganizationDetail(
                                        OrganizationDetailsFull.builder()
                                            .classificationMarking("U")
                                            .dataMode(OrganizationDetailsFull.DataMode.TEST)
                                            .idOrganization("ORGANIZATION-ID")
                                            .name("some.user")
                                            .source("some.user")
                                            .id("ORGANIZATIONDETAILS-ID")
                                            .address1("123 Main Street")
                                            .address2("Apt 4B")
                                            .address3("Colorado Springs CO, 80903")
                                            .broker("some.user")
                                            .ceo("some.user")
                                            .cfo("some.user")
                                            .createdAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .createdBy("some.user")
                                            .cto("some.user")
                                            .description("Example description")
                                            .ebitda(123.4)
                                            .email("some_organization@organization.com")
                                            .financialNotes("Example notes")
                                            .financialYearEndDate(
                                                OffsetDateTime.parse("2021-01-01T01:01:01.123Z")
                                            )
                                            .fleetPlanNotes("Example notes")
                                            .formerOrgId("FORMERORG-ID")
                                            .ftes(123)
                                            .geoAdminLevel1("Colorado")
                                            .geoAdminLevel2("El Paso County")
                                            .geoAdminLevel3("Colorado Springs")
                                            .massRanking(123)
                                            .origin("some.user")
                                            .origNetwork("OPS1")
                                            .parentOrgId("PARENTORG-ID")
                                            .postalCode("80903")
                                            .profit(123.4)
                                            .revenue(123.4)
                                            .revenueRanking(123)
                                            .riskManager("some.user")
                                            .servicesNotes("Example notes")
                                            .addTag("PROVIDER_TAG1")
                                            .addTag("PROVIDER_TAG2")
                                            .updatedAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .updatedBy("some.user")
                                            .build()
                                    )
                                    .origin("some.user")
                                    .origNetwork("OPS1")
                                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .updatedBy("some.user")
                                    .build()
                            )
                            .origin("THIRD_PARTY_DATASOURCE")
                            .polSubdiv("IZ07")
                            .recStatus("A")
                            .referenceDoc("Provider Reference Documentation")
                            .resProd("RT")
                            .reviewDate(LocalDate.parse("2008-06-10"))
                            .stylizedUnit(true)
                            .symCode("SOGPU----------")
                            .unitIdentifier("AZXAZ12345")
                            .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .updatedBy("some.user")
                            .utm("19P4390691376966")
                            .wac("0427")
                            .build()
                    )
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("OPS1")
                    .ownerType(EntityFull.OwnerType.COMMERCIAL)
                    .addRfBand(
                        RfBandFull.builder()
                            .classificationMarking("U")
                            .dataMode(RfBandFull.DataMode.TEST)
                            .idEntity("ENTITY-ID")
                            .name("BAND_NAME")
                            .source("Bluestaq")
                            .id("ad88770b-d824-443f-bdce-5f9e3fa500a9")
                            .band("Ku")
                            .bandwidth(100.23)
                            .addBandwidthSetting(250.1)
                            .addBandwidthSetting(500.1)
                            .beamwidth(45.23)
                            .addBeamwidthSetting(5.1)
                            .addBeamwidthSetting(10.1)
                            .centerFreq(1000.23)
                            .createdAt(OffsetDateTime.parse("2025-03-05T16:00:00.123Z"))
                            .createdBy("some.user")
                            .addDelaySetting(2.77)
                            .addDelaySetting(5.64)
                            .edgeGain(100.23)
                            .eirp(2.23)
                            .erp(2.23)
                            .freqMax(2000.23)
                            .freqMin(50.23)
                            .addFrequencySetting(12250.1)
                            .addFrequencySetting(15000.1)
                            .addGainSetting(2.77)
                            .addGainSetting(5.64)
                            .mode(RfBandFull.Mode.TX)
                            .addNoiseSetting(0.00033)
                            .addNoiseSetting(0.0033)
                            .origin("THIRD_PARTY_DATASOURCE")
                            .origNetwork("OPS1")
                            .peakGain(120.23)
                            .polarization(RfBandFull.Polarization.H)
                            .purpose(RfBandFull.Purpose.TTC)
                            .updatedAt(OffsetDateTime.parse("2025-03-05T16:00:00.123Z"))
                            .updatedBy("some.user")
                            .build()
                    )
                    .addStatusCollection(
                        StatusFull.builder()
                            .classificationMarking("U")
                            .dataMode(StatusFull.DataMode.TEST)
                            .idEntity("ENTITY-ID")
                            .source("Bluestaq")
                            .id("STATUS-ID")
                            .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .createdBy("some.user")
                            .declassificationDate(OffsetDateTime.parse("2021-01-01T01:02:02.123Z"))
                            .declassificationString("U")
                            .derivedFrom("SOME_SOURCE")
                            .notes("Example Notes")
                            .opsCap(StatusFull.OpsCap.FMC)
                            .origin("THIRD_PARTY_DATASOURCE")
                            .origNetwork("OPS1")
                            .state(StatusFull.State.ACTIVE)
                            .addSubStatusCollection(
                                SubStatusFull.builder()
                                    .classificationMarking("U")
                                    .dataMode(SubStatusFull.DataMode.TEST)
                                    .notes("Sample Notes")
                                    .source("Bluestaq")
                                    .status(SubStatusFull.Status.FMC)
                                    .statusId("REF-STATUS-ID")
                                    .type(SubStatusFull.Type.MD_CAP)
                                    .id("SUBSTATUS-ID")
                                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .origin("THIRD_PARTY_DATASOURCE")
                                    .origNetwork("OPS1")
                                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .updatedBy("some.user")
                                    .build()
                            )
                            .sysCap(StatusFull.SysCap.FMC)
                            .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .updatedBy("some.user")
                            .build()
                    )
                    .taskable(false)
                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .updatedBy("some.user")
                    .addUrl("URL1")
                    .addUrl("URL2")
                    .build()
            )
        assertThat(busFull.generic()).contains(false)
        assertThat(busFull.idEntity()).contains("0167f577-e06c-358e-85aa-0a07a730bdd0")
        assertThat(busFull.launchEnvelopeDimensionX()).contains(10.1)
        assertThat(busFull.launchEnvelopeDimensionY()).contains(10.1)
        assertThat(busFull.launchEnvelopeDimensionZ()).contains(10.1)
        assertThat(busFull.mainComputerManufacturerOrgId())
            .contains("MAINCOMPUTERMANUFACTURERORG-ID")
        assertThat(busFull.manufacturerOrgId()).contains("MANUFACTURERORG-ID")
        assertThat(busFull.massCategory()).contains("Nanosatellite")
        assertThat(busFull.maxBolPowerLower()).contains(10.1)
        assertThat(busFull.maxBolPowerUpper()).contains(10.1)
        assertThat(busFull.maxBolStationMass()).contains(10.1)
        assertThat(busFull.maxDryMass()).contains(2900.1)
        assertThat(busFull.maxEolPowerLower()).contains(10.1)
        assertThat(busFull.maxEolPowerUpper()).contains(10.1)
        assertThat(busFull.maxLaunchMassLower()).contains(10.1)
        assertThat(busFull.maxLaunchMassUpper()).contains(10.1)
        assertThat(busFull.maxPayloadMass()).contains(10.1)
        assertThat(busFull.maxPayloadPower()).contains(10.1)
        assertThat(busFull.maxSpacecraftPower()).contains(10.1)
        assertThat(busFull.maxWetMass()).contains(5300.0)
        assertThat(busFull.medianDryMass()).contains(2950.1)
        assertThat(busFull.medianWetMass()).contains(5260.1)
        assertThat(busFull.minDryMass()).contains(2858.1)
        assertThat(busFull.minWetMass()).contains(5192.1)
        assertThat(busFull.numOrbitType()).contains(3)
        assertThat(busFull.oapPayloadPower()).contains(10.1)
        assertThat(busFull.oapSpacecraftPower()).contains(10.1)
        assertThat(busFull.orbitTypes().getOrNull()).containsExactly("LEO", "HEO", "GEO")
        assertThat(busFull.origin()).contains("THIRD_PARTY_DATASOURCE")
        assertThat(busFull.origNetwork()).contains("OPS1")
        assertThat(busFull.payloadDimensionX()).contains(1.1)
        assertThat(busFull.payloadDimensionY()).contains(1.1)
        assertThat(busFull.payloadDimensionZ()).contains(1.1)
        assertThat(busFull.payloadVolume()).contains(1.1)
        assertThat(busFull.powerCategory()).contains("low power")
        assertThat(busFull.telemetryTrackingManufacturerOrgId())
            .contains("TELEMETRYTRACKINGMANUFACTURERORG-ID")
        assertThat(busFull.type()).contains("Example type")
        assertThat(busFull.updatedAt()).contains(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
        assertThat(busFull.updatedBy()).contains("some.user")
    }

    @Test
    fun roundtrip() {
        val jsonMapper = jsonMapper()
        val busFull =
            BusFull.builder()
                .classificationMarking("U")
                .dataMode(BusFull.DataMode.TEST)
                .name("Example name")
                .source("Bluestaq")
                .id("BUS-ID")
                .aocsNotes("Example notes")
                .avgDryMass(2879.1)
                .avgPayloadMass(10.1)
                .avgPayloadPower(10.1)
                .avgSpacecraftPower(10.1)
                .avgWetMass(5246.1)
                .bodyDimensionX(10.1)
                .bodyDimensionY(10.1)
                .bodyDimensionZ(10.1)
                .busKitDesignerOrgId("BUSKITDESIGNERORG-ID")
                .countryCode("US")
                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                .createdBy("some.user")
                .description("Dedicated small spacecraft bus.")
                .entity(
                    EntityFull.builder()
                        .classificationMarking("U")
                        .dataMode(EntityFull.DataMode.TEST)
                        .name("Example name")
                        .source("Bluestaq")
                        .type(EntityFull.Type.ONORBIT)
                        .countryCode("US")
                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .createdBy("some.user")
                        .idEntity("ENTITY-ID")
                        .idLocation("LOCATION-ID")
                        .idOnOrbit("ONORBIT-ID")
                        .idOperatingUnit("OPERATINGUNIT-ID")
                        .location(
                            LocationFull.builder()
                                .classificationMarking("U")
                                .dataMode(LocationFull.DataMode.TEST)
                                .name("Example location")
                                .source("Bluestaq")
                                .altitude(10.23)
                                .countryCode("US")
                                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .idLocation("LOCATION-ID")
                                .lat(45.23)
                                .lon(179.1)
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .build()
                        )
                        .onOrbit(
                            EntityFull.OnOrbit.builder()
                                .classificationMarking("U")
                                .dataMode(EntityFull.OnOrbit.DataMode.TEST)
                                .satNo(1)
                                .source("Bluestaq")
                                .altName("Alternate Name")
                                .addAntenna(
                                    OnorbitAntennaFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OnorbitAntennaFull.DataMode.TEST)
                                        .idAntenna("ANTENNA-ID")
                                        .idOnOrbit("ONORBIT-ID")
                                        .source("Bluestaq")
                                        .id("ONORBITANTENNA-ID")
                                        .antenna(
                                            AntennaFull.builder()
                                                .dataMode(AntennaFull.DataMode.TEST)
                                                .name("IRIDIUM NEXT 121-ANTENNA-10075")
                                                .source("Bluestaq")
                                                .id("ANTENNA-ID")
                                                .addAntennaDetail(
                                                    AntennaDetailsFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(AntennaDetailsFull.DataMode.TEST)
                                                        .idAntenna("ANTENNA-ID")
                                                        .source("Bluestaq")
                                                        .id("ANTENNADETAILS-ID")
                                                        .beamForming(false)
                                                        .beamwidth(14.1)
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .description("Description of antenna A")
                                                        .diameter(0.01)
                                                        .endFrequency(3.3)
                                                        .gain(20.1)
                                                        .gainTolerance(5.1)
                                                        .manufacturerOrg(
                                                            OrganizationFull.builder()
                                                                .classificationMarking("U")
                                                                .dataMode(
                                                                    OrganizationFull.DataMode.TEST
                                                                )
                                                                .name("some.user")
                                                                .source("some.user")
                                                                .type("GOVERNMENT")
                                                                .id("ORGANIZATION-ID")
                                                                .active(false)
                                                                .category("Private company")
                                                                .countryCode("US")
                                                                .createdAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .createdBy("some.user")
                                                                .description("Example description")
                                                                .externalId("EXTERNAL-ID")
                                                                .nationality("US")
                                                                .addOrganizationDetail(
                                                                    OrganizationDetailsFull
                                                                        .builder()
                                                                        .classificationMarking("U")
                                                                        .dataMode(
                                                                            OrganizationDetailsFull
                                                                                .DataMode
                                                                                .TEST
                                                                        )
                                                                        .idOrganization(
                                                                            "ORGANIZATION-ID"
                                                                        )
                                                                        .name("some.user")
                                                                        .source("some.user")
                                                                        .id(
                                                                            "ORGANIZATIONDETAILS-ID"
                                                                        )
                                                                        .address1("123 Main Street")
                                                                        .address2("Apt 4B")
                                                                        .address3(
                                                                            "Colorado Springs CO, 80903"
                                                                        )
                                                                        .broker("some.user")
                                                                        .ceo("some.user")
                                                                        .cfo("some.user")
                                                                        .createdAt(
                                                                            OffsetDateTime.parse(
                                                                                "2018-01-01T16:00:00.123Z"
                                                                            )
                                                                        )
                                                                        .createdBy("some.user")
                                                                        .cto("some.user")
                                                                        .description(
                                                                            "Example description"
                                                                        )
                                                                        .ebitda(123.4)
                                                                        .email(
                                                                            "some_organization@organization.com"
                                                                        )
                                                                        .financialNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .financialYearEndDate(
                                                                            OffsetDateTime.parse(
                                                                                "2021-01-01T01:01:01.123Z"
                                                                            )
                                                                        )
                                                                        .fleetPlanNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .formerOrgId("FORMERORG-ID")
                                                                        .ftes(123)
                                                                        .geoAdminLevel1("Colorado")
                                                                        .geoAdminLevel2(
                                                                            "El Paso County"
                                                                        )
                                                                        .geoAdminLevel3(
                                                                            "Colorado Springs"
                                                                        )
                                                                        .massRanking(123)
                                                                        .origin("some.user")
                                                                        .origNetwork("OPS1")
                                                                        .parentOrgId("PARENTORG-ID")
                                                                        .postalCode("80903")
                                                                        .profit(123.4)
                                                                        .revenue(123.4)
                                                                        .revenueRanking(123)
                                                                        .riskManager("some.user")
                                                                        .servicesNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .addTag("PROVIDER_TAG1")
                                                                        .addTag("PROVIDER_TAG2")
                                                                        .updatedAt(
                                                                            OffsetDateTime.parse(
                                                                                "2018-01-01T16:00:00.123Z"
                                                                            )
                                                                        )
                                                                        .updatedBy("some.user")
                                                                        .build()
                                                                )
                                                                .origin("some.user")
                                                                .origNetwork("OPS1")
                                                                .updatedAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .updatedBy("some.user")
                                                                .build()
                                                        )
                                                        .manufacturerOrgId("MANUFACTUREORG-ID")
                                                        .mode(AntennaDetailsFull.Mode.TX)
                                                        .origin("THIRD_PARTY_DATASOURCE")
                                                        .origNetwork("OPS1")
                                                        .polarization(45.1)
                                                        .position("Top")
                                                        .addSize(0.03)
                                                        .addSize(0.05)
                                                        .startFrequency(2.1)
                                                        .steerable(false)
                                                        .addTag("PROVIDER_TAG1")
                                                        .addTag("PROVIDER_TAG2")
                                                        .type("Reflector")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .addBattery(
                                    OnorbitBatteryFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OnorbitBatteryFull.DataMode.TEST)
                                        .idBattery("BATTERY-ID")
                                        .idOnOrbit("ONORBIT-ID")
                                        .source("Bluestaq")
                                        .id("ONORBITBATTERY-ID")
                                        .battery(
                                            BatteryFull.builder()
                                                .dataMode(BatteryFull.DataMode.TEST)
                                                .name("JAK-BATTERY-1479")
                                                .source("Bluestaq")
                                                .id("BATTERY-ID")
                                                .addBatteryDetail(
                                                    BatterydetailsFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(BatterydetailsFull.DataMode.TEST)
                                                        .idBattery("BATTERY-ID")
                                                        .source("Bluestaq")
                                                        .id("BATTERYDETAILS-ID")
                                                        .capacity(10.1)
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .description("example notes")
                                                        .dischargeDepth(0.2)
                                                        .manufacturerOrg(
                                                            OrganizationFull.builder()
                                                                .classificationMarking("U")
                                                                .dataMode(
                                                                    OrganizationFull.DataMode.TEST
                                                                )
                                                                .name("some.user")
                                                                .source("some.user")
                                                                .type("GOVERNMENT")
                                                                .id("ORGANIZATION-ID")
                                                                .active(false)
                                                                .category("Private company")
                                                                .countryCode("US")
                                                                .createdAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .createdBy("some.user")
                                                                .description("Example description")
                                                                .externalId("EXTERNAL-ID")
                                                                .nationality("US")
                                                                .addOrganizationDetail(
                                                                    OrganizationDetailsFull
                                                                        .builder()
                                                                        .classificationMarking("U")
                                                                        .dataMode(
                                                                            OrganizationDetailsFull
                                                                                .DataMode
                                                                                .TEST
                                                                        )
                                                                        .idOrganization(
                                                                            "ORGANIZATION-ID"
                                                                        )
                                                                        .name("some.user")
                                                                        .source("some.user")
                                                                        .id(
                                                                            "ORGANIZATIONDETAILS-ID"
                                                                        )
                                                                        .address1("123 Main Street")
                                                                        .address2("Apt 4B")
                                                                        .address3(
                                                                            "Colorado Springs CO, 80903"
                                                                        )
                                                                        .broker("some.user")
                                                                        .ceo("some.user")
                                                                        .cfo("some.user")
                                                                        .createdAt(
                                                                            OffsetDateTime.parse(
                                                                                "2018-01-01T16:00:00.123Z"
                                                                            )
                                                                        )
                                                                        .createdBy("some.user")
                                                                        .cto("some.user")
                                                                        .description(
                                                                            "Example description"
                                                                        )
                                                                        .ebitda(123.4)
                                                                        .email(
                                                                            "some_organization@organization.com"
                                                                        )
                                                                        .financialNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .financialYearEndDate(
                                                                            OffsetDateTime.parse(
                                                                                "2021-01-01T01:01:01.123Z"
                                                                            )
                                                                        )
                                                                        .fleetPlanNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .formerOrgId("FORMERORG-ID")
                                                                        .ftes(123)
                                                                        .geoAdminLevel1("Colorado")
                                                                        .geoAdminLevel2(
                                                                            "El Paso County"
                                                                        )
                                                                        .geoAdminLevel3(
                                                                            "Colorado Springs"
                                                                        )
                                                                        .massRanking(123)
                                                                        .origin("some.user")
                                                                        .origNetwork("OPS1")
                                                                        .parentOrgId("PARENTORG-ID")
                                                                        .postalCode("80903")
                                                                        .profit(123.4)
                                                                        .revenue(123.4)
                                                                        .revenueRanking(123)
                                                                        .riskManager("some.user")
                                                                        .servicesNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .addTag("PROVIDER_TAG1")
                                                                        .addTag("PROVIDER_TAG2")
                                                                        .updatedAt(
                                                                            OffsetDateTime.parse(
                                                                                "2018-01-01T16:00:00.123Z"
                                                                            )
                                                                        )
                                                                        .updatedBy("some.user")
                                                                        .build()
                                                                )
                                                                .origin("some.user")
                                                                .origNetwork("OPS1")
                                                                .updatedAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .updatedBy("some.user")
                                                                .build()
                                                        )
                                                        .manufacturerOrgId("MANUFACTURERORG-ID")
                                                        .model("11212")
                                                        .origin("THIRD_PARTY_DATASOURCE")
                                                        .origNetwork("OPS1")
                                                        .addTag("PROVIDER_TAG1")
                                                        .addTag("PROVIDER_TAG2")
                                                        .technology("Ni-Cd")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .quantity(5)
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .category(EntityFull.OnOrbit.Category.LUNAR)
                                .commonName("Example common name")
                                .constellation("Big Dipper")
                                .countryCode("US")
                                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .decayDate(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .idOnOrbit("ONORBIT-ID")
                                .intlDes("2021123ABC")
                                .launchDate(LocalDate.parse("2018-01-01"))
                                .launchSiteId("LAUNCHSITE-ID")
                                .lifetimeYears(10)
                                .missionNumber("Expedition 1")
                                .objectType(EntityFull.OnOrbit.ObjectType.PAYLOAD)
                                .addOnorbitDetail(
                                    OnorbitDetailsFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OnorbitDetailsFull.DataMode.TEST)
                                        .idOnOrbit("REF-ONORBIT-ID")
                                        .source("Bluestaq")
                                        .id("ONORBITDETAILS-ID")
                                        .additionalMass(10.23)
                                        .adeptRadius(10.23)
                                        .bolDeltaV(1000.1)
                                        .bolFuelMass(10.23)
                                        .busCrossSection(10.23)
                                        .busType("A2100")
                                        .colaRadius(10.23)
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .crossSection(10.23)
                                        .currentMass(500.0)
                                        .deltaVUnc(50.1)
                                        .addDepEstMass(20.0)
                                        .addDepEstMass(21.0)
                                        .addDepMassUnc(10.0)
                                        .addDepMassUnc(5.0)
                                        .addDepName("GOES-18A")
                                        .addDepName("GOES-18B")
                                        .driftRate(1.23)
                                        .dryMass(10.23)
                                        .estDeltaVDuration(10.23)
                                        .fuelRemaining(10.23)
                                        .geoSlot(90.23)
                                        .lastObSource("THIRD_PARTY_DATASOURCE")
                                        .lastObTime(
                                            OffsetDateTime.parse("2021-01-01T01:01:01.123456Z")
                                        )
                                        .launchMass(10.23)
                                        .launchMassMax(15.23)
                                        .launchMassMin(5.23)
                                        .maneuverable(false)
                                        .maxDeltaV(10.23)
                                        .maxRadius(10.23)
                                        .addMissionType("Weather")
                                        .addMissionType("Space Weather")
                                        .numDeployable(2)
                                        .numMission(2)
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .rcs(10.23)
                                        .rcsMax(15.23)
                                        .rcsMean(10.23)
                                        .rcsMin(5.23)
                                        .refSource("Wikipedia")
                                        .solarArrayArea(10.23)
                                        .totalMassUnc(50.1)
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .vismag(10.23)
                                        .vismagMax(15.23)
                                        .vismagMean(10.23)
                                        .vismagMin(5.23)
                                        .build()
                                )
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .addSolarArray(
                                    OnorbitSolarArrayFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OnorbitSolarArrayFull.DataMode.TEST)
                                        .idOnOrbit("ONORBIT-ID")
                                        .idSolarArray("SOLARARRAY-ID")
                                        .source("Bluestaq")
                                        .id("ONORBITSOLARARRAY-ID")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .quantity(10)
                                        .solarArray(
                                            SolarArrayFull.builder()
                                                .dataMode(SolarArrayFull.DataMode.TEST)
                                                .name("Solar1")
                                                .source("Bluestaq")
                                                .id("SOLARARRAY-ID")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .addSolarArrayDetail(
                                                    SolarArrayDetailsFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(
                                                            SolarArrayDetailsFull.DataMode.TEST
                                                        )
                                                        .idSolarArray("SOLARARRAY-ID")
                                                        .source("Bluestaq")
                                                        .id("SOLARARRAYDETAILS-ID")
                                                        .area(123.4)
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .description("Example notes")
                                                        .junctionTechnology("Triple")
                                                        .manufacturerOrg(
                                                            OrganizationFull.builder()
                                                                .classificationMarking("U")
                                                                .dataMode(
                                                                    OrganizationFull.DataMode.TEST
                                                                )
                                                                .name("some.user")
                                                                .source("some.user")
                                                                .type("GOVERNMENT")
                                                                .id("ORGANIZATION-ID")
                                                                .active(false)
                                                                .category("Private company")
                                                                .countryCode("US")
                                                                .createdAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .createdBy("some.user")
                                                                .description("Example description")
                                                                .externalId("EXTERNAL-ID")
                                                                .nationality("US")
                                                                .addOrganizationDetail(
                                                                    OrganizationDetailsFull
                                                                        .builder()
                                                                        .classificationMarking("U")
                                                                        .dataMode(
                                                                            OrganizationDetailsFull
                                                                                .DataMode
                                                                                .TEST
                                                                        )
                                                                        .idOrganization(
                                                                            "ORGANIZATION-ID"
                                                                        )
                                                                        .name("some.user")
                                                                        .source("some.user")
                                                                        .id(
                                                                            "ORGANIZATIONDETAILS-ID"
                                                                        )
                                                                        .address1("123 Main Street")
                                                                        .address2("Apt 4B")
                                                                        .address3(
                                                                            "Colorado Springs CO, 80903"
                                                                        )
                                                                        .broker("some.user")
                                                                        .ceo("some.user")
                                                                        .cfo("some.user")
                                                                        .createdAt(
                                                                            OffsetDateTime.parse(
                                                                                "2018-01-01T16:00:00.123Z"
                                                                            )
                                                                        )
                                                                        .createdBy("some.user")
                                                                        .cto("some.user")
                                                                        .description(
                                                                            "Example description"
                                                                        )
                                                                        .ebitda(123.4)
                                                                        .email(
                                                                            "some_organization@organization.com"
                                                                        )
                                                                        .financialNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .financialYearEndDate(
                                                                            OffsetDateTime.parse(
                                                                                "2021-01-01T01:01:01.123Z"
                                                                            )
                                                                        )
                                                                        .fleetPlanNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .formerOrgId("FORMERORG-ID")
                                                                        .ftes(123)
                                                                        .geoAdminLevel1("Colorado")
                                                                        .geoAdminLevel2(
                                                                            "El Paso County"
                                                                        )
                                                                        .geoAdminLevel3(
                                                                            "Colorado Springs"
                                                                        )
                                                                        .massRanking(123)
                                                                        .origin("some.user")
                                                                        .origNetwork("OPS1")
                                                                        .parentOrgId("PARENTORG-ID")
                                                                        .postalCode("80903")
                                                                        .profit(123.4)
                                                                        .revenue(123.4)
                                                                        .revenueRanking(123)
                                                                        .riskManager("some.user")
                                                                        .servicesNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .addTag("PROVIDER_TAG1")
                                                                        .addTag("PROVIDER_TAG2")
                                                                        .updatedAt(
                                                                            OffsetDateTime.parse(
                                                                                "2018-01-01T16:00:00.123Z"
                                                                            )
                                                                        )
                                                                        .updatedBy("some.user")
                                                                        .build()
                                                                )
                                                                .origin("some.user")
                                                                .origNetwork("OPS1")
                                                                .updatedAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .updatedBy("some.user")
                                                                .build()
                                                        )
                                                        .manufacturerOrgId("MANUFACTURERORG-ID")
                                                        .origin("THIRD_PARTY_DATASOURCE")
                                                        .origNetwork("OPS1")
                                                        .span(123.4)
                                                        .addTag("TAG1")
                                                        .addTag("TAG2")
                                                        .technology("Ga-As")
                                                        .type("U Shaped")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .addThruster(
                                    OnorbitThrusterFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OnorbitThrusterFull.DataMode.TEST)
                                        .idEngine("ENGINE-ID")
                                        .idOnOrbit("ONORBIT-ID")
                                        .source("Bluestaq")
                                        .id("ONORBITTHRUSTER-ID")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .engine(
                                            Engine.builder()
                                                .classificationMarking("U")
                                                .dataMode(Engine.DataMode.TEST)
                                                .name("ENGINE_VARIANT1")
                                                .source("Bluestaq")
                                                .id("ENGINE-ID")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .addEngineDetail(
                                                    EngineDetailsFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(EngineDetailsFull.DataMode.TEST)
                                                        .idEngine("ENGINE-ID")
                                                        .source("Bluestaq")
                                                        .id("ENGINEDETAILS-ID")
                                                        .burnTime(1.1)
                                                        .chamberPressure(1.1)
                                                        .characteristicType("Electric")
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .cycleType("Pressure Fed")
                                                        .family("ENGINE_TYPE1")
                                                        .manufacturerOrgId("MANUFACTURERORG-ID")
                                                        .maxFirings(5)
                                                        .notes("Example notes")
                                                        .nozzleExpansionRatio(1.1)
                                                        .origin("THIRD_PARTY_DATASOURCE")
                                                        .origNetwork("OPS1")
                                                        .oxidizer("Liquid Oxygen")
                                                        .propellant("Liquid")
                                                        .seaLevelThrust(1.1)
                                                        .specificImpulse(1.1)
                                                        .addTag("PROVIDER_TAG1")
                                                        .addTag("PROVIDER_TAG2")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .vacuumThrust(1.1)
                                                        .build()
                                                )
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .quantity(10)
                                        .type("Hydrazine REA")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .build()
                        )
                        .operatingUnit(
                            OperatingunitFull.builder()
                                .classificationMarking("U")
                                .dataMode(OperatingunitFull.DataMode.TEST)
                                .name("SOME_NAME")
                                .source("some.user")
                                .airDefArea("AL006")
                                .allegiance("OTHR")
                                .altAllegiance("HL")
                                .altCountryCode("IZ")
                                .altOperatingUnitId("32100000000021")
                                .classRating("1")
                                .condition("RDY")
                                .conditionAvail("A")
                                .coord("340000000N0430000000E")
                                .coordDatum("WGS")
                                .coordDerivAcc(12.345)
                                .countryCode("IQ")
                                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .deployStatus("ND")
                                .description("Description of unit")
                                .divCat("5")
                                .echelon("SHIP")
                                .echelonTier("68")
                                .elevMsl(123.45)
                                .elevMslConfLvl(50)
                                .elevMslDerivAcc(12.34)
                                .eval(7)
                                .flagFlown("IZ")
                                .fleetId("A")
                                .force("NV")
                                .forceName("FORCE-NAME")
                                .fpa("EOB")
                                .functRole("MIL")
                                .geoidalMslSep(12.34)
                                .idContact("CONTACT-ID")
                                .ident("FRIEND")
                                .idLocation("LOCATION-ID")
                                .idOperatingUnit("OPERATINGUNIT-ID")
                                .idOrganization("ORGANIZATION-ID")
                                .lat(45.23)
                                .location(
                                    LocationFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(LocationFull.DataMode.TEST)
                                        .name("Example location")
                                        .source("Bluestaq")
                                        .altitude(10.23)
                                        .countryCode("US")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .idLocation("LOCATION-ID")
                                        .lat(45.23)
                                        .lon(179.1)
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .locName("LOCATION_NAME")
                                .locReason("GR")
                                .lon(179.1)
                                .masterUnit(true)
                                .milGrid("4QFJ12345678")
                                .milGridSys("UTM")
                                .msnPrimary("W6")
                                .msnPrimarySpecialty("QK")
                                .addOperatingUnitRemark(
                                    OperatingUnitRemarkFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OperatingUnitRemarkFull.DataMode.TEST)
                                        .idOperatingUnit("OperatingUnit-ID")
                                        .source("some.user")
                                        .text("This is a remark")
                                        .id("0167f577-e06c-358e-85aa-0a07a730bdd0")
                                        .altRmkId("123456ABC")
                                        .code("M")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .name("Remark name")
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .type("Restriction")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .operStatus("OPR")
                                .organization(
                                    OrganizationFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OrganizationFull.DataMode.TEST)
                                        .name("some.user")
                                        .source("some.user")
                                        .type("GOVERNMENT")
                                        .id("ORGANIZATION-ID")
                                        .active(false)
                                        .category("Private company")
                                        .countryCode("US")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .description("Example description")
                                        .externalId("EXTERNAL-ID")
                                        .nationality("US")
                                        .addOrganizationDetail(
                                            OrganizationDetailsFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(OrganizationDetailsFull.DataMode.TEST)
                                                .idOrganization("ORGANIZATION-ID")
                                                .name("some.user")
                                                .source("some.user")
                                                .id("ORGANIZATIONDETAILS-ID")
                                                .address1("123 Main Street")
                                                .address2("Apt 4B")
                                                .address3("Colorado Springs CO, 80903")
                                                .broker("some.user")
                                                .ceo("some.user")
                                                .cfo("some.user")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .cto("some.user")
                                                .description("Example description")
                                                .ebitda(123.4)
                                                .email("some_organization@organization.com")
                                                .financialNotes("Example notes")
                                                .financialYearEndDate(
                                                    OffsetDateTime.parse("2021-01-01T01:01:01.123Z")
                                                )
                                                .fleetPlanNotes("Example notes")
                                                .formerOrgId("FORMERORG-ID")
                                                .ftes(123)
                                                .geoAdminLevel1("Colorado")
                                                .geoAdminLevel2("El Paso County")
                                                .geoAdminLevel3("Colorado Springs")
                                                .massRanking(123)
                                                .origin("some.user")
                                                .origNetwork("OPS1")
                                                .parentOrgId("PARENTORG-ID")
                                                .postalCode("80903")
                                                .profit(123.4)
                                                .revenue(123.4)
                                                .revenueRanking(123)
                                                .riskManager("some.user")
                                                .servicesNotes("Example notes")
                                                .addTag("PROVIDER_TAG1")
                                                .addTag("PROVIDER_TAG2")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .origin("some.user")
                                        .origNetwork("OPS1")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .origin("THIRD_PARTY_DATASOURCE")
                                .polSubdiv("IZ07")
                                .recStatus("A")
                                .referenceDoc("Provider Reference Documentation")
                                .resProd("RT")
                                .reviewDate(LocalDate.parse("2008-06-10"))
                                .stylizedUnit(true)
                                .symCode("SOGPU----------")
                                .unitIdentifier("AZXAZ12345")
                                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .utm("19P4390691376966")
                                .wac("0427")
                                .build()
                        )
                        .origin("THIRD_PARTY_DATASOURCE")
                        .origNetwork("OPS1")
                        .ownerType(EntityFull.OwnerType.COMMERCIAL)
                        .addRfBand(
                            RfBandFull.builder()
                                .classificationMarking("U")
                                .dataMode(RfBandFull.DataMode.TEST)
                                .idEntity("ENTITY-ID")
                                .name("BAND_NAME")
                                .source("Bluestaq")
                                .id("ad88770b-d824-443f-bdce-5f9e3fa500a9")
                                .band("Ku")
                                .bandwidth(100.23)
                                .addBandwidthSetting(250.1)
                                .addBandwidthSetting(500.1)
                                .beamwidth(45.23)
                                .addBeamwidthSetting(5.1)
                                .addBeamwidthSetting(10.1)
                                .centerFreq(1000.23)
                                .createdAt(OffsetDateTime.parse("2025-03-05T16:00:00.123Z"))
                                .createdBy("some.user")
                                .addDelaySetting(2.77)
                                .addDelaySetting(5.64)
                                .edgeGain(100.23)
                                .eirp(2.23)
                                .erp(2.23)
                                .freqMax(2000.23)
                                .freqMin(50.23)
                                .addFrequencySetting(12250.1)
                                .addFrequencySetting(15000.1)
                                .addGainSetting(2.77)
                                .addGainSetting(5.64)
                                .mode(RfBandFull.Mode.TX)
                                .addNoiseSetting(0.00033)
                                .addNoiseSetting(0.0033)
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .peakGain(120.23)
                                .polarization(RfBandFull.Polarization.H)
                                .purpose(RfBandFull.Purpose.TTC)
                                .updatedAt(OffsetDateTime.parse("2025-03-05T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .build()
                        )
                        .addStatusCollection(
                            StatusFull.builder()
                                .classificationMarking("U")
                                .dataMode(StatusFull.DataMode.TEST)
                                .idEntity("ENTITY-ID")
                                .source("Bluestaq")
                                .id("STATUS-ID")
                                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .declassificationDate(
                                    OffsetDateTime.parse("2021-01-01T01:02:02.123Z")
                                )
                                .declassificationString("U")
                                .derivedFrom("SOME_SOURCE")
                                .notes("Example Notes")
                                .opsCap(StatusFull.OpsCap.FMC)
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .state(StatusFull.State.ACTIVE)
                                .addSubStatusCollection(
                                    SubStatusFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(SubStatusFull.DataMode.TEST)
                                        .notes("Sample Notes")
                                        .source("Bluestaq")
                                        .status(SubStatusFull.Status.FMC)
                                        .statusId("REF-STATUS-ID")
                                        .type(SubStatusFull.Type.MD_CAP)
                                        .id("SUBSTATUS-ID")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .sysCap(StatusFull.SysCap.FMC)
                                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .build()
                        )
                        .taskable(false)
                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .updatedBy("some.user")
                        .addUrl("URL1")
                        .addUrl("URL2")
                        .build()
                )
                .generic(false)
                .idEntity("0167f577-e06c-358e-85aa-0a07a730bdd0")
                .launchEnvelopeDimensionX(10.1)
                .launchEnvelopeDimensionY(10.1)
                .launchEnvelopeDimensionZ(10.1)
                .mainComputerManufacturerOrgId("MAINCOMPUTERMANUFACTURERORG-ID")
                .manufacturerOrgId("MANUFACTURERORG-ID")
                .massCategory("Nanosatellite")
                .maxBolPowerLower(10.1)
                .maxBolPowerUpper(10.1)
                .maxBolStationMass(10.1)
                .maxDryMass(2900.1)
                .maxEolPowerLower(10.1)
                .maxEolPowerUpper(10.1)
                .maxLaunchMassLower(10.1)
                .maxLaunchMassUpper(10.1)
                .maxPayloadMass(10.1)
                .maxPayloadPower(10.1)
                .maxSpacecraftPower(10.1)
                .maxWetMass(5300.0)
                .medianDryMass(2950.1)
                .medianWetMass(5260.1)
                .minDryMass(2858.1)
                .minWetMass(5192.1)
                .numOrbitType(3)
                .oapPayloadPower(10.1)
                .oapSpacecraftPower(10.1)
                .orbitTypes(listOf("LEO", "HEO", "GEO"))
                .origin("THIRD_PARTY_DATASOURCE")
                .origNetwork("OPS1")
                .payloadDimensionX(1.1)
                .payloadDimensionY(1.1)
                .payloadDimensionZ(1.1)
                .payloadVolume(1.1)
                .powerCategory("low power")
                .telemetryTrackingManufacturerOrgId("TELEMETRYTRACKINGMANUFACTURERORG-ID")
                .type("Example type")
                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                .updatedBy("some.user")
                .build()

        val roundtrippedBusFull =
            jsonMapper.readValue(jsonMapper.writeValueAsString(busFull), jacksonTypeRef<BusFull>())

        assertThat(roundtrippedBusFull).isEqualTo(busFull)
    }
}
