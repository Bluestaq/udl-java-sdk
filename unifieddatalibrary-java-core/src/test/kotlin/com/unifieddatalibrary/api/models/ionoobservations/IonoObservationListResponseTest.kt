// File generated from our OpenAPI spec by Stainless.

package com.unifieddatalibrary.api.models.ionoobservations

import com.fasterxml.jackson.module.kotlin.jacksonTypeRef
import com.unifieddatalibrary.api.core.jsonMapper
import java.time.OffsetDateTime
import kotlin.jvm.optionals.getOrNull
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class IonoObservationListResponseTest {

    @Test
    fun create() {
        val ionoObservationListResponse =
            IonoObservationListResponse.builder()
                .classificationMarking("U")
                .dataMode(IonoObservationListResponse.DataMode.TEST)
                .source("Bluestaq")
                .startTimeUtc(OffsetDateTime.parse("2021-01-01T01:01:01.123456Z"))
                .stationId("STATION-ID")
                .system("Example hardware type")
                .systemInfo("Example settings")
                .id("IONOOBSERVATION-ID")
                .amplitude(
                    IonoObservationListResponse.Amplitude.builder()
                        .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                        .addDimensionName("NAME1")
                        .addDimensionName("NAME2")
                        .addDimension(4)
                        .addDimension(5)
                        .notes("NOTES")
                        .build()
                )
                .antennaElementPosition(
                    IonoObservationListResponse.AntennaElementPosition.builder()
                        .addData(listOf(1.23, 0.123))
                        .addDimensionName("NAME1")
                        .addDimensionName("NAME2")
                        .addDimension(3)
                        .addDimension(4)
                        .build()
                )
                .antennaElementPositionCoordinateSystem(
                    IonoObservationListResponse.AntennaElementPositionCoordinateSystem.J2000
                )
                .artistFlags(listOf(1, 2, 3))
                .azimuth(
                    IonoObservationListResponse.Azimuth.builder()
                        .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                        .addDimensionName("NAME1")
                        .addDimensionName("NAME2")
                        .addDimension(1)
                        .addDimension(2)
                        .notes("NOTES")
                        .build()
                )
                .b0(68.07)
                .b1(1.87)
                .addCharAtt(
                    IonoObservationListResponse.CharAtt.builder()
                        .charName("hprimeF2")
                        .addClimateModelInputParam("ISSN1 88.1")
                        .addClimateModelInputParam("Option 2")
                        .climateModelName("IRI")
                        .addClimateModelOption("URSI-88")
                        .addClimateModelOption("No storm")
                        .d("K")
                        .lowerBound(1.26)
                        .q("T")
                        .uncertaintyBoundType("1sigma")
                        .upperBound(2.57)
                        .ursiId("04")
                        .build()
                )
                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                .createdBy("some.user")
                .d(1.1)
                .d1(1.94)
                .datum(
                    IonoObservationListResponse.Datum.builder()
                        .data(listOf(1.1, 2.1, 3.1))
                        .notes("NOTES")
                        .build()
                )
                .deltafoF2(1.1)
                .densityProfile(
                    IonoObservationListResponse.DensityProfile.builder()
                        .iri(
                            IonoObservationListResponse.DensityProfile.Iri.builder()
                                .b0(245.1)
                                .b1(3.45)
                                .chi(35.1)
                                .d1(0.0)
                                .description(
                                    "Full altitude range of 1D vertical plasma density profile for D, E, and F regions of the ionosphere provided by IRI, in which model parameters are replaced with observed ionogram-derived data where available."
                                )
                                .fp1(0.0474732023322638)
                                .fp2(-0.00112685246984002)
                                .fp30(0.00827559450035957)
                                .fp3U(0.000201178475411428)
                                .ha(50.1)
                                .hdx(85.6)
                                .hmD(81.1)
                                .hmE(99.8)
                                .hmF1(210.3)
                                .hmF2(265.42)
                                .hValTop(116.2)
                                .hz(142.7)
                                .nmD(937543116.1)
                                .nmE(154164.1)
                                .nmF1(210486.0)
                                .nmF2(313283.1)
                                .nValB(147025.1)
                                .build()
                        )
                        .parabolic(
                            IonoObservationListResponse.DensityProfile.Parabolic.builder()
                                .description("Best-fit algorithm in NHPC software.")
                                .addParabolicItem(
                                    IonoObservationListResponse.DensityProfile.Parabolic
                                        .ParabolicItem
                                        .builder()
                                        .f(3.621)
                                        .layer("E")
                                        .y(11.1)
                                        .z(110.2)
                                        .build()
                                )
                                .build()
                        )
                        .quasiParabolic(
                            IonoObservationListResponse.DensityProfile.QuasiParabolic.builder()
                                .description(
                                    "Array of the best-fit 3-parameter quasi-parabolas defined via A, B, C coefficients, f^2=A/r^2+B/r+C"
                                )
                                .earthRadius(6370.1)
                                .addQuasiParabolicSegment(
                                    IonoObservationListResponse.DensityProfile.QuasiParabolic
                                        .QuasiParabolicSegment
                                        .builder()
                                        .a(-550273940000.0)
                                        .b(169837632.0)
                                        .c(13104.63)
                                        .error(0.0016)
                                        .index(12)
                                        .rb(6460.1)
                                        .re(6480.001)
                                        .build()
                                )
                                .build()
                        )
                        .shiftedChebyshev(
                            IonoObservationListResponse.DensityProfile.ShiftedChebyshev.builder()
                                .description(
                                    "Best-fit Huang-Reinisch formalism based on shifted Chebyshev expansion."
                                )
                                .addShiftedChebyshev(
                                    IonoObservationListResponse.DensityProfile.ShiftedChebyshev
                                        .InnerShiftedChebyshev
                                        .builder()
                                        .coeffs(listOf(-11.2, -10.536, 3.357, -0.888, 0.155))
                                        .error(0.02)
                                        .fstart(0.2)
                                        .fstop(1.39)
                                        .layer("F2")
                                        .n(5)
                                        .peakheight(110.1)
                                        .zhalfNm(210.1)
                                        .build()
                                )
                                .build()
                        )
                        .topsideExtensionChapmanConst(
                            IonoObservationListResponse.DensityProfile.TopsideExtensionChapmanConst
                                .builder()
                                .chi(35.1)
                                .description(
                                    "Constant scale height Chapman topside layer determined using bottomside peak density parameters and placed chi km above the ionosonde-determined peak height."
                                )
                                .hmF2(265.42)
                                .nmF2(313283.1)
                                .scaleF2(45.191)
                                .build()
                        )
                        .topsideExtensionVaryChap(
                            IonoObservationListResponse.DensityProfile.TopsideExtensionVaryChap
                                .builder()
                                .alpha(30.1)
                                .beta(30.1)
                                .chi(30.1)
                                .description(
                                    "Constant scale height Chapman topside layer determined using bottomside peak density parameters and placed chi km above the ionosonde-determined peak height."
                                )
                                .hmF2(265.42)
                                .ht(30.1)
                                .nmF2(313283.1)
                                .scaleF2(45.191)
                                .build()
                        )
                        .addValleyModelCoeff(39.597)
                        .addValleyModelCoeff(0.1777)
                        .valleyModelDescription(
                            "2-parameter UMLCAR model with width W in km and depth D in MHz, no fitting."
                        )
                        .build()
                )
                .doppler(
                    IonoObservationListResponse.Doppler.builder()
                        .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                        .addDimensionName("NAME1")
                        .addDimensionName("NAME2")
                        .addDimension(1)
                        .addDimension(2)
                        .notes("NOTES")
                        .build()
                )
                .downE(1.1)
                .downEs(1.1)
                .downF(1.1)
                .electronDensity(listOf(1.1, 2.1, 3.1))
                .electronDensityUncertainty(listOf(0.8, 0.2, 0.5))
                .elevation(
                    IonoObservationListResponse.Elevation.builder()
                        .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                        .addDimensionName("NAME1")
                        .addDimensionName("NAME2")
                        .addDimension(2)
                        .addDimension(3)
                        .notes("NOTES")
                        .build()
                )
                .fbEs(34.867)
                .fe(1.23)
                .ff(0.075)
                .fhprimeF(2.5)
                .fhprimeF2(2.5)
                .fmin(2.025)
                .fminE(2.025)
                .fminEs(1.1)
                .fminF(2.7)
                .fmuf(1.1)
                .foE(1.1)
                .foEa(45.764)
                .foEp(1.1)
                .foEs(2.35)
                .foF1(8.2)
                .foF1p(1.1)
                .foF2(6.75)
                .foF2p(1.1)
                .foP(87.21)
                .frequency(
                    IonoObservationListResponse.Frequency.builder()
                        .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                        .addDimensionName("NAME1")
                        .addDimensionName("NAME2")
                        .addDimension(1)
                        .addDimension(2)
                        .notes("NOTES")
                        .build()
                )
                .fxE(1.1)
                .fxF1(4.2)
                .fxF2(4.5)
                .fxI(7.525)
                .height(listOf(1.1, 2.1, 3.1))
                .hmE(215.643)
                .hmF1(230.128)
                .hmF2(240.498)
                .hprimeE(98.47)
                .hprimeEa(102.6)
                .hprimeEs(95.0)
                .hprimeF(238.5)
                .hprimeF1(230.1)
                .hprimeF2(238.5)
                .hprimefMuf(1.1)
                .hprimeP(89.45)
                .idSensor("SENSOR-ID")
                .luf(1.1)
                .md(1.1)
                .mufd(1.1)
                .neProfileName("NH")
                .neProfileVersion(4.32)
                .origin("THIRD_PARTY_DATASOURCE")
                .origNetwork("OPS1")
                .origSensorId("ORIGSENSOR-ID")
                .phase(
                    IonoObservationListResponse.Phase.builder()
                        .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                        .addDimensionName("NAME1")
                        .addDimensionName("NAME2")
                        .addDimension(1)
                        .addDimension(2)
                        .notes("NOTES")
                        .build()
                )
                .plasmaFrequency(listOf(1.1, 2.1, 3.1))
                .plasmaFrequencyUncertainty(listOf(0.8, 0.2, 0.5))
                .platformName("Millstone Hill")
                .polarization(
                    IonoObservationListResponse.Polarization.builder()
                        .addData(
                            listOf(
                                listOf(
                                    listOf(
                                        listOf(
                                            listOf(
                                                listOf(
                                                    IonoObservationListResponse.Polarization
                                                        .UnnamedSchemaWithArrayParent0
                                                        .X,
                                                    IonoObservationListResponse.Polarization
                                                        .UnnamedSchemaWithArrayParent0
                                                        .O,
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                        .addDimensionName("NAME1")
                        .addDimensionName("NAME2")
                        .addDimension(1)
                        .addDimension(2)
                        .notes("NOTES")
                        .build()
                )
                .power(
                    IonoObservationListResponse.Power.builder()
                        .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                        .addDimensionName("NAME1")
                        .addDimensionName("NAME2")
                        .addDimension(1)
                        .addDimension(2)
                        .notes("NOTES")
                        .build()
                )
                .qe(0.95)
                .qf(1.83)
                .range(
                    IonoObservationListResponse.Range.builder()
                        .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                        .addDimensionName("NAME1")
                        .addDimensionName("NAME2")
                        .addDimension(1)
                        .addDimension(2)
                        .notes("NOTES")
                        .build()
                )
                .addReceiveCoordinate(listOf(45.5, 179.3, 35.6))
                .addReceiveCoordinate(listOf(-80.2, -20.5, 43.2))
                .receiveSensorType(IonoObservationListResponse.ReceiveSensorType.MOBILE)
                .restrictedFrequency(listOf(12.5, 34.5, 45.3))
                .restrictedFrequencyNotes("Example notes")
                .scaleHeightF2Peak(35.613)
                .scalerInfo(
                    IonoObservationListResponse.ScalerInfo.builder()
                        .confidenceLevel(11)
                        .confidenceScore(75)
                        .name("ARTIST-4")
                        .organization("UML")
                        .type("MANUAL")
                        .version(500200.1)
                        .build()
                )
                .stokes(
                    IonoObservationListResponse.Stokes.builder()
                        .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                        .addDimensionName("NAMES1")
                        .addDimensionName("NAMES2")
                        .addDimension(2)
                        .addDimension(3)
                        .notes("NOTES")
                        .addS(1.0)
                        .addS(2.0)
                        .build()
                )
                .systemNotes("Example notes")
                .tec(24.673)
                .tidAzimuth(listOf(1.1, 2.1, 3.1))
                .tidPeriods(listOf(1.1, 2.1, 3.1))
                .tidPhaseSpeeds(listOf(1.1, 2.1, 3.1))
                .time(
                    IonoObservationListResponse.Time.builder()
                        .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                        .addDimensionName("NAME1")
                        .addDimensionName("NAME2")
                        .addDimension(1)
                        .addDimension(2)
                        .notes("NOTES")
                        .build()
                )
                .traceGeneric(
                    IonoObservationListResponse.TraceGeneric.builder()
                        .addData(listOf(listOf(1.23, 1.0903)))
                        .addDimensionName("NAME1")
                        .addDimensionName("NAME2")
                        .notes("NOTES")
                        .build()
                )
                .addTransmitCoordinate(listOf(45.5, 179.3, 35.6))
                .addTransmitCoordinate(listOf(-80.2, -20.5, 43.2))
                .transmitSensorType(IonoObservationListResponse.TransmitSensorType.MOBILE)
                .typeEs("Auroral")
                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                .updatedBy("some.user")
                .yE(1.722)
                .yF1(55.645)
                .yF2(62.178)
                .zhalfNm(240.498)
                .zmE(91.744)
                .build()

        assertThat(ionoObservationListResponse.classificationMarking()).isEqualTo("U")
        assertThat(ionoObservationListResponse.dataMode())
            .isEqualTo(IonoObservationListResponse.DataMode.TEST)
        assertThat(ionoObservationListResponse.source()).isEqualTo("Bluestaq")
        assertThat(ionoObservationListResponse.startTimeUtc())
            .isEqualTo(OffsetDateTime.parse("2021-01-01T01:01:01.123456Z"))
        assertThat(ionoObservationListResponse.stationId()).isEqualTo("STATION-ID")
        assertThat(ionoObservationListResponse.system()).isEqualTo("Example hardware type")
        assertThat(ionoObservationListResponse.systemInfo()).isEqualTo("Example settings")
        assertThat(ionoObservationListResponse.id()).contains("IONOOBSERVATION-ID")
        assertThat(ionoObservationListResponse.amplitude())
            .contains(
                IonoObservationListResponse.Amplitude.builder()
                    .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                    .addDimensionName("NAME1")
                    .addDimensionName("NAME2")
                    .addDimension(4)
                    .addDimension(5)
                    .notes("NOTES")
                    .build()
            )
        assertThat(ionoObservationListResponse.antennaElementPosition())
            .contains(
                IonoObservationListResponse.AntennaElementPosition.builder()
                    .addData(listOf(1.23, 0.123))
                    .addDimensionName("NAME1")
                    .addDimensionName("NAME2")
                    .addDimension(3)
                    .addDimension(4)
                    .build()
            )
        assertThat(ionoObservationListResponse.antennaElementPositionCoordinateSystem())
            .contains(IonoObservationListResponse.AntennaElementPositionCoordinateSystem.J2000)
        assertThat(ionoObservationListResponse.artistFlags().getOrNull()).containsExactly(1, 2, 3)
        assertThat(ionoObservationListResponse.azimuth())
            .contains(
                IonoObservationListResponse.Azimuth.builder()
                    .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                    .addDimensionName("NAME1")
                    .addDimensionName("NAME2")
                    .addDimension(1)
                    .addDimension(2)
                    .notes("NOTES")
                    .build()
            )
        assertThat(ionoObservationListResponse.b0()).contains(68.07)
        assertThat(ionoObservationListResponse.b1()).contains(1.87)
        assertThat(ionoObservationListResponse.charAtts().getOrNull())
            .containsExactly(
                IonoObservationListResponse.CharAtt.builder()
                    .charName("hprimeF2")
                    .addClimateModelInputParam("ISSN1 88.1")
                    .addClimateModelInputParam("Option 2")
                    .climateModelName("IRI")
                    .addClimateModelOption("URSI-88")
                    .addClimateModelOption("No storm")
                    .d("K")
                    .lowerBound(1.26)
                    .q("T")
                    .uncertaintyBoundType("1sigma")
                    .upperBound(2.57)
                    .ursiId("04")
                    .build()
            )
        assertThat(ionoObservationListResponse.createdAt())
            .contains(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
        assertThat(ionoObservationListResponse.createdBy()).contains("some.user")
        assertThat(ionoObservationListResponse.d()).contains(1.1)
        assertThat(ionoObservationListResponse.d1()).contains(1.94)
        assertThat(ionoObservationListResponse.datum())
            .contains(
                IonoObservationListResponse.Datum.builder()
                    .data(listOf(1.1, 2.1, 3.1))
                    .notes("NOTES")
                    .build()
            )
        assertThat(ionoObservationListResponse.deltafoF2()).contains(1.1)
        assertThat(ionoObservationListResponse.densityProfile())
            .contains(
                IonoObservationListResponse.DensityProfile.builder()
                    .iri(
                        IonoObservationListResponse.DensityProfile.Iri.builder()
                            .b0(245.1)
                            .b1(3.45)
                            .chi(35.1)
                            .d1(0.0)
                            .description(
                                "Full altitude range of 1D vertical plasma density profile for D, E, and F regions of the ionosphere provided by IRI, in which model parameters are replaced with observed ionogram-derived data where available."
                            )
                            .fp1(0.0474732023322638)
                            .fp2(-0.00112685246984002)
                            .fp30(0.00827559450035957)
                            .fp3U(0.000201178475411428)
                            .ha(50.1)
                            .hdx(85.6)
                            .hmD(81.1)
                            .hmE(99.8)
                            .hmF1(210.3)
                            .hmF2(265.42)
                            .hValTop(116.2)
                            .hz(142.7)
                            .nmD(937543116.1)
                            .nmE(154164.1)
                            .nmF1(210486.0)
                            .nmF2(313283.1)
                            .nValB(147025.1)
                            .build()
                    )
                    .parabolic(
                        IonoObservationListResponse.DensityProfile.Parabolic.builder()
                            .description("Best-fit algorithm in NHPC software.")
                            .addParabolicItem(
                                IonoObservationListResponse.DensityProfile.Parabolic.ParabolicItem
                                    .builder()
                                    .f(3.621)
                                    .layer("E")
                                    .y(11.1)
                                    .z(110.2)
                                    .build()
                            )
                            .build()
                    )
                    .quasiParabolic(
                        IonoObservationListResponse.DensityProfile.QuasiParabolic.builder()
                            .description(
                                "Array of the best-fit 3-parameter quasi-parabolas defined via A, B, C coefficients, f^2=A/r^2+B/r+C"
                            )
                            .earthRadius(6370.1)
                            .addQuasiParabolicSegment(
                                IonoObservationListResponse.DensityProfile.QuasiParabolic
                                    .QuasiParabolicSegment
                                    .builder()
                                    .a(-550273940000.0)
                                    .b(169837632.0)
                                    .c(13104.63)
                                    .error(0.0016)
                                    .index(12)
                                    .rb(6460.1)
                                    .re(6480.001)
                                    .build()
                            )
                            .build()
                    )
                    .shiftedChebyshev(
                        IonoObservationListResponse.DensityProfile.ShiftedChebyshev.builder()
                            .description(
                                "Best-fit Huang-Reinisch formalism based on shifted Chebyshev expansion."
                            )
                            .addShiftedChebyshev(
                                IonoObservationListResponse.DensityProfile.ShiftedChebyshev
                                    .InnerShiftedChebyshev
                                    .builder()
                                    .coeffs(listOf(-11.2, -10.536, 3.357, -0.888, 0.155))
                                    .error(0.02)
                                    .fstart(0.2)
                                    .fstop(1.39)
                                    .layer("F2")
                                    .n(5)
                                    .peakheight(110.1)
                                    .zhalfNm(210.1)
                                    .build()
                            )
                            .build()
                    )
                    .topsideExtensionChapmanConst(
                        IonoObservationListResponse.DensityProfile.TopsideExtensionChapmanConst
                            .builder()
                            .chi(35.1)
                            .description(
                                "Constant scale height Chapman topside layer determined using bottomside peak density parameters and placed chi km above the ionosonde-determined peak height."
                            )
                            .hmF2(265.42)
                            .nmF2(313283.1)
                            .scaleF2(45.191)
                            .build()
                    )
                    .topsideExtensionVaryChap(
                        IonoObservationListResponse.DensityProfile.TopsideExtensionVaryChap
                            .builder()
                            .alpha(30.1)
                            .beta(30.1)
                            .chi(30.1)
                            .description(
                                "Constant scale height Chapman topside layer determined using bottomside peak density parameters and placed chi km above the ionosonde-determined peak height."
                            )
                            .hmF2(265.42)
                            .ht(30.1)
                            .nmF2(313283.1)
                            .scaleF2(45.191)
                            .build()
                    )
                    .addValleyModelCoeff(39.597)
                    .addValleyModelCoeff(0.1777)
                    .valleyModelDescription(
                        "2-parameter UMLCAR model with width W in km and depth D in MHz, no fitting."
                    )
                    .build()
            )
        assertThat(ionoObservationListResponse.doppler())
            .contains(
                IonoObservationListResponse.Doppler.builder()
                    .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                    .addDimensionName("NAME1")
                    .addDimensionName("NAME2")
                    .addDimension(1)
                    .addDimension(2)
                    .notes("NOTES")
                    .build()
            )
        assertThat(ionoObservationListResponse.downE()).contains(1.1)
        assertThat(ionoObservationListResponse.downEs()).contains(1.1)
        assertThat(ionoObservationListResponse.downF()).contains(1.1)
        assertThat(ionoObservationListResponse.electronDensity().getOrNull())
            .containsExactly(1.1, 2.1, 3.1)
        assertThat(ionoObservationListResponse.electronDensityUncertainty().getOrNull())
            .containsExactly(0.8, 0.2, 0.5)
        assertThat(ionoObservationListResponse.elevation())
            .contains(
                IonoObservationListResponse.Elevation.builder()
                    .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                    .addDimensionName("NAME1")
                    .addDimensionName("NAME2")
                    .addDimension(2)
                    .addDimension(3)
                    .notes("NOTES")
                    .build()
            )
        assertThat(ionoObservationListResponse.fbEs()).contains(34.867)
        assertThat(ionoObservationListResponse.fe()).contains(1.23)
        assertThat(ionoObservationListResponse.ff()).contains(0.075)
        assertThat(ionoObservationListResponse.fhprimeF()).contains(2.5)
        assertThat(ionoObservationListResponse.fhprimeF2()).contains(2.5)
        assertThat(ionoObservationListResponse.fmin()).contains(2.025)
        assertThat(ionoObservationListResponse.fminE()).contains(2.025)
        assertThat(ionoObservationListResponse.fminEs()).contains(1.1)
        assertThat(ionoObservationListResponse.fminF()).contains(2.7)
        assertThat(ionoObservationListResponse.fmuf()).contains(1.1)
        assertThat(ionoObservationListResponse.foE()).contains(1.1)
        assertThat(ionoObservationListResponse.foEa()).contains(45.764)
        assertThat(ionoObservationListResponse.foEp()).contains(1.1)
        assertThat(ionoObservationListResponse.foEs()).contains(2.35)
        assertThat(ionoObservationListResponse.foF1()).contains(8.2)
        assertThat(ionoObservationListResponse.foF1p()).contains(1.1)
        assertThat(ionoObservationListResponse.foF2()).contains(6.75)
        assertThat(ionoObservationListResponse.foF2p()).contains(1.1)
        assertThat(ionoObservationListResponse.foP()).contains(87.21)
        assertThat(ionoObservationListResponse.frequency())
            .contains(
                IonoObservationListResponse.Frequency.builder()
                    .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                    .addDimensionName("NAME1")
                    .addDimensionName("NAME2")
                    .addDimension(1)
                    .addDimension(2)
                    .notes("NOTES")
                    .build()
            )
        assertThat(ionoObservationListResponse.fxE()).contains(1.1)
        assertThat(ionoObservationListResponse.fxF1()).contains(4.2)
        assertThat(ionoObservationListResponse.fxF2()).contains(4.5)
        assertThat(ionoObservationListResponse.fxI()).contains(7.525)
        assertThat(ionoObservationListResponse.height().getOrNull()).containsExactly(1.1, 2.1, 3.1)
        assertThat(ionoObservationListResponse.hmE()).contains(215.643)
        assertThat(ionoObservationListResponse.hmF1()).contains(230.128)
        assertThat(ionoObservationListResponse.hmF2()).contains(240.498)
        assertThat(ionoObservationListResponse.hprimeE()).contains(98.47)
        assertThat(ionoObservationListResponse.hprimeEa()).contains(102.6)
        assertThat(ionoObservationListResponse.hprimeEs()).contains(95.0)
        assertThat(ionoObservationListResponse.hprimeF()).contains(238.5)
        assertThat(ionoObservationListResponse.hprimeF1()).contains(230.1)
        assertThat(ionoObservationListResponse.hprimeF2()).contains(238.5)
        assertThat(ionoObservationListResponse.hprimefMuf()).contains(1.1)
        assertThat(ionoObservationListResponse.hprimeP()).contains(89.45)
        assertThat(ionoObservationListResponse.idSensor()).contains("SENSOR-ID")
        assertThat(ionoObservationListResponse.luf()).contains(1.1)
        assertThat(ionoObservationListResponse.md()).contains(1.1)
        assertThat(ionoObservationListResponse.mufd()).contains(1.1)
        assertThat(ionoObservationListResponse.neProfileName()).contains("NH")
        assertThat(ionoObservationListResponse.neProfileVersion()).contains(4.32)
        assertThat(ionoObservationListResponse.origin()).contains("THIRD_PARTY_DATASOURCE")
        assertThat(ionoObservationListResponse.origNetwork()).contains("OPS1")
        assertThat(ionoObservationListResponse.origSensorId()).contains("ORIGSENSOR-ID")
        assertThat(ionoObservationListResponse.phase())
            .contains(
                IonoObservationListResponse.Phase.builder()
                    .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                    .addDimensionName("NAME1")
                    .addDimensionName("NAME2")
                    .addDimension(1)
                    .addDimension(2)
                    .notes("NOTES")
                    .build()
            )
        assertThat(ionoObservationListResponse.plasmaFrequency().getOrNull())
            .containsExactly(1.1, 2.1, 3.1)
        assertThat(ionoObservationListResponse.plasmaFrequencyUncertainty().getOrNull())
            .containsExactly(0.8, 0.2, 0.5)
        assertThat(ionoObservationListResponse.platformName()).contains("Millstone Hill")
        assertThat(ionoObservationListResponse.polarization())
            .contains(
                IonoObservationListResponse.Polarization.builder()
                    .addData(
                        listOf(
                            listOf(
                                listOf(
                                    listOf(
                                        listOf(
                                            listOf(
                                                IonoObservationListResponse.Polarization
                                                    .UnnamedSchemaWithArrayParent0
                                                    .X,
                                                IonoObservationListResponse.Polarization
                                                    .UnnamedSchemaWithArrayParent0
                                                    .O,
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                    .addDimensionName("NAME1")
                    .addDimensionName("NAME2")
                    .addDimension(1)
                    .addDimension(2)
                    .notes("NOTES")
                    .build()
            )
        assertThat(ionoObservationListResponse.power())
            .contains(
                IonoObservationListResponse.Power.builder()
                    .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                    .addDimensionName("NAME1")
                    .addDimensionName("NAME2")
                    .addDimension(1)
                    .addDimension(2)
                    .notes("NOTES")
                    .build()
            )
        assertThat(ionoObservationListResponse.qe()).contains(0.95)
        assertThat(ionoObservationListResponse.qf()).contains(1.83)
        assertThat(ionoObservationListResponse.range())
            .contains(
                IonoObservationListResponse.Range.builder()
                    .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                    .addDimensionName("NAME1")
                    .addDimensionName("NAME2")
                    .addDimension(1)
                    .addDimension(2)
                    .notes("NOTES")
                    .build()
            )
        assertThat(ionoObservationListResponse.receiveCoordinates().getOrNull())
            .containsExactly(listOf(45.5, 179.3, 35.6), listOf(-80.2, -20.5, 43.2))
        assertThat(ionoObservationListResponse.receiveSensorType())
            .contains(IonoObservationListResponse.ReceiveSensorType.MOBILE)
        assertThat(ionoObservationListResponse.restrictedFrequency().getOrNull())
            .containsExactly(12.5, 34.5, 45.3)
        assertThat(ionoObservationListResponse.restrictedFrequencyNotes()).contains("Example notes")
        assertThat(ionoObservationListResponse.scaleHeightF2Peak()).contains(35.613)
        assertThat(ionoObservationListResponse.scalerInfo())
            .contains(
                IonoObservationListResponse.ScalerInfo.builder()
                    .confidenceLevel(11)
                    .confidenceScore(75)
                    .name("ARTIST-4")
                    .organization("UML")
                    .type("MANUAL")
                    .version(500200.1)
                    .build()
            )
        assertThat(ionoObservationListResponse.stokes())
            .contains(
                IonoObservationListResponse.Stokes.builder()
                    .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                    .addDimensionName("NAMES1")
                    .addDimensionName("NAMES2")
                    .addDimension(2)
                    .addDimension(3)
                    .notes("NOTES")
                    .addS(1.0)
                    .addS(2.0)
                    .build()
            )
        assertThat(ionoObservationListResponse.systemNotes()).contains("Example notes")
        assertThat(ionoObservationListResponse.tec()).contains(24.673)
        assertThat(ionoObservationListResponse.tidAzimuth().getOrNull())
            .containsExactly(1.1, 2.1, 3.1)
        assertThat(ionoObservationListResponse.tidPeriods().getOrNull())
            .containsExactly(1.1, 2.1, 3.1)
        assertThat(ionoObservationListResponse.tidPhaseSpeeds().getOrNull())
            .containsExactly(1.1, 2.1, 3.1)
        assertThat(ionoObservationListResponse.time())
            .contains(
                IonoObservationListResponse.Time.builder()
                    .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                    .addDimensionName("NAME1")
                    .addDimensionName("NAME2")
                    .addDimension(1)
                    .addDimension(2)
                    .notes("NOTES")
                    .build()
            )
        assertThat(ionoObservationListResponse.traceGeneric())
            .contains(
                IonoObservationListResponse.TraceGeneric.builder()
                    .addData(listOf(listOf(1.23, 1.0903)))
                    .addDimensionName("NAME1")
                    .addDimensionName("NAME2")
                    .notes("NOTES")
                    .build()
            )
        assertThat(ionoObservationListResponse.transmitCoordinates().getOrNull())
            .containsExactly(listOf(45.5, 179.3, 35.6), listOf(-80.2, -20.5, 43.2))
        assertThat(ionoObservationListResponse.transmitSensorType())
            .contains(IonoObservationListResponse.TransmitSensorType.MOBILE)
        assertThat(ionoObservationListResponse.typeEs()).contains("Auroral")
        assertThat(ionoObservationListResponse.updatedAt())
            .contains(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
        assertThat(ionoObservationListResponse.updatedBy()).contains("some.user")
        assertThat(ionoObservationListResponse.yE()).contains(1.722)
        assertThat(ionoObservationListResponse.yF1()).contains(55.645)
        assertThat(ionoObservationListResponse.yF2()).contains(62.178)
        assertThat(ionoObservationListResponse.zhalfNm()).contains(240.498)
        assertThat(ionoObservationListResponse.zmE()).contains(91.744)
    }

    @Test
    fun roundtrip() {
        val jsonMapper = jsonMapper()
        val ionoObservationListResponse =
            IonoObservationListResponse.builder()
                .classificationMarking("U")
                .dataMode(IonoObservationListResponse.DataMode.TEST)
                .source("Bluestaq")
                .startTimeUtc(OffsetDateTime.parse("2021-01-01T01:01:01.123456Z"))
                .stationId("STATION-ID")
                .system("Example hardware type")
                .systemInfo("Example settings")
                .id("IONOOBSERVATION-ID")
                .amplitude(
                    IonoObservationListResponse.Amplitude.builder()
                        .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                        .addDimensionName("NAME1")
                        .addDimensionName("NAME2")
                        .addDimension(4)
                        .addDimension(5)
                        .notes("NOTES")
                        .build()
                )
                .antennaElementPosition(
                    IonoObservationListResponse.AntennaElementPosition.builder()
                        .addData(listOf(1.23, 0.123))
                        .addDimensionName("NAME1")
                        .addDimensionName("NAME2")
                        .addDimension(3)
                        .addDimension(4)
                        .build()
                )
                .antennaElementPositionCoordinateSystem(
                    IonoObservationListResponse.AntennaElementPositionCoordinateSystem.J2000
                )
                .artistFlags(listOf(1, 2, 3))
                .azimuth(
                    IonoObservationListResponse.Azimuth.builder()
                        .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                        .addDimensionName("NAME1")
                        .addDimensionName("NAME2")
                        .addDimension(1)
                        .addDimension(2)
                        .notes("NOTES")
                        .build()
                )
                .b0(68.07)
                .b1(1.87)
                .addCharAtt(
                    IonoObservationListResponse.CharAtt.builder()
                        .charName("hprimeF2")
                        .addClimateModelInputParam("ISSN1 88.1")
                        .addClimateModelInputParam("Option 2")
                        .climateModelName("IRI")
                        .addClimateModelOption("URSI-88")
                        .addClimateModelOption("No storm")
                        .d("K")
                        .lowerBound(1.26)
                        .q("T")
                        .uncertaintyBoundType("1sigma")
                        .upperBound(2.57)
                        .ursiId("04")
                        .build()
                )
                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                .createdBy("some.user")
                .d(1.1)
                .d1(1.94)
                .datum(
                    IonoObservationListResponse.Datum.builder()
                        .data(listOf(1.1, 2.1, 3.1))
                        .notes("NOTES")
                        .build()
                )
                .deltafoF2(1.1)
                .densityProfile(
                    IonoObservationListResponse.DensityProfile.builder()
                        .iri(
                            IonoObservationListResponse.DensityProfile.Iri.builder()
                                .b0(245.1)
                                .b1(3.45)
                                .chi(35.1)
                                .d1(0.0)
                                .description(
                                    "Full altitude range of 1D vertical plasma density profile for D, E, and F regions of the ionosphere provided by IRI, in which model parameters are replaced with observed ionogram-derived data where available."
                                )
                                .fp1(0.0474732023322638)
                                .fp2(-0.00112685246984002)
                                .fp30(0.00827559450035957)
                                .fp3U(0.000201178475411428)
                                .ha(50.1)
                                .hdx(85.6)
                                .hmD(81.1)
                                .hmE(99.8)
                                .hmF1(210.3)
                                .hmF2(265.42)
                                .hValTop(116.2)
                                .hz(142.7)
                                .nmD(937543116.1)
                                .nmE(154164.1)
                                .nmF1(210486.0)
                                .nmF2(313283.1)
                                .nValB(147025.1)
                                .build()
                        )
                        .parabolic(
                            IonoObservationListResponse.DensityProfile.Parabolic.builder()
                                .description("Best-fit algorithm in NHPC software.")
                                .addParabolicItem(
                                    IonoObservationListResponse.DensityProfile.Parabolic
                                        .ParabolicItem
                                        .builder()
                                        .f(3.621)
                                        .layer("E")
                                        .y(11.1)
                                        .z(110.2)
                                        .build()
                                )
                                .build()
                        )
                        .quasiParabolic(
                            IonoObservationListResponse.DensityProfile.QuasiParabolic.builder()
                                .description(
                                    "Array of the best-fit 3-parameter quasi-parabolas defined via A, B, C coefficients, f^2=A/r^2+B/r+C"
                                )
                                .earthRadius(6370.1)
                                .addQuasiParabolicSegment(
                                    IonoObservationListResponse.DensityProfile.QuasiParabolic
                                        .QuasiParabolicSegment
                                        .builder()
                                        .a(-550273940000.0)
                                        .b(169837632.0)
                                        .c(13104.63)
                                        .error(0.0016)
                                        .index(12)
                                        .rb(6460.1)
                                        .re(6480.001)
                                        .build()
                                )
                                .build()
                        )
                        .shiftedChebyshev(
                            IonoObservationListResponse.DensityProfile.ShiftedChebyshev.builder()
                                .description(
                                    "Best-fit Huang-Reinisch formalism based on shifted Chebyshev expansion."
                                )
                                .addShiftedChebyshev(
                                    IonoObservationListResponse.DensityProfile.ShiftedChebyshev
                                        .InnerShiftedChebyshev
                                        .builder()
                                        .coeffs(listOf(-11.2, -10.536, 3.357, -0.888, 0.155))
                                        .error(0.02)
                                        .fstart(0.2)
                                        .fstop(1.39)
                                        .layer("F2")
                                        .n(5)
                                        .peakheight(110.1)
                                        .zhalfNm(210.1)
                                        .build()
                                )
                                .build()
                        )
                        .topsideExtensionChapmanConst(
                            IonoObservationListResponse.DensityProfile.TopsideExtensionChapmanConst
                                .builder()
                                .chi(35.1)
                                .description(
                                    "Constant scale height Chapman topside layer determined using bottomside peak density parameters and placed chi km above the ionosonde-determined peak height."
                                )
                                .hmF2(265.42)
                                .nmF2(313283.1)
                                .scaleF2(45.191)
                                .build()
                        )
                        .topsideExtensionVaryChap(
                            IonoObservationListResponse.DensityProfile.TopsideExtensionVaryChap
                                .builder()
                                .alpha(30.1)
                                .beta(30.1)
                                .chi(30.1)
                                .description(
                                    "Constant scale height Chapman topside layer determined using bottomside peak density parameters and placed chi km above the ionosonde-determined peak height."
                                )
                                .hmF2(265.42)
                                .ht(30.1)
                                .nmF2(313283.1)
                                .scaleF2(45.191)
                                .build()
                        )
                        .addValleyModelCoeff(39.597)
                        .addValleyModelCoeff(0.1777)
                        .valleyModelDescription(
                            "2-parameter UMLCAR model with width W in km and depth D in MHz, no fitting."
                        )
                        .build()
                )
                .doppler(
                    IonoObservationListResponse.Doppler.builder()
                        .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                        .addDimensionName("NAME1")
                        .addDimensionName("NAME2")
                        .addDimension(1)
                        .addDimension(2)
                        .notes("NOTES")
                        .build()
                )
                .downE(1.1)
                .downEs(1.1)
                .downF(1.1)
                .electronDensity(listOf(1.1, 2.1, 3.1))
                .electronDensityUncertainty(listOf(0.8, 0.2, 0.5))
                .elevation(
                    IonoObservationListResponse.Elevation.builder()
                        .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                        .addDimensionName("NAME1")
                        .addDimensionName("NAME2")
                        .addDimension(2)
                        .addDimension(3)
                        .notes("NOTES")
                        .build()
                )
                .fbEs(34.867)
                .fe(1.23)
                .ff(0.075)
                .fhprimeF(2.5)
                .fhprimeF2(2.5)
                .fmin(2.025)
                .fminE(2.025)
                .fminEs(1.1)
                .fminF(2.7)
                .fmuf(1.1)
                .foE(1.1)
                .foEa(45.764)
                .foEp(1.1)
                .foEs(2.35)
                .foF1(8.2)
                .foF1p(1.1)
                .foF2(6.75)
                .foF2p(1.1)
                .foP(87.21)
                .frequency(
                    IonoObservationListResponse.Frequency.builder()
                        .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                        .addDimensionName("NAME1")
                        .addDimensionName("NAME2")
                        .addDimension(1)
                        .addDimension(2)
                        .notes("NOTES")
                        .build()
                )
                .fxE(1.1)
                .fxF1(4.2)
                .fxF2(4.5)
                .fxI(7.525)
                .height(listOf(1.1, 2.1, 3.1))
                .hmE(215.643)
                .hmF1(230.128)
                .hmF2(240.498)
                .hprimeE(98.47)
                .hprimeEa(102.6)
                .hprimeEs(95.0)
                .hprimeF(238.5)
                .hprimeF1(230.1)
                .hprimeF2(238.5)
                .hprimefMuf(1.1)
                .hprimeP(89.45)
                .idSensor("SENSOR-ID")
                .luf(1.1)
                .md(1.1)
                .mufd(1.1)
                .neProfileName("NH")
                .neProfileVersion(4.32)
                .origin("THIRD_PARTY_DATASOURCE")
                .origNetwork("OPS1")
                .origSensorId("ORIGSENSOR-ID")
                .phase(
                    IonoObservationListResponse.Phase.builder()
                        .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                        .addDimensionName("NAME1")
                        .addDimensionName("NAME2")
                        .addDimension(1)
                        .addDimension(2)
                        .notes("NOTES")
                        .build()
                )
                .plasmaFrequency(listOf(1.1, 2.1, 3.1))
                .plasmaFrequencyUncertainty(listOf(0.8, 0.2, 0.5))
                .platformName("Millstone Hill")
                .polarization(
                    IonoObservationListResponse.Polarization.builder()
                        .addData(
                            listOf(
                                listOf(
                                    listOf(
                                        listOf(
                                            listOf(
                                                listOf(
                                                    IonoObservationListResponse.Polarization
                                                        .UnnamedSchemaWithArrayParent0
                                                        .X,
                                                    IonoObservationListResponse.Polarization
                                                        .UnnamedSchemaWithArrayParent0
                                                        .O,
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                        .addDimensionName("NAME1")
                        .addDimensionName("NAME2")
                        .addDimension(1)
                        .addDimension(2)
                        .notes("NOTES")
                        .build()
                )
                .power(
                    IonoObservationListResponse.Power.builder()
                        .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                        .addDimensionName("NAME1")
                        .addDimensionName("NAME2")
                        .addDimension(1)
                        .addDimension(2)
                        .notes("NOTES")
                        .build()
                )
                .qe(0.95)
                .qf(1.83)
                .range(
                    IonoObservationListResponse.Range.builder()
                        .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                        .addDimensionName("NAME1")
                        .addDimensionName("NAME2")
                        .addDimension(1)
                        .addDimension(2)
                        .notes("NOTES")
                        .build()
                )
                .addReceiveCoordinate(listOf(45.5, 179.3, 35.6))
                .addReceiveCoordinate(listOf(-80.2, -20.5, 43.2))
                .receiveSensorType(IonoObservationListResponse.ReceiveSensorType.MOBILE)
                .restrictedFrequency(listOf(12.5, 34.5, 45.3))
                .restrictedFrequencyNotes("Example notes")
                .scaleHeightF2Peak(35.613)
                .scalerInfo(
                    IonoObservationListResponse.ScalerInfo.builder()
                        .confidenceLevel(11)
                        .confidenceScore(75)
                        .name("ARTIST-4")
                        .organization("UML")
                        .type("MANUAL")
                        .version(500200.1)
                        .build()
                )
                .stokes(
                    IonoObservationListResponse.Stokes.builder()
                        .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                        .addDimensionName("NAMES1")
                        .addDimensionName("NAMES2")
                        .addDimension(2)
                        .addDimension(3)
                        .notes("NOTES")
                        .addS(1.0)
                        .addS(2.0)
                        .build()
                )
                .systemNotes("Example notes")
                .tec(24.673)
                .tidAzimuth(listOf(1.1, 2.1, 3.1))
                .tidPeriods(listOf(1.1, 2.1, 3.1))
                .tidPhaseSpeeds(listOf(1.1, 2.1, 3.1))
                .time(
                    IonoObservationListResponse.Time.builder()
                        .addData(listOf(listOf(listOf(listOf(listOf(listOf(0.02, 0.034)))))))
                        .addDimensionName("NAME1")
                        .addDimensionName("NAME2")
                        .addDimension(1)
                        .addDimension(2)
                        .notes("NOTES")
                        .build()
                )
                .traceGeneric(
                    IonoObservationListResponse.TraceGeneric.builder()
                        .addData(listOf(listOf(1.23, 1.0903)))
                        .addDimensionName("NAME1")
                        .addDimensionName("NAME2")
                        .notes("NOTES")
                        .build()
                )
                .addTransmitCoordinate(listOf(45.5, 179.3, 35.6))
                .addTransmitCoordinate(listOf(-80.2, -20.5, 43.2))
                .transmitSensorType(IonoObservationListResponse.TransmitSensorType.MOBILE)
                .typeEs("Auroral")
                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                .updatedBy("some.user")
                .yE(1.722)
                .yF1(55.645)
                .yF2(62.178)
                .zhalfNm(240.498)
                .zmE(91.744)
                .build()

        val roundtrippedIonoObservationListResponse =
            jsonMapper.readValue(
                jsonMapper.writeValueAsString(ionoObservationListResponse),
                jacksonTypeRef<IonoObservationListResponse>(),
            )

        assertThat(roundtrippedIonoObservationListResponse).isEqualTo(ionoObservationListResponse)
    }
}
