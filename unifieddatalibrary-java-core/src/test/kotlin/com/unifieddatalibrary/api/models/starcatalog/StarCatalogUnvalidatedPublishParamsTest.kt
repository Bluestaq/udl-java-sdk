// File generated from our OpenAPI spec by Stainless.

package com.unifieddatalibrary.api.models.starcatalog

import java.time.OffsetDateTime
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class StarCatalogUnvalidatedPublishParamsTest {

    @Test
    fun create() {
        StarCatalogUnvalidatedPublishParams.builder()
            .addBody(
                StarCatalogUnvalidatedPublishParams.Body.builder()
                    .astrometryOrigin(
                        StarCatalogUnvalidatedPublishParams.Body.AstrometryOrigin.GAIADR3
                    )
                    .classificationMarking("U")
                    .csId(12345L)
                    .dataMode(StarCatalogUnvalidatedPublishParams.Body.DataMode.TEST)
                    .dec(21.8)
                    .ra(14.43)
                    .source("Bluestaq")
                    .starEpoch(2016.0)
                    .id("STAR-CAT-DATASET-ID")
                    .bpmag(0.04559)
                    .bpmagUnc(0.2227)
                    .catVersion("1.23")
                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .decUnc(40.996)
                    .gaiadr3CatId(89012345678901L)
                    .gmag(0.0046)
                    .gmagUnc(0.00292)
                    .gncCatId(12345)
                    .hipCatId(12345)
                    .hmag(12.126)
                    .hmagUnc(5.722)
                    .jmag(9.515)
                    .jmagUnc(7.559)
                    .kmag(13.545)
                    .kmagUnc(0.052)
                    .multFlag(true)
                    .neighborDistance(201.406)
                    .neighborFlag(false)
                    .neighborId(2456)
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("ORIG")
                    .parallax(-6.8)
                    .parallaxUnc(82.35)
                    .pmdec(-970.1003)
                    .pmdecUnc(1.22)
                    .pmra(1000.45)
                    .pmraUnc(5.6)
                    .pmUncFlag(false)
                    .posUncFlag(false)
                    .raUnc(509.466)
                    .rpmag(8.0047)
                    .rpmagUnc(1.233)
                    .shift(4.548)
                    .shiftFlag(false)
                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .updatedBy("some.user")
                    .varFlag(true)
                    .build()
            )
            .build()
    }

    @Test
    fun body() {
        val params =
            StarCatalogUnvalidatedPublishParams.builder()
                .addBody(
                    StarCatalogUnvalidatedPublishParams.Body.builder()
                        .astrometryOrigin(
                            StarCatalogUnvalidatedPublishParams.Body.AstrometryOrigin.GAIADR3
                        )
                        .classificationMarking("U")
                        .csId(12345L)
                        .dataMode(StarCatalogUnvalidatedPublishParams.Body.DataMode.TEST)
                        .dec(21.8)
                        .ra(14.43)
                        .source("Bluestaq")
                        .starEpoch(2016.0)
                        .id("STAR-CAT-DATASET-ID")
                        .bpmag(0.04559)
                        .bpmagUnc(0.2227)
                        .catVersion("1.23")
                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .createdBy("some.user")
                        .decUnc(40.996)
                        .gaiadr3CatId(89012345678901L)
                        .gmag(0.0046)
                        .gmagUnc(0.00292)
                        .gncCatId(12345)
                        .hipCatId(12345)
                        .hmag(12.126)
                        .hmagUnc(5.722)
                        .jmag(9.515)
                        .jmagUnc(7.559)
                        .kmag(13.545)
                        .kmagUnc(0.052)
                        .multFlag(true)
                        .neighborDistance(201.406)
                        .neighborFlag(false)
                        .neighborId(2456)
                        .origin("THIRD_PARTY_DATASOURCE")
                        .origNetwork("ORIG")
                        .parallax(-6.8)
                        .parallaxUnc(82.35)
                        .pmdec(-970.1003)
                        .pmdecUnc(1.22)
                        .pmra(1000.45)
                        .pmraUnc(5.6)
                        .pmUncFlag(false)
                        .posUncFlag(false)
                        .raUnc(509.466)
                        .rpmag(8.0047)
                        .rpmagUnc(1.233)
                        .shift(4.548)
                        .shiftFlag(false)
                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .updatedBy("some.user")
                        .varFlag(true)
                        .build()
                )
                .build()

        val body = params._body()

        assertThat(body)
            .containsExactly(
                StarCatalogUnvalidatedPublishParams.Body.builder()
                    .astrometryOrigin(
                        StarCatalogUnvalidatedPublishParams.Body.AstrometryOrigin.GAIADR3
                    )
                    .classificationMarking("U")
                    .csId(12345L)
                    .dataMode(StarCatalogUnvalidatedPublishParams.Body.DataMode.TEST)
                    .dec(21.8)
                    .ra(14.43)
                    .source("Bluestaq")
                    .starEpoch(2016.0)
                    .id("STAR-CAT-DATASET-ID")
                    .bpmag(0.04559)
                    .bpmagUnc(0.2227)
                    .catVersion("1.23")
                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .decUnc(40.996)
                    .gaiadr3CatId(89012345678901L)
                    .gmag(0.0046)
                    .gmagUnc(0.00292)
                    .gncCatId(12345)
                    .hipCatId(12345)
                    .hmag(12.126)
                    .hmagUnc(5.722)
                    .jmag(9.515)
                    .jmagUnc(7.559)
                    .kmag(13.545)
                    .kmagUnc(0.052)
                    .multFlag(true)
                    .neighborDistance(201.406)
                    .neighborFlag(false)
                    .neighborId(2456)
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("ORIG")
                    .parallax(-6.8)
                    .parallaxUnc(82.35)
                    .pmdec(-970.1003)
                    .pmdecUnc(1.22)
                    .pmra(1000.45)
                    .pmraUnc(5.6)
                    .pmUncFlag(false)
                    .posUncFlag(false)
                    .raUnc(509.466)
                    .rpmag(8.0047)
                    .rpmagUnc(1.233)
                    .shift(4.548)
                    .shiftFlag(false)
                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .updatedBy("some.user")
                    .varFlag(true)
                    .build()
            )
    }

    @Test
    fun bodyWithoutOptionalFields() {
        val params =
            StarCatalogUnvalidatedPublishParams.builder()
                .addBody(
                    StarCatalogUnvalidatedPublishParams.Body.builder()
                        .astrometryOrigin(
                            StarCatalogUnvalidatedPublishParams.Body.AstrometryOrigin.GAIADR3
                        )
                        .classificationMarking("U")
                        .csId(12345L)
                        .dataMode(StarCatalogUnvalidatedPublishParams.Body.DataMode.TEST)
                        .dec(21.8)
                        .ra(14.43)
                        .source("Bluestaq")
                        .starEpoch(2016.0)
                        .build()
                )
                .build()

        val body = params._body()

        assertThat(body)
            .containsExactly(
                StarCatalogUnvalidatedPublishParams.Body.builder()
                    .astrometryOrigin(
                        StarCatalogUnvalidatedPublishParams.Body.AstrometryOrigin.GAIADR3
                    )
                    .classificationMarking("U")
                    .csId(12345L)
                    .dataMode(StarCatalogUnvalidatedPublishParams.Body.DataMode.TEST)
                    .dec(21.8)
                    .ra(14.43)
                    .source("Bluestaq")
                    .starEpoch(2016.0)
                    .build()
            )
    }
}
