// File generated from our OpenAPI spec by Stainless.

package com.unifieddatalibrary.api.models.ephemerissets

import com.fasterxml.jackson.module.kotlin.jacksonTypeRef
import com.unifieddatalibrary.api.core.jsonMapper
import com.unifieddatalibrary.api.models.AntennaDetailsFull
import com.unifieddatalibrary.api.models.AntennaFull
import com.unifieddatalibrary.api.models.BatteryFull
import com.unifieddatalibrary.api.models.BatterydetailsFull
import com.unifieddatalibrary.api.models.Engine
import com.unifieddatalibrary.api.models.EngineDetailsFull
import com.unifieddatalibrary.api.models.EphemerisFull
import com.unifieddatalibrary.api.models.LocationFull
import com.unifieddatalibrary.api.models.OnorbitAntennaFull
import com.unifieddatalibrary.api.models.OnorbitBatteryFull
import com.unifieddatalibrary.api.models.OnorbitDetailsFull
import com.unifieddatalibrary.api.models.OnorbitFull
import com.unifieddatalibrary.api.models.OnorbitSolarArrayFull
import com.unifieddatalibrary.api.models.OnorbitThrusterFull
import com.unifieddatalibrary.api.models.OperatingUnitRemarkFull
import com.unifieddatalibrary.api.models.OperatingunitFull
import com.unifieddatalibrary.api.models.OrganizationDetailsFull
import com.unifieddatalibrary.api.models.OrganizationFull
import com.unifieddatalibrary.api.models.RfBandFull
import com.unifieddatalibrary.api.models.SolarArrayDetailsFull
import com.unifieddatalibrary.api.models.SolarArrayFull
import com.unifieddatalibrary.api.models.StateVectorFull
import com.unifieddatalibrary.api.models.StatusFull
import com.unifieddatalibrary.api.models.SubStatusFull
import java.time.LocalDate
import java.time.OffsetDateTime
import kotlin.jvm.optionals.getOrNull
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class EphemerisSetTest {

    @Test
    fun create() {
        val ephemerisSet =
            EphemerisSet.builder()
                .category("ANALYST")
                .classificationMarking("U")
                .dataMode(EphemerisSet.DataMode.TEST)
                .numPoints(1)
                .pointEndTime(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                .pointStartTime(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                .source("Bluestaq")
                .type("LAUNCH")
                .id("EPHEMERISSET-ID")
                .bDot(1.1)
                .centBody("Earth")
                .comments("Example notes")
                .covReferenceFrame(EphemerisSet.CovReferenceFrame.J2000)
                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                .createdBy("some.user")
                .description("Example notes")
                .descriptor("Example descriptor")
                .dragModel("JAC70")
                .edr(1.1)
                .addEphemerisList(
                    EphemerisFull.builder()
                        .classificationMarking("U")
                        .dataMode(EphemerisFull.DataMode.TEST)
                        .source("Bluestaq")
                        .ts(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                        .xpos(1.1)
                        .xvel(1.1)
                        .ypos(1.1)
                        .yvel(1.1)
                        .zpos(1.1)
                        .zvel(1.1)
                        .id("EPHEMERIS-ID")
                        .cov(listOf(1.1, 2.4, 3.8, 4.2, 5.5, 6.0))
                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .createdBy("some.user")
                        .esId("ES-ID")
                        .idOnOrbit("ONORBIT-ID")
                        .origin("THIRD_PARTY_DATASOURCE")
                        .origObjectId("ORIGOBJECT-ID")
                        .xaccel(1.1)
                        .yaccel(1.1)
                        .zaccel(1.1)
                        .build()
                )
                .filename("Example file name")
                .geopotentialModel("GEM-T3")
                .hasAccel(false)
                .hasCov(false)
                .hasMnvr(false)
                .addIdManeuver("EXAMPLE_ID1")
                .addIdManeuver("EXAMPLE_ID2")
                .idOnOrbit("ONORBIT-ID")
                .idStateVector("STATEVECTOR-ID")
                .integrator("COWELL")
                .interpolation("LINEAR")
                .interpolationDegree(5)
                .lunarSolar(false)
                .onOrbit(
                    OnorbitFull.builder()
                        .classificationMarking("U")
                        .dataMode(OnorbitFull.DataMode.TEST)
                        .satNo(1)
                        .source("Bluestaq")
                        .altName("Alternate Name")
                        .addAntenna(
                            OnorbitAntennaFull.builder()
                                .classificationMarking("U")
                                .dataMode(OnorbitAntennaFull.DataMode.TEST)
                                .idAntenna("ANTENNA-ID")
                                .idOnOrbit("ONORBIT-ID")
                                .source("Bluestaq")
                                .id("ONORBITANTENNA-ID")
                                .antenna(
                                    AntennaFull.builder()
                                        .dataMode(AntennaFull.DataMode.TEST)
                                        .name("IRIDIUM NEXT 121-ANTENNA-10075")
                                        .source("Bluestaq")
                                        .id("ANTENNA-ID")
                                        .addAntennaDetail(
                                            AntennaDetailsFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(AntennaDetailsFull.DataMode.TEST)
                                                .idAntenna("ANTENNA-ID")
                                                .source("Bluestaq")
                                                .id("ANTENNADETAILS-ID")
                                                .beamForming(false)
                                                .beamwidth(14.1)
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .description("Description of antenna A")
                                                .diameter(0.01)
                                                .endFrequency(3.3)
                                                .gain(20.1)
                                                .gainTolerance(5.1)
                                                .manufacturerOrg(
                                                    OrganizationFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(OrganizationFull.DataMode.TEST)
                                                        .name("some.user")
                                                        .source("some.user")
                                                        .type("GOVERNMENT")
                                                        .id("ORGANIZATION-ID")
                                                        .active(false)
                                                        .category("Private company")
                                                        .countryCode("US")
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .description("Example description")
                                                        .externalId("EXTERNAL-ID")
                                                        .nationality("US")
                                                        .addOrganizationDetail(
                                                            OrganizationDetailsFull.builder()
                                                                .classificationMarking("U")
                                                                .dataMode(
                                                                    OrganizationDetailsFull.DataMode
                                                                        .TEST
                                                                )
                                                                .idOrganization("ORGANIZATION-ID")
                                                                .name("some.user")
                                                                .source("some.user")
                                                                .id("ORGANIZATIONDETAILS-ID")
                                                                .address1("123 Main Street")
                                                                .address2("Apt 4B")
                                                                .address3(
                                                                    "Colorado Springs CO, 80903"
                                                                )
                                                                .broker("some.user")
                                                                .ceo("some.user")
                                                                .cfo("some.user")
                                                                .createdAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .createdBy("some.user")
                                                                .cto("some.user")
                                                                .description("Example description")
                                                                .ebitda(123.4)
                                                                .email(
                                                                    "some_organization@organization.com"
                                                                )
                                                                .financialNotes("Example notes")
                                                                .financialYearEndDate(
                                                                    OffsetDateTime.parse(
                                                                        "2021-01-01T01:01:01.123Z"
                                                                    )
                                                                )
                                                                .fleetPlanNotes("Example notes")
                                                                .formerOrgId("FORMERORG-ID")
                                                                .ftes(123)
                                                                .geoAdminLevel1("Colorado")
                                                                .geoAdminLevel2("El Paso County")
                                                                .geoAdminLevel3("Colorado Springs")
                                                                .massRanking(123)
                                                                .origin("some.user")
                                                                .origNetwork("OPS1")
                                                                .parentOrgId("PARENTORG-ID")
                                                                .postalCode("80903")
                                                                .profit(123.4)
                                                                .revenue(123.4)
                                                                .revenueRanking(123)
                                                                .riskManager("some.user")
                                                                .servicesNotes("Example notes")
                                                                .addTag("PROVIDER_TAG1")
                                                                .addTag("PROVIDER_TAG2")
                                                                .updatedAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .updatedBy("some.user")
                                                                .build()
                                                        )
                                                        .origin("some.user")
                                                        .origNetwork("OPS1")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .manufacturerOrgId("MANUFACTUREORG-ID")
                                                .mode(AntennaDetailsFull.Mode.TX)
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .polarization(45.1)
                                                .position("Top")
                                                .addSize(0.03)
                                                .addSize(0.05)
                                                .startFrequency(2.1)
                                                .steerable(false)
                                                .addTag("PROVIDER_TAG1")
                                                .addTag("PROVIDER_TAG2")
                                                .type("Reflector")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .build()
                        )
                        .addBattery(
                            OnorbitBatteryFull.builder()
                                .classificationMarking("U")
                                .dataMode(OnorbitBatteryFull.DataMode.TEST)
                                .idBattery("BATTERY-ID")
                                .idOnOrbit("ONORBIT-ID")
                                .source("Bluestaq")
                                .id("ONORBITBATTERY-ID")
                                .battery(
                                    BatteryFull.builder()
                                        .dataMode(BatteryFull.DataMode.TEST)
                                        .name("JAK-BATTERY-1479")
                                        .source("Bluestaq")
                                        .id("BATTERY-ID")
                                        .addBatteryDetail(
                                            BatterydetailsFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(BatterydetailsFull.DataMode.TEST)
                                                .idBattery("BATTERY-ID")
                                                .source("Bluestaq")
                                                .id("BATTERYDETAILS-ID")
                                                .capacity(10.1)
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .description("example notes")
                                                .dischargeDepth(0.2)
                                                .manufacturerOrg(
                                                    OrganizationFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(OrganizationFull.DataMode.TEST)
                                                        .name("some.user")
                                                        .source("some.user")
                                                        .type("GOVERNMENT")
                                                        .id("ORGANIZATION-ID")
                                                        .active(false)
                                                        .category("Private company")
                                                        .countryCode("US")
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .description("Example description")
                                                        .externalId("EXTERNAL-ID")
                                                        .nationality("US")
                                                        .addOrganizationDetail(
                                                            OrganizationDetailsFull.builder()
                                                                .classificationMarking("U")
                                                                .dataMode(
                                                                    OrganizationDetailsFull.DataMode
                                                                        .TEST
                                                                )
                                                                .idOrganization("ORGANIZATION-ID")
                                                                .name("some.user")
                                                                .source("some.user")
                                                                .id("ORGANIZATIONDETAILS-ID")
                                                                .address1("123 Main Street")
                                                                .address2("Apt 4B")
                                                                .address3(
                                                                    "Colorado Springs CO, 80903"
                                                                )
                                                                .broker("some.user")
                                                                .ceo("some.user")
                                                                .cfo("some.user")
                                                                .createdAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .createdBy("some.user")
                                                                .cto("some.user")
                                                                .description("Example description")
                                                                .ebitda(123.4)
                                                                .email(
                                                                    "some_organization@organization.com"
                                                                )
                                                                .financialNotes("Example notes")
                                                                .financialYearEndDate(
                                                                    OffsetDateTime.parse(
                                                                        "2021-01-01T01:01:01.123Z"
                                                                    )
                                                                )
                                                                .fleetPlanNotes("Example notes")
                                                                .formerOrgId("FORMERORG-ID")
                                                                .ftes(123)
                                                                .geoAdminLevel1("Colorado")
                                                                .geoAdminLevel2("El Paso County")
                                                                .geoAdminLevel3("Colorado Springs")
                                                                .massRanking(123)
                                                                .origin("some.user")
                                                                .origNetwork("OPS1")
                                                                .parentOrgId("PARENTORG-ID")
                                                                .postalCode("80903")
                                                                .profit(123.4)
                                                                .revenue(123.4)
                                                                .revenueRanking(123)
                                                                .riskManager("some.user")
                                                                .servicesNotes("Example notes")
                                                                .addTag("PROVIDER_TAG1")
                                                                .addTag("PROVIDER_TAG2")
                                                                .updatedAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .updatedBy("some.user")
                                                                .build()
                                                        )
                                                        .origin("some.user")
                                                        .origNetwork("OPS1")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .manufacturerOrgId("MANUFACTURERORG-ID")
                                                .model("11212")
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .addTag("PROVIDER_TAG1")
                                                .addTag("PROVIDER_TAG2")
                                                .technology("Ni-Cd")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .quantity(5)
                                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .build()
                        )
                        .category(OnorbitFull.Category.LUNAR)
                        .commonName("Example common name")
                        .constellation("Big Dipper")
                        .countryCode("US")
                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .createdBy("some.user")
                        .decayDate(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .addEntityCollection(
                            OnorbitFull.EntityCollection.builder()
                                .classificationMarking("U")
                                .dataMode(OnorbitFull.EntityCollection.DataMode.TEST)
                                .name("Example name")
                                .source("Bluestaq")
                                .type(OnorbitFull.EntityCollection.Type.ONORBIT)
                                .countryCode("US")
                                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .idEntity("ENTITY-ID")
                                .idLocation("LOCATION-ID")
                                .idOnOrbit("ONORBIT-ID")
                                .idOperatingUnit("OPERATINGUNIT-ID")
                                .location(
                                    LocationFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(LocationFull.DataMode.TEST)
                                        .name("Example location")
                                        .source("Bluestaq")
                                        .altitude(10.23)
                                        .countryCode("US")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .idLocation("LOCATION-ID")
                                        .lat(45.23)
                                        .lon(179.1)
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .operatingUnit(
                                    OperatingunitFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OperatingunitFull.DataMode.TEST)
                                        .name("SOME_NAME")
                                        .source("some.user")
                                        .airDefArea("AL006")
                                        .allegiance("OTHR")
                                        .altAllegiance("HL")
                                        .altCountryCode("IZ")
                                        .altOperatingUnitId("32100000000021")
                                        .classRating("1")
                                        .condition("RDY")
                                        .conditionAvail("A")
                                        .coord("340000000N0430000000E")
                                        .coordDatum("WGS")
                                        .coordDerivAcc(12.345)
                                        .countryCode("IQ")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .deployStatus("ND")
                                        .description("Description of unit")
                                        .divCat("5")
                                        .echelon("SHIP")
                                        .echelonTier("68")
                                        .elevMsl(123.45)
                                        .elevMslConfLvl(50)
                                        .elevMslDerivAcc(12.34)
                                        .eval(7)
                                        .flagFlown("IZ")
                                        .fleetId("A")
                                        .force("NV")
                                        .forceName("FORCE-NAME")
                                        .fpa("EOB")
                                        .functRole("MIL")
                                        .geoidalMslSep(12.34)
                                        .idContact("CONTACT-ID")
                                        .ident("FRIEND")
                                        .idLocation("LOCATION-ID")
                                        .idOperatingUnit("OPERATINGUNIT-ID")
                                        .idOrganization("ORGANIZATION-ID")
                                        .lat(45.23)
                                        .location(
                                            LocationFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(LocationFull.DataMode.TEST)
                                                .name("Example location")
                                                .source("Bluestaq")
                                                .altitude(10.23)
                                                .countryCode("US")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .idLocation("LOCATION-ID")
                                                .lat(45.23)
                                                .lon(179.1)
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .locName("LOCATION_NAME")
                                        .locReason("GR")
                                        .lon(179.1)
                                        .masterUnit(true)
                                        .milGrid("4QFJ12345678")
                                        .milGridSys("UTM")
                                        .msnPrimary("W6")
                                        .msnPrimarySpecialty("QK")
                                        .addOperatingUnitRemark(
                                            OperatingUnitRemarkFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(OperatingUnitRemarkFull.DataMode.TEST)
                                                .idOperatingUnit("OperatingUnit-ID")
                                                .source("some.user")
                                                .text("This is a remark")
                                                .id("0167f577-e06c-358e-85aa-0a07a730bdd0")
                                                .altRmkId("123456ABC")
                                                .code("M")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .name("Remark name")
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .type("Restriction")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .operStatus("OPR")
                                        .organization(
                                            OrganizationFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(OrganizationFull.DataMode.TEST)
                                                .name("some.user")
                                                .source("some.user")
                                                .type("GOVERNMENT")
                                                .id("ORGANIZATION-ID")
                                                .active(false)
                                                .category("Private company")
                                                .countryCode("US")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .description("Example description")
                                                .externalId("EXTERNAL-ID")
                                                .nationality("US")
                                                .addOrganizationDetail(
                                                    OrganizationDetailsFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(
                                                            OrganizationDetailsFull.DataMode.TEST
                                                        )
                                                        .idOrganization("ORGANIZATION-ID")
                                                        .name("some.user")
                                                        .source("some.user")
                                                        .id("ORGANIZATIONDETAILS-ID")
                                                        .address1("123 Main Street")
                                                        .address2("Apt 4B")
                                                        .address3("Colorado Springs CO, 80903")
                                                        .broker("some.user")
                                                        .ceo("some.user")
                                                        .cfo("some.user")
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .cto("some.user")
                                                        .description("Example description")
                                                        .ebitda(123.4)
                                                        .email("some_organization@organization.com")
                                                        .financialNotes("Example notes")
                                                        .financialYearEndDate(
                                                            OffsetDateTime.parse(
                                                                "2021-01-01T01:01:01.123Z"
                                                            )
                                                        )
                                                        .fleetPlanNotes("Example notes")
                                                        .formerOrgId("FORMERORG-ID")
                                                        .ftes(123)
                                                        .geoAdminLevel1("Colorado")
                                                        .geoAdminLevel2("El Paso County")
                                                        .geoAdminLevel3("Colorado Springs")
                                                        .massRanking(123)
                                                        .origin("some.user")
                                                        .origNetwork("OPS1")
                                                        .parentOrgId("PARENTORG-ID")
                                                        .postalCode("80903")
                                                        .profit(123.4)
                                                        .revenue(123.4)
                                                        .revenueRanking(123)
                                                        .riskManager("some.user")
                                                        .servicesNotes("Example notes")
                                                        .addTag("PROVIDER_TAG1")
                                                        .addTag("PROVIDER_TAG2")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .origin("some.user")
                                                .origNetwork("OPS1")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .polSubdiv("IZ07")
                                        .recStatus("A")
                                        .referenceDoc("Provider Reference Documentation")
                                        .resProd("RT")
                                        .reviewDate(LocalDate.parse("2008-06-10"))
                                        .stylizedUnit(true)
                                        .symCode("SOGPU----------")
                                        .unitIdentifier("AZXAZ12345")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .utm("19P4390691376966")
                                        .wac("0427")
                                        .build()
                                )
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .ownerType(OnorbitFull.EntityCollection.OwnerType.COMMERCIAL)
                                .addRfBand(
                                    RfBandFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(RfBandFull.DataMode.TEST)
                                        .idEntity("ENTITY-ID")
                                        .name("BAND_NAME")
                                        .source("Bluestaq")
                                        .id("ad88770b-d824-443f-bdce-5f9e3fa500a9")
                                        .band("Ku")
                                        .bandwidth(100.23)
                                        .addBandwidthSetting(250.1)
                                        .addBandwidthSetting(500.1)
                                        .beamwidth(45.23)
                                        .addBeamwidthSetting(5.1)
                                        .addBeamwidthSetting(10.1)
                                        .centerFreq(1000.23)
                                        .createdAt(OffsetDateTime.parse("2025-03-05T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .addDelaySetting(2.77)
                                        .addDelaySetting(5.64)
                                        .edgeGain(100.23)
                                        .eirp(2.23)
                                        .erp(2.23)
                                        .freqMax(2000.23)
                                        .freqMin(50.23)
                                        .addFrequencySetting(12250.1)
                                        .addFrequencySetting(15000.1)
                                        .addGainSetting(2.77)
                                        .addGainSetting(5.64)
                                        .mode(RfBandFull.Mode.TX)
                                        .addNoiseSetting(0.00033)
                                        .addNoiseSetting(0.0033)
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .peakGain(120.23)
                                        .polarization(RfBandFull.Polarization.H)
                                        .purpose(RfBandFull.Purpose.TTC)
                                        .updatedAt(OffsetDateTime.parse("2025-03-05T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .addStatusCollection(
                                    StatusFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(StatusFull.DataMode.TEST)
                                        .idEntity("ENTITY-ID")
                                        .source("Bluestaq")
                                        .id("STATUS-ID")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .declassificationDate(
                                            OffsetDateTime.parse("2021-01-01T01:02:02.123Z")
                                        )
                                        .declassificationString("U")
                                        .derivedFrom("SOME_SOURCE")
                                        .notes("Example Notes")
                                        .opsCap(StatusFull.OpsCap.FMC)
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .state(StatusFull.State.ACTIVE)
                                        .addSubStatusCollection(
                                            SubStatusFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(SubStatusFull.DataMode.TEST)
                                                .notes("Sample Notes")
                                                .source("Bluestaq")
                                                .status(SubStatusFull.Status.FMC)
                                                .statusId("REF-STATUS-ID")
                                                .type(SubStatusFull.Type.MD_CAP)
                                                .id("SUBSTATUS-ID")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .sysCap(StatusFull.SysCap.FMC)
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .taskable(false)
                                .terrestrialId("TERRESTRIAL-ID")
                                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .addUrl("URL1")
                                .addUrl("URL2")
                                .build()
                        )
                        .idOnOrbit("ONORBIT-ID")
                        .intlDes("2021123ABC")
                        .launchDate(LocalDate.parse("2018-01-01"))
                        .launchSiteId("LAUNCHSITE-ID")
                        .lifetimeYears(10)
                        .missionNumber("Expedition 1")
                        .objectType(OnorbitFull.ObjectType.PAYLOAD)
                        .addOnorbitDetail(
                            OnorbitDetailsFull.builder()
                                .classificationMarking("U")
                                .dataMode(OnorbitDetailsFull.DataMode.TEST)
                                .idOnOrbit("REF-ONORBIT-ID")
                                .source("Bluestaq")
                                .id("ONORBITDETAILS-ID")
                                .additionalMass(10.23)
                                .adeptRadius(10.23)
                                .bolDeltaV(1000.1)
                                .bolFuelMass(10.23)
                                .busCrossSection(10.23)
                                .busType("A2100")
                                .colaRadius(10.23)
                                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .crossSection(10.23)
                                .currentMass(500.0)
                                .deltaVUnc(50.1)
                                .addDepEstMass(20.0)
                                .addDepEstMass(21.0)
                                .addDepMassUnc(10.0)
                                .addDepMassUnc(5.0)
                                .addDepName("GOES-18A")
                                .addDepName("GOES-18B")
                                .driftRate(1.23)
                                .dryMass(10.23)
                                .estDeltaVDuration(10.23)
                                .fuelRemaining(10.23)
                                .geoSlot(90.23)
                                .lastObSource("THIRD_PARTY_DATASOURCE")
                                .lastObTime(OffsetDateTime.parse("2021-01-01T01:01:01.123456Z"))
                                .launchMass(10.23)
                                .launchMassMax(15.23)
                                .launchMassMin(5.23)
                                .maneuverable(false)
                                .maxDeltaV(10.23)
                                .maxRadius(10.23)
                                .addMissionType("Weather")
                                .addMissionType("Space Weather")
                                .numDeployable(2)
                                .numMission(2)
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .rcs(10.23)
                                .rcsMax(15.23)
                                .rcsMean(10.23)
                                .rcsMin(5.23)
                                .refSource("Wikipedia")
                                .solarArrayArea(10.23)
                                .totalMassUnc(50.1)
                                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .vismag(10.23)
                                .vismagMax(15.23)
                                .vismagMean(10.23)
                                .vismagMin(5.23)
                                .build()
                        )
                        .origin("THIRD_PARTY_DATASOURCE")
                        .origNetwork("OPS1")
                        .addSolarArray(
                            OnorbitSolarArrayFull.builder()
                                .classificationMarking("U")
                                .dataMode(OnorbitSolarArrayFull.DataMode.TEST)
                                .idOnOrbit("ONORBIT-ID")
                                .idSolarArray("SOLARARRAY-ID")
                                .source("Bluestaq")
                                .id("ONORBITSOLARARRAY-ID")
                                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .quantity(10)
                                .solarArray(
                                    SolarArrayFull.builder()
                                        .dataMode(SolarArrayFull.DataMode.TEST)
                                        .name("Solar1")
                                        .source("Bluestaq")
                                        .id("SOLARARRAY-ID")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .addSolarArrayDetail(
                                            SolarArrayDetailsFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(SolarArrayDetailsFull.DataMode.TEST)
                                                .idSolarArray("SOLARARRAY-ID")
                                                .source("Bluestaq")
                                                .id("SOLARARRAYDETAILS-ID")
                                                .area(123.4)
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .description("Example notes")
                                                .junctionTechnology("Triple")
                                                .manufacturerOrg(
                                                    OrganizationFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(OrganizationFull.DataMode.TEST)
                                                        .name("some.user")
                                                        .source("some.user")
                                                        .type("GOVERNMENT")
                                                        .id("ORGANIZATION-ID")
                                                        .active(false)
                                                        .category("Private company")
                                                        .countryCode("US")
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .description("Example description")
                                                        .externalId("EXTERNAL-ID")
                                                        .nationality("US")
                                                        .addOrganizationDetail(
                                                            OrganizationDetailsFull.builder()
                                                                .classificationMarking("U")
                                                                .dataMode(
                                                                    OrganizationDetailsFull.DataMode
                                                                        .TEST
                                                                )
                                                                .idOrganization("ORGANIZATION-ID")
                                                                .name("some.user")
                                                                .source("some.user")
                                                                .id("ORGANIZATIONDETAILS-ID")
                                                                .address1("123 Main Street")
                                                                .address2("Apt 4B")
                                                                .address3(
                                                                    "Colorado Springs CO, 80903"
                                                                )
                                                                .broker("some.user")
                                                                .ceo("some.user")
                                                                .cfo("some.user")
                                                                .createdAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .createdBy("some.user")
                                                                .cto("some.user")
                                                                .description("Example description")
                                                                .ebitda(123.4)
                                                                .email(
                                                                    "some_organization@organization.com"
                                                                )
                                                                .financialNotes("Example notes")
                                                                .financialYearEndDate(
                                                                    OffsetDateTime.parse(
                                                                        "2021-01-01T01:01:01.123Z"
                                                                    )
                                                                )
                                                                .fleetPlanNotes("Example notes")
                                                                .formerOrgId("FORMERORG-ID")
                                                                .ftes(123)
                                                                .geoAdminLevel1("Colorado")
                                                                .geoAdminLevel2("El Paso County")
                                                                .geoAdminLevel3("Colorado Springs")
                                                                .massRanking(123)
                                                                .origin("some.user")
                                                                .origNetwork("OPS1")
                                                                .parentOrgId("PARENTORG-ID")
                                                                .postalCode("80903")
                                                                .profit(123.4)
                                                                .revenue(123.4)
                                                                .revenueRanking(123)
                                                                .riskManager("some.user")
                                                                .servicesNotes("Example notes")
                                                                .addTag("PROVIDER_TAG1")
                                                                .addTag("PROVIDER_TAG2")
                                                                .updatedAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .updatedBy("some.user")
                                                                .build()
                                                        )
                                                        .origin("some.user")
                                                        .origNetwork("OPS1")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .manufacturerOrgId("MANUFACTURERORG-ID")
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .span(123.4)
                                                .addTag("TAG1")
                                                .addTag("TAG2")
                                                .technology("Ga-As")
                                                .type("U Shaped")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .build()
                        )
                        .addThruster(
                            OnorbitThrusterFull.builder()
                                .classificationMarking("U")
                                .dataMode(OnorbitThrusterFull.DataMode.TEST)
                                .idEngine("ENGINE-ID")
                                .idOnOrbit("ONORBIT-ID")
                                .source("Bluestaq")
                                .id("ONORBITTHRUSTER-ID")
                                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .engine(
                                    Engine.builder()
                                        .classificationMarking("U")
                                        .dataMode(Engine.DataMode.TEST)
                                        .name("ENGINE_VARIANT1")
                                        .source("Bluestaq")
                                        .id("ENGINE-ID")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .addEngineDetail(
                                            EngineDetailsFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(EngineDetailsFull.DataMode.TEST)
                                                .idEngine("ENGINE-ID")
                                                .source("Bluestaq")
                                                .id("ENGINEDETAILS-ID")
                                                .burnTime(1.1)
                                                .chamberPressure(1.1)
                                                .characteristicType("Electric")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .cycleType("Pressure Fed")
                                                .family("ENGINE_TYPE1")
                                                .manufacturerOrgId("MANUFACTURERORG-ID")
                                                .maxFirings(5)
                                                .notes("Example notes")
                                                .nozzleExpansionRatio(1.1)
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .oxidizer("Liquid Oxygen")
                                                .propellant("Liquid")
                                                .seaLevelThrust(1.1)
                                                .specificImpulse(1.1)
                                                .addTag("PROVIDER_TAG1")
                                                .addTag("PROVIDER_TAG2")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .vacuumThrust(1.1)
                                                .build()
                                        )
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .quantity(10)
                                .type("Hydrazine REA")
                                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .build()
                        )
                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .updatedBy("some.user")
                        .build()
                )
                .origin("THIRD_PARTY_DATASOURCE")
                .origNetwork("OPS1")
                .origObjectId("ORIGOBJECT-ID")
                .pedigree("PROPAGATED")
                .referenceFrame(EphemerisSet.ReferenceFrame.J2000)
                .satNo(2)
                .solidEarthTides(false)
                .stateVector(
                    StateVectorFull.builder()
                        .classificationMarking("U")
                        .dataMode(StateVectorFull.DataMode.TEST)
                        .epoch(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                        .source("Bluestaq")
                        .actualOdSpan(3.5)
                        .algorithm("SAMPLE_ALGORITHM")
                        .alt1ReferenceFrame("TEME")
                        .alt2ReferenceFrame("EFG/TDR")
                        .area(5.065)
                        .bDot(1.23)
                        .cmOffset(1.23)
                        .cov(listOf(1.1, 2.4, 3.8, 4.2, 5.5, 6.0))
                        .covMethod("CALCULATED")
                        .covReferenceFrame(StateVectorFull.CovReferenceFrame.J2000)
                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .createdBy("some.user")
                        .descriptor("descriptor")
                        .dragArea(4.739)
                        .dragCoeff(0.0224391269775)
                        .dragModel("JAC70")
                        .edr(1.23)
                        .effectiveFrom(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .effectiveUntil(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .addEqCov(1.1)
                        .addEqCov(2.2)
                        .errorControl(1.23)
                        .fixedStep(true)
                        .geopotentialModel("EGM-96")
                        .iau1980Terms(4)
                        .idOnOrbit("ONORBIT-ID")
                        .idOrbitDetermination("026dd511-8ba5-47d3-9909-836149f87686")
                        .idStateVector("STATEVECTOR-ID")
                        .integratorMode("integratorMode")
                        .inTrackThrust(true)
                        .lastObEnd(OffsetDateTime.parse("2022-11-09T11:20:21.247192Z"))
                        .lastObStart(OffsetDateTime.parse("2022-11-09T11:20:21.247192Z"))
                        .leapSecondTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
                        .lunarSolar(true)
                        .mass(164.5)
                        .msgTs(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                        .obsAvailable(376)
                        .obsUsed(374)
                        .onOrbit(
                            OnorbitFull.builder()
                                .classificationMarking("U")
                                .dataMode(OnorbitFull.DataMode.TEST)
                                .satNo(1)
                                .source("Bluestaq")
                                .altName("Alternate Name")
                                .addAntenna(
                                    OnorbitAntennaFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OnorbitAntennaFull.DataMode.TEST)
                                        .idAntenna("ANTENNA-ID")
                                        .idOnOrbit("ONORBIT-ID")
                                        .source("Bluestaq")
                                        .id("ONORBITANTENNA-ID")
                                        .antenna(
                                            AntennaFull.builder()
                                                .dataMode(AntennaFull.DataMode.TEST)
                                                .name("IRIDIUM NEXT 121-ANTENNA-10075")
                                                .source("Bluestaq")
                                                .id("ANTENNA-ID")
                                                .addAntennaDetail(
                                                    AntennaDetailsFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(AntennaDetailsFull.DataMode.TEST)
                                                        .idAntenna("ANTENNA-ID")
                                                        .source("Bluestaq")
                                                        .id("ANTENNADETAILS-ID")
                                                        .beamForming(false)
                                                        .beamwidth(14.1)
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .description("Description of antenna A")
                                                        .diameter(0.01)
                                                        .endFrequency(3.3)
                                                        .gain(20.1)
                                                        .gainTolerance(5.1)
                                                        .manufacturerOrg(
                                                            OrganizationFull.builder()
                                                                .classificationMarking("U")
                                                                .dataMode(
                                                                    OrganizationFull.DataMode.TEST
                                                                )
                                                                .name("some.user")
                                                                .source("some.user")
                                                                .type("GOVERNMENT")
                                                                .id("ORGANIZATION-ID")
                                                                .active(false)
                                                                .category("Private company")
                                                                .countryCode("US")
                                                                .createdAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .createdBy("some.user")
                                                                .description("Example description")
                                                                .externalId("EXTERNAL-ID")
                                                                .nationality("US")
                                                                .addOrganizationDetail(
                                                                    OrganizationDetailsFull
                                                                        .builder()
                                                                        .classificationMarking("U")
                                                                        .dataMode(
                                                                            OrganizationDetailsFull
                                                                                .DataMode
                                                                                .TEST
                                                                        )
                                                                        .idOrganization(
                                                                            "ORGANIZATION-ID"
                                                                        )
                                                                        .name("some.user")
                                                                        .source("some.user")
                                                                        .id(
                                                                            "ORGANIZATIONDETAILS-ID"
                                                                        )
                                                                        .address1("123 Main Street")
                                                                        .address2("Apt 4B")
                                                                        .address3(
                                                                            "Colorado Springs CO, 80903"
                                                                        )
                                                                        .broker("some.user")
                                                                        .ceo("some.user")
                                                                        .cfo("some.user")
                                                                        .createdAt(
                                                                            OffsetDateTime.parse(
                                                                                "2018-01-01T16:00:00.123Z"
                                                                            )
                                                                        )
                                                                        .createdBy("some.user")
                                                                        .cto("some.user")
                                                                        .description(
                                                                            "Example description"
                                                                        )
                                                                        .ebitda(123.4)
                                                                        .email(
                                                                            "some_organization@organization.com"
                                                                        )
                                                                        .financialNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .financialYearEndDate(
                                                                            OffsetDateTime.parse(
                                                                                "2021-01-01T01:01:01.123Z"
                                                                            )
                                                                        )
                                                                        .fleetPlanNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .formerOrgId("FORMERORG-ID")
                                                                        .ftes(123)
                                                                        .geoAdminLevel1("Colorado")
                                                                        .geoAdminLevel2(
                                                                            "El Paso County"
                                                                        )
                                                                        .geoAdminLevel3(
                                                                            "Colorado Springs"
                                                                        )
                                                                        .massRanking(123)
                                                                        .origin("some.user")
                                                                        .origNetwork("OPS1")
                                                                        .parentOrgId("PARENTORG-ID")
                                                                        .postalCode("80903")
                                                                        .profit(123.4)
                                                                        .revenue(123.4)
                                                                        .revenueRanking(123)
                                                                        .riskManager("some.user")
                                                                        .servicesNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .addTag("PROVIDER_TAG1")
                                                                        .addTag("PROVIDER_TAG2")
                                                                        .updatedAt(
                                                                            OffsetDateTime.parse(
                                                                                "2018-01-01T16:00:00.123Z"
                                                                            )
                                                                        )
                                                                        .updatedBy("some.user")
                                                                        .build()
                                                                )
                                                                .origin("some.user")
                                                                .origNetwork("OPS1")
                                                                .updatedAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .updatedBy("some.user")
                                                                .build()
                                                        )
                                                        .manufacturerOrgId("MANUFACTUREORG-ID")
                                                        .mode(AntennaDetailsFull.Mode.TX)
                                                        .origin("THIRD_PARTY_DATASOURCE")
                                                        .origNetwork("OPS1")
                                                        .polarization(45.1)
                                                        .position("Top")
                                                        .addSize(0.03)
                                                        .addSize(0.05)
                                                        .startFrequency(2.1)
                                                        .steerable(false)
                                                        .addTag("PROVIDER_TAG1")
                                                        .addTag("PROVIDER_TAG2")
                                                        .type("Reflector")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .addBattery(
                                    OnorbitBatteryFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OnorbitBatteryFull.DataMode.TEST)
                                        .idBattery("BATTERY-ID")
                                        .idOnOrbit("ONORBIT-ID")
                                        .source("Bluestaq")
                                        .id("ONORBITBATTERY-ID")
                                        .battery(
                                            BatteryFull.builder()
                                                .dataMode(BatteryFull.DataMode.TEST)
                                                .name("JAK-BATTERY-1479")
                                                .source("Bluestaq")
                                                .id("BATTERY-ID")
                                                .addBatteryDetail(
                                                    BatterydetailsFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(BatterydetailsFull.DataMode.TEST)
                                                        .idBattery("BATTERY-ID")
                                                        .source("Bluestaq")
                                                        .id("BATTERYDETAILS-ID")
                                                        .capacity(10.1)
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .description("example notes")
                                                        .dischargeDepth(0.2)
                                                        .manufacturerOrg(
                                                            OrganizationFull.builder()
                                                                .classificationMarking("U")
                                                                .dataMode(
                                                                    OrganizationFull.DataMode.TEST
                                                                )
                                                                .name("some.user")
                                                                .source("some.user")
                                                                .type("GOVERNMENT")
                                                                .id("ORGANIZATION-ID")
                                                                .active(false)
                                                                .category("Private company")
                                                                .countryCode("US")
                                                                .createdAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .createdBy("some.user")
                                                                .description("Example description")
                                                                .externalId("EXTERNAL-ID")
                                                                .nationality("US")
                                                                .addOrganizationDetail(
                                                                    OrganizationDetailsFull
                                                                        .builder()
                                                                        .classificationMarking("U")
                                                                        .dataMode(
                                                                            OrganizationDetailsFull
                                                                                .DataMode
                                                                                .TEST
                                                                        )
                                                                        .idOrganization(
                                                                            "ORGANIZATION-ID"
                                                                        )
                                                                        .name("some.user")
                                                                        .source("some.user")
                                                                        .id(
                                                                            "ORGANIZATIONDETAILS-ID"
                                                                        )
                                                                        .address1("123 Main Street")
                                                                        .address2("Apt 4B")
                                                                        .address3(
                                                                            "Colorado Springs CO, 80903"
                                                                        )
                                                                        .broker("some.user")
                                                                        .ceo("some.user")
                                                                        .cfo("some.user")
                                                                        .createdAt(
                                                                            OffsetDateTime.parse(
                                                                                "2018-01-01T16:00:00.123Z"
                                                                            )
                                                                        )
                                                                        .createdBy("some.user")
                                                                        .cto("some.user")
                                                                        .description(
                                                                            "Example description"
                                                                        )
                                                                        .ebitda(123.4)
                                                                        .email(
                                                                            "some_organization@organization.com"
                                                                        )
                                                                        .financialNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .financialYearEndDate(
                                                                            OffsetDateTime.parse(
                                                                                "2021-01-01T01:01:01.123Z"
                                                                            )
                                                                        )
                                                                        .fleetPlanNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .formerOrgId("FORMERORG-ID")
                                                                        .ftes(123)
                                                                        .geoAdminLevel1("Colorado")
                                                                        .geoAdminLevel2(
                                                                            "El Paso County"
                                                                        )
                                                                        .geoAdminLevel3(
                                                                            "Colorado Springs"
                                                                        )
                                                                        .massRanking(123)
                                                                        .origin("some.user")
                                                                        .origNetwork("OPS1")
                                                                        .parentOrgId("PARENTORG-ID")
                                                                        .postalCode("80903")
                                                                        .profit(123.4)
                                                                        .revenue(123.4)
                                                                        .revenueRanking(123)
                                                                        .riskManager("some.user")
                                                                        .servicesNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .addTag("PROVIDER_TAG1")
                                                                        .addTag("PROVIDER_TAG2")
                                                                        .updatedAt(
                                                                            OffsetDateTime.parse(
                                                                                "2018-01-01T16:00:00.123Z"
                                                                            )
                                                                        )
                                                                        .updatedBy("some.user")
                                                                        .build()
                                                                )
                                                                .origin("some.user")
                                                                .origNetwork("OPS1")
                                                                .updatedAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .updatedBy("some.user")
                                                                .build()
                                                        )
                                                        .manufacturerOrgId("MANUFACTURERORG-ID")
                                                        .model("11212")
                                                        .origin("THIRD_PARTY_DATASOURCE")
                                                        .origNetwork("OPS1")
                                                        .addTag("PROVIDER_TAG1")
                                                        .addTag("PROVIDER_TAG2")
                                                        .technology("Ni-Cd")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .quantity(5)
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .category(OnorbitFull.Category.LUNAR)
                                .commonName("Example common name")
                                .constellation("Big Dipper")
                                .countryCode("US")
                                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .decayDate(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .addEntityCollection(
                                    OnorbitFull.EntityCollection.builder()
                                        .classificationMarking("U")
                                        .dataMode(OnorbitFull.EntityCollection.DataMode.TEST)
                                        .name("Example name")
                                        .source("Bluestaq")
                                        .type(OnorbitFull.EntityCollection.Type.ONORBIT)
                                        .countryCode("US")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .idEntity("ENTITY-ID")
                                        .idLocation("LOCATION-ID")
                                        .idOnOrbit("ONORBIT-ID")
                                        .idOperatingUnit("OPERATINGUNIT-ID")
                                        .location(
                                            LocationFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(LocationFull.DataMode.TEST)
                                                .name("Example location")
                                                .source("Bluestaq")
                                                .altitude(10.23)
                                                .countryCode("US")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .idLocation("LOCATION-ID")
                                                .lat(45.23)
                                                .lon(179.1)
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .operatingUnit(
                                            OperatingunitFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(OperatingunitFull.DataMode.TEST)
                                                .name("SOME_NAME")
                                                .source("some.user")
                                                .airDefArea("AL006")
                                                .allegiance("OTHR")
                                                .altAllegiance("HL")
                                                .altCountryCode("IZ")
                                                .altOperatingUnitId("32100000000021")
                                                .classRating("1")
                                                .condition("RDY")
                                                .conditionAvail("A")
                                                .coord("340000000N0430000000E")
                                                .coordDatum("WGS")
                                                .coordDerivAcc(12.345)
                                                .countryCode("IQ")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .deployStatus("ND")
                                                .description("Description of unit")
                                                .divCat("5")
                                                .echelon("SHIP")
                                                .echelonTier("68")
                                                .elevMsl(123.45)
                                                .elevMslConfLvl(50)
                                                .elevMslDerivAcc(12.34)
                                                .eval(7)
                                                .flagFlown("IZ")
                                                .fleetId("A")
                                                .force("NV")
                                                .forceName("FORCE-NAME")
                                                .fpa("EOB")
                                                .functRole("MIL")
                                                .geoidalMslSep(12.34)
                                                .idContact("CONTACT-ID")
                                                .ident("FRIEND")
                                                .idLocation("LOCATION-ID")
                                                .idOperatingUnit("OPERATINGUNIT-ID")
                                                .idOrganization("ORGANIZATION-ID")
                                                .lat(45.23)
                                                .location(
                                                    LocationFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(LocationFull.DataMode.TEST)
                                                        .name("Example location")
                                                        .source("Bluestaq")
                                                        .altitude(10.23)
                                                        .countryCode("US")
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .idLocation("LOCATION-ID")
                                                        .lat(45.23)
                                                        .lon(179.1)
                                                        .origin("THIRD_PARTY_DATASOURCE")
                                                        .origNetwork("OPS1")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .locName("LOCATION_NAME")
                                                .locReason("GR")
                                                .lon(179.1)
                                                .masterUnit(true)
                                                .milGrid("4QFJ12345678")
                                                .milGridSys("UTM")
                                                .msnPrimary("W6")
                                                .msnPrimarySpecialty("QK")
                                                .addOperatingUnitRemark(
                                                    OperatingUnitRemarkFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(
                                                            OperatingUnitRemarkFull.DataMode.TEST
                                                        )
                                                        .idOperatingUnit("OperatingUnit-ID")
                                                        .source("some.user")
                                                        .text("This is a remark")
                                                        .id("0167f577-e06c-358e-85aa-0a07a730bdd0")
                                                        .altRmkId("123456ABC")
                                                        .code("M")
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .name("Remark name")
                                                        .origin("THIRD_PARTY_DATASOURCE")
                                                        .type("Restriction")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .operStatus("OPR")
                                                .organization(
                                                    OrganizationFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(OrganizationFull.DataMode.TEST)
                                                        .name("some.user")
                                                        .source("some.user")
                                                        .type("GOVERNMENT")
                                                        .id("ORGANIZATION-ID")
                                                        .active(false)
                                                        .category("Private company")
                                                        .countryCode("US")
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .description("Example description")
                                                        .externalId("EXTERNAL-ID")
                                                        .nationality("US")
                                                        .addOrganizationDetail(
                                                            OrganizationDetailsFull.builder()
                                                                .classificationMarking("U")
                                                                .dataMode(
                                                                    OrganizationDetailsFull.DataMode
                                                                        .TEST
                                                                )
                                                                .idOrganization("ORGANIZATION-ID")
                                                                .name("some.user")
                                                                .source("some.user")
                                                                .id("ORGANIZATIONDETAILS-ID")
                                                                .address1("123 Main Street")
                                                                .address2("Apt 4B")
                                                                .address3(
                                                                    "Colorado Springs CO, 80903"
                                                                )
                                                                .broker("some.user")
                                                                .ceo("some.user")
                                                                .cfo("some.user")
                                                                .createdAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .createdBy("some.user")
                                                                .cto("some.user")
                                                                .description("Example description")
                                                                .ebitda(123.4)
                                                                .email(
                                                                    "some_organization@organization.com"
                                                                )
                                                                .financialNotes("Example notes")
                                                                .financialYearEndDate(
                                                                    OffsetDateTime.parse(
                                                                        "2021-01-01T01:01:01.123Z"
                                                                    )
                                                                )
                                                                .fleetPlanNotes("Example notes")
                                                                .formerOrgId("FORMERORG-ID")
                                                                .ftes(123)
                                                                .geoAdminLevel1("Colorado")
                                                                .geoAdminLevel2("El Paso County")
                                                                .geoAdminLevel3("Colorado Springs")
                                                                .massRanking(123)
                                                                .origin("some.user")
                                                                .origNetwork("OPS1")
                                                                .parentOrgId("PARENTORG-ID")
                                                                .postalCode("80903")
                                                                .profit(123.4)
                                                                .revenue(123.4)
                                                                .revenueRanking(123)
                                                                .riskManager("some.user")
                                                                .servicesNotes("Example notes")
                                                                .addTag("PROVIDER_TAG1")
                                                                .addTag("PROVIDER_TAG2")
                                                                .updatedAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .updatedBy("some.user")
                                                                .build()
                                                        )
                                                        .origin("some.user")
                                                        .origNetwork("OPS1")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .polSubdiv("IZ07")
                                                .recStatus("A")
                                                .referenceDoc("Provider Reference Documentation")
                                                .resProd("RT")
                                                .reviewDate(LocalDate.parse("2008-06-10"))
                                                .stylizedUnit(true)
                                                .symCode("SOGPU----------")
                                                .unitIdentifier("AZXAZ12345")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .utm("19P4390691376966")
                                                .wac("0427")
                                                .build()
                                        )
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .ownerType(
                                            OnorbitFull.EntityCollection.OwnerType.COMMERCIAL
                                        )
                                        .addRfBand(
                                            RfBandFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(RfBandFull.DataMode.TEST)
                                                .idEntity("ENTITY-ID")
                                                .name("BAND_NAME")
                                                .source("Bluestaq")
                                                .id("ad88770b-d824-443f-bdce-5f9e3fa500a9")
                                                .band("Ku")
                                                .bandwidth(100.23)
                                                .addBandwidthSetting(250.1)
                                                .addBandwidthSetting(500.1)
                                                .beamwidth(45.23)
                                                .addBeamwidthSetting(5.1)
                                                .addBeamwidthSetting(10.1)
                                                .centerFreq(1000.23)
                                                .createdAt(
                                                    OffsetDateTime.parse("2025-03-05T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .addDelaySetting(2.77)
                                                .addDelaySetting(5.64)
                                                .edgeGain(100.23)
                                                .eirp(2.23)
                                                .erp(2.23)
                                                .freqMax(2000.23)
                                                .freqMin(50.23)
                                                .addFrequencySetting(12250.1)
                                                .addFrequencySetting(15000.1)
                                                .addGainSetting(2.77)
                                                .addGainSetting(5.64)
                                                .mode(RfBandFull.Mode.TX)
                                                .addNoiseSetting(0.00033)
                                                .addNoiseSetting(0.0033)
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .peakGain(120.23)
                                                .polarization(RfBandFull.Polarization.H)
                                                .purpose(RfBandFull.Purpose.TTC)
                                                .updatedAt(
                                                    OffsetDateTime.parse("2025-03-05T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .addStatusCollection(
                                            StatusFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(StatusFull.DataMode.TEST)
                                                .idEntity("ENTITY-ID")
                                                .source("Bluestaq")
                                                .id("STATUS-ID")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .declassificationDate(
                                                    OffsetDateTime.parse("2021-01-01T01:02:02.123Z")
                                                )
                                                .declassificationString("U")
                                                .derivedFrom("SOME_SOURCE")
                                                .notes("Example Notes")
                                                .opsCap(StatusFull.OpsCap.FMC)
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .state(StatusFull.State.ACTIVE)
                                                .addSubStatusCollection(
                                                    SubStatusFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(SubStatusFull.DataMode.TEST)
                                                        .notes("Sample Notes")
                                                        .source("Bluestaq")
                                                        .status(SubStatusFull.Status.FMC)
                                                        .statusId("REF-STATUS-ID")
                                                        .type(SubStatusFull.Type.MD_CAP)
                                                        .id("SUBSTATUS-ID")
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .origin("THIRD_PARTY_DATASOURCE")
                                                        .origNetwork("OPS1")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .sysCap(StatusFull.SysCap.FMC)
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .taskable(false)
                                        .terrestrialId("TERRESTRIAL-ID")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .addUrl("URL1")
                                        .addUrl("URL2")
                                        .build()
                                )
                                .idOnOrbit("ONORBIT-ID")
                                .intlDes("2021123ABC")
                                .launchDate(LocalDate.parse("2018-01-01"))
                                .launchSiteId("LAUNCHSITE-ID")
                                .lifetimeYears(10)
                                .missionNumber("Expedition 1")
                                .objectType(OnorbitFull.ObjectType.PAYLOAD)
                                .addOnorbitDetail(
                                    OnorbitDetailsFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OnorbitDetailsFull.DataMode.TEST)
                                        .idOnOrbit("REF-ONORBIT-ID")
                                        .source("Bluestaq")
                                        .id("ONORBITDETAILS-ID")
                                        .additionalMass(10.23)
                                        .adeptRadius(10.23)
                                        .bolDeltaV(1000.1)
                                        .bolFuelMass(10.23)
                                        .busCrossSection(10.23)
                                        .busType("A2100")
                                        .colaRadius(10.23)
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .crossSection(10.23)
                                        .currentMass(500.0)
                                        .deltaVUnc(50.1)
                                        .addDepEstMass(20.0)
                                        .addDepEstMass(21.0)
                                        .addDepMassUnc(10.0)
                                        .addDepMassUnc(5.0)
                                        .addDepName("GOES-18A")
                                        .addDepName("GOES-18B")
                                        .driftRate(1.23)
                                        .dryMass(10.23)
                                        .estDeltaVDuration(10.23)
                                        .fuelRemaining(10.23)
                                        .geoSlot(90.23)
                                        .lastObSource("THIRD_PARTY_DATASOURCE")
                                        .lastObTime(
                                            OffsetDateTime.parse("2021-01-01T01:01:01.123456Z")
                                        )
                                        .launchMass(10.23)
                                        .launchMassMax(15.23)
                                        .launchMassMin(5.23)
                                        .maneuverable(false)
                                        .maxDeltaV(10.23)
                                        .maxRadius(10.23)
                                        .addMissionType("Weather")
                                        .addMissionType("Space Weather")
                                        .numDeployable(2)
                                        .numMission(2)
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .rcs(10.23)
                                        .rcsMax(15.23)
                                        .rcsMean(10.23)
                                        .rcsMin(5.23)
                                        .refSource("Wikipedia")
                                        .solarArrayArea(10.23)
                                        .totalMassUnc(50.1)
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .vismag(10.23)
                                        .vismagMax(15.23)
                                        .vismagMean(10.23)
                                        .vismagMin(5.23)
                                        .build()
                                )
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .addSolarArray(
                                    OnorbitSolarArrayFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OnorbitSolarArrayFull.DataMode.TEST)
                                        .idOnOrbit("ONORBIT-ID")
                                        .idSolarArray("SOLARARRAY-ID")
                                        .source("Bluestaq")
                                        .id("ONORBITSOLARARRAY-ID")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .quantity(10)
                                        .solarArray(
                                            SolarArrayFull.builder()
                                                .dataMode(SolarArrayFull.DataMode.TEST)
                                                .name("Solar1")
                                                .source("Bluestaq")
                                                .id("SOLARARRAY-ID")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .addSolarArrayDetail(
                                                    SolarArrayDetailsFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(
                                                            SolarArrayDetailsFull.DataMode.TEST
                                                        )
                                                        .idSolarArray("SOLARARRAY-ID")
                                                        .source("Bluestaq")
                                                        .id("SOLARARRAYDETAILS-ID")
                                                        .area(123.4)
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .description("Example notes")
                                                        .junctionTechnology("Triple")
                                                        .manufacturerOrg(
                                                            OrganizationFull.builder()
                                                                .classificationMarking("U")
                                                                .dataMode(
                                                                    OrganizationFull.DataMode.TEST
                                                                )
                                                                .name("some.user")
                                                                .source("some.user")
                                                                .type("GOVERNMENT")
                                                                .id("ORGANIZATION-ID")
                                                                .active(false)
                                                                .category("Private company")
                                                                .countryCode("US")
                                                                .createdAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .createdBy("some.user")
                                                                .description("Example description")
                                                                .externalId("EXTERNAL-ID")
                                                                .nationality("US")
                                                                .addOrganizationDetail(
                                                                    OrganizationDetailsFull
                                                                        .builder()
                                                                        .classificationMarking("U")
                                                                        .dataMode(
                                                                            OrganizationDetailsFull
                                                                                .DataMode
                                                                                .TEST
                                                                        )
                                                                        .idOrganization(
                                                                            "ORGANIZATION-ID"
                                                                        )
                                                                        .name("some.user")
                                                                        .source("some.user")
                                                                        .id(
                                                                            "ORGANIZATIONDETAILS-ID"
                                                                        )
                                                                        .address1("123 Main Street")
                                                                        .address2("Apt 4B")
                                                                        .address3(
                                                                            "Colorado Springs CO, 80903"
                                                                        )
                                                                        .broker("some.user")
                                                                        .ceo("some.user")
                                                                        .cfo("some.user")
                                                                        .createdAt(
                                                                            OffsetDateTime.parse(
                                                                                "2018-01-01T16:00:00.123Z"
                                                                            )
                                                                        )
                                                                        .createdBy("some.user")
                                                                        .cto("some.user")
                                                                        .description(
                                                                            "Example description"
                                                                        )
                                                                        .ebitda(123.4)
                                                                        .email(
                                                                            "some_organization@organization.com"
                                                                        )
                                                                        .financialNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .financialYearEndDate(
                                                                            OffsetDateTime.parse(
                                                                                "2021-01-01T01:01:01.123Z"
                                                                            )
                                                                        )
                                                                        .fleetPlanNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .formerOrgId("FORMERORG-ID")
                                                                        .ftes(123)
                                                                        .geoAdminLevel1("Colorado")
                                                                        .geoAdminLevel2(
                                                                            "El Paso County"
                                                                        )
                                                                        .geoAdminLevel3(
                                                                            "Colorado Springs"
                                                                        )
                                                                        .massRanking(123)
                                                                        .origin("some.user")
                                                                        .origNetwork("OPS1")
                                                                        .parentOrgId("PARENTORG-ID")
                                                                        .postalCode("80903")
                                                                        .profit(123.4)
                                                                        .revenue(123.4)
                                                                        .revenueRanking(123)
                                                                        .riskManager("some.user")
                                                                        .servicesNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .addTag("PROVIDER_TAG1")
                                                                        .addTag("PROVIDER_TAG2")
                                                                        .updatedAt(
                                                                            OffsetDateTime.parse(
                                                                                "2018-01-01T16:00:00.123Z"
                                                                            )
                                                                        )
                                                                        .updatedBy("some.user")
                                                                        .build()
                                                                )
                                                                .origin("some.user")
                                                                .origNetwork("OPS1")
                                                                .updatedAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .updatedBy("some.user")
                                                                .build()
                                                        )
                                                        .manufacturerOrgId("MANUFACTURERORG-ID")
                                                        .origin("THIRD_PARTY_DATASOURCE")
                                                        .origNetwork("OPS1")
                                                        .span(123.4)
                                                        .addTag("TAG1")
                                                        .addTag("TAG2")
                                                        .technology("Ga-As")
                                                        .type("U Shaped")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .addThruster(
                                    OnorbitThrusterFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OnorbitThrusterFull.DataMode.TEST)
                                        .idEngine("ENGINE-ID")
                                        .idOnOrbit("ONORBIT-ID")
                                        .source("Bluestaq")
                                        .id("ONORBITTHRUSTER-ID")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .engine(
                                            Engine.builder()
                                                .classificationMarking("U")
                                                .dataMode(Engine.DataMode.TEST)
                                                .name("ENGINE_VARIANT1")
                                                .source("Bluestaq")
                                                .id("ENGINE-ID")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .addEngineDetail(
                                                    EngineDetailsFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(EngineDetailsFull.DataMode.TEST)
                                                        .idEngine("ENGINE-ID")
                                                        .source("Bluestaq")
                                                        .id("ENGINEDETAILS-ID")
                                                        .burnTime(1.1)
                                                        .chamberPressure(1.1)
                                                        .characteristicType("Electric")
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .cycleType("Pressure Fed")
                                                        .family("ENGINE_TYPE1")
                                                        .manufacturerOrgId("MANUFACTURERORG-ID")
                                                        .maxFirings(5)
                                                        .notes("Example notes")
                                                        .nozzleExpansionRatio(1.1)
                                                        .origin("THIRD_PARTY_DATASOURCE")
                                                        .origNetwork("OPS1")
                                                        .oxidizer("Liquid Oxygen")
                                                        .propellant("Liquid")
                                                        .seaLevelThrust(1.1)
                                                        .specificImpulse(1.1)
                                                        .addTag("PROVIDER_TAG1")
                                                        .addTag("PROVIDER_TAG2")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .vacuumThrust(1.1)
                                                        .build()
                                                )
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .quantity(10)
                                        .type("Hydrazine REA")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .build()
                        )
                        .origin("THIRD_PARTY_DATASOURCE")
                        .origNetwork("OPS1")
                        .origObjectId("ORIGOBJECT-ID")
                        .partials("ANALYTIC")
                        .pedigree("CONJUNCTION")
                        .polarMotionX(1.23)
                        .polarMotionY(1.23)
                        .posUnc(0.333399744452)
                        .rawFileUri("rawFileURI")
                        .recOdSpan(3.5)
                        .referenceFrame(StateVectorFull.ReferenceFrame.J2000)
                        .residualsAcc(99.5)
                        .revNo(7205)
                        .rms(0.991)
                        .satNo(12)
                        .addSigmaPosUvw(1.23)
                        .addSigmaPosUvw(4.56)
                        .addSigmaVelUvw(1.23)
                        .addSigmaVelUvw(4.56)
                        .solarFluxApAvg(1.23)
                        .solarFluxF10(1.23)
                        .solarFluxF10Avg(1.23)
                        .solarRadPress(true)
                        .solarRadPressCoeff(0.0244394)
                        .solidEarthTides(true)
                        .addSourcedData("DATA1")
                        .addSourcedData("DATA2")
                        .addSourcedDataType(StateVectorFull.SourcedDataType.RADAR)
                        .sourceDl("AXE")
                        .srpArea(4.311)
                        .stepMode("AUTO")
                        .stepSize(1.23)
                        .stepSizeSelection("AUTO")
                        .addTag("TAG1")
                        .addTag("TAG2")
                        .taiUtc(1.23)
                        .thrustAccel(1.23)
                        .tracksAvail(163)
                        .tracksUsed(163)
                        .transactionId("transactionId")
                        .uct(true)
                        .ut1Rate(1.23)
                        .ut1Utc(1.23)
                        .velUnc(0.000004)
                        .xaccel(-2.12621392)
                        .xpos(-1118.577381)
                        .xposAlt1(-1145.688502)
                        .xposAlt2(-1456.915926)
                        .xvel(-4.25242784)
                        .xvelAlt1(-4.270832252)
                        .xvelAlt2(-1.219814294)
                        .yaccel(2.645553717)
                        .ypos(3026.231084)
                        .yposAlt1(3020.729572)
                        .yposAlt2(-2883.540406)
                        .yvel(5.291107434)
                        .yvelAlt1(5.27074276)
                        .yvelAlt2(-6.602080212)
                        .zaccel(-1.06310696)
                        .zpos(6167.831808)
                        .zposAlt1(6165.55187)
                        .zposAlt2(6165.55187)
                        .zvel(-3.356493869)
                        .zvelAlt1(-3.365155181)
                        .zvelAlt2(-3.365155181)
                        .build()
                )
                .stepSize(1L)
                .addTag("PROVIDER_TAG1")
                .addTag("PROVIDER_TAG2")
                .transactionId("TRANSACTION-ID")
                .usableEndTime(OffsetDateTime.parse("2018-01-01T20:50:00.123456Z"))
                .usableStartTime(OffsetDateTime.parse("2018-01-01T16:10:00.123456Z"))
                .build()

        assertThat(ephemerisSet.category()).isEqualTo("ANALYST")
        assertThat(ephemerisSet.classificationMarking()).isEqualTo("U")
        assertThat(ephemerisSet.dataMode()).isEqualTo(EphemerisSet.DataMode.TEST)
        assertThat(ephemerisSet.numPoints()).isEqualTo(1)
        assertThat(ephemerisSet.pointEndTime())
            .isEqualTo(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
        assertThat(ephemerisSet.pointStartTime())
            .isEqualTo(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
        assertThat(ephemerisSet.source()).isEqualTo("Bluestaq")
        assertThat(ephemerisSet.type()).isEqualTo("LAUNCH")
        assertThat(ephemerisSet.id()).contains("EPHEMERISSET-ID")
        assertThat(ephemerisSet.bDot()).contains(1.1)
        assertThat(ephemerisSet.centBody()).contains("Earth")
        assertThat(ephemerisSet.comments()).contains("Example notes")
        assertThat(ephemerisSet.covReferenceFrame()).contains(EphemerisSet.CovReferenceFrame.J2000)
        assertThat(ephemerisSet.createdAt())
            .contains(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
        assertThat(ephemerisSet.createdBy()).contains("some.user")
        assertThat(ephemerisSet.description()).contains("Example notes")
        assertThat(ephemerisSet.descriptor()).contains("Example descriptor")
        assertThat(ephemerisSet.dragModel()).contains("JAC70")
        assertThat(ephemerisSet.edr()).contains(1.1)
        assertThat(ephemerisSet.ephemerisList().getOrNull())
            .containsExactly(
                EphemerisFull.builder()
                    .classificationMarking("U")
                    .dataMode(EphemerisFull.DataMode.TEST)
                    .source("Bluestaq")
                    .ts(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                    .xpos(1.1)
                    .xvel(1.1)
                    .ypos(1.1)
                    .yvel(1.1)
                    .zpos(1.1)
                    .zvel(1.1)
                    .id("EPHEMERIS-ID")
                    .cov(listOf(1.1, 2.4, 3.8, 4.2, 5.5, 6.0))
                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .esId("ES-ID")
                    .idOnOrbit("ONORBIT-ID")
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origObjectId("ORIGOBJECT-ID")
                    .xaccel(1.1)
                    .yaccel(1.1)
                    .zaccel(1.1)
                    .build()
            )
        assertThat(ephemerisSet.filename()).contains("Example file name")
        assertThat(ephemerisSet.geopotentialModel()).contains("GEM-T3")
        assertThat(ephemerisSet.hasAccel()).contains(false)
        assertThat(ephemerisSet.hasCov()).contains(false)
        assertThat(ephemerisSet.hasMnvr()).contains(false)
        assertThat(ephemerisSet.idManeuvers().getOrNull())
            .containsExactly("EXAMPLE_ID1", "EXAMPLE_ID2")
        assertThat(ephemerisSet.idOnOrbit()).contains("ONORBIT-ID")
        assertThat(ephemerisSet.idStateVector()).contains("STATEVECTOR-ID")
        assertThat(ephemerisSet.integrator()).contains("COWELL")
        assertThat(ephemerisSet.interpolation()).contains("LINEAR")
        assertThat(ephemerisSet.interpolationDegree()).contains(5)
        assertThat(ephemerisSet.lunarSolar()).contains(false)
        assertThat(ephemerisSet.onOrbit())
            .contains(
                OnorbitFull.builder()
                    .classificationMarking("U")
                    .dataMode(OnorbitFull.DataMode.TEST)
                    .satNo(1)
                    .source("Bluestaq")
                    .altName("Alternate Name")
                    .addAntenna(
                        OnorbitAntennaFull.builder()
                            .classificationMarking("U")
                            .dataMode(OnorbitAntennaFull.DataMode.TEST)
                            .idAntenna("ANTENNA-ID")
                            .idOnOrbit("ONORBIT-ID")
                            .source("Bluestaq")
                            .id("ONORBITANTENNA-ID")
                            .antenna(
                                AntennaFull.builder()
                                    .dataMode(AntennaFull.DataMode.TEST)
                                    .name("IRIDIUM NEXT 121-ANTENNA-10075")
                                    .source("Bluestaq")
                                    .id("ANTENNA-ID")
                                    .addAntennaDetail(
                                        AntennaDetailsFull.builder()
                                            .classificationMarking("U")
                                            .dataMode(AntennaDetailsFull.DataMode.TEST)
                                            .idAntenna("ANTENNA-ID")
                                            .source("Bluestaq")
                                            .id("ANTENNADETAILS-ID")
                                            .beamForming(false)
                                            .beamwidth(14.1)
                                            .createdAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .createdBy("some.user")
                                            .description("Description of antenna A")
                                            .diameter(0.01)
                                            .endFrequency(3.3)
                                            .gain(20.1)
                                            .gainTolerance(5.1)
                                            .manufacturerOrg(
                                                OrganizationFull.builder()
                                                    .classificationMarking("U")
                                                    .dataMode(OrganizationFull.DataMode.TEST)
                                                    .name("some.user")
                                                    .source("some.user")
                                                    .type("GOVERNMENT")
                                                    .id("ORGANIZATION-ID")
                                                    .active(false)
                                                    .category("Private company")
                                                    .countryCode("US")
                                                    .createdAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .createdBy("some.user")
                                                    .description("Example description")
                                                    .externalId("EXTERNAL-ID")
                                                    .nationality("US")
                                                    .addOrganizationDetail(
                                                        OrganizationDetailsFull.builder()
                                                            .classificationMarking("U")
                                                            .dataMode(
                                                                OrganizationDetailsFull.DataMode
                                                                    .TEST
                                                            )
                                                            .idOrganization("ORGANIZATION-ID")
                                                            .name("some.user")
                                                            .source("some.user")
                                                            .id("ORGANIZATIONDETAILS-ID")
                                                            .address1("123 Main Street")
                                                            .address2("Apt 4B")
                                                            .address3("Colorado Springs CO, 80903")
                                                            .broker("some.user")
                                                            .ceo("some.user")
                                                            .cfo("some.user")
                                                            .createdAt(
                                                                OffsetDateTime.parse(
                                                                    "2018-01-01T16:00:00.123Z"
                                                                )
                                                            )
                                                            .createdBy("some.user")
                                                            .cto("some.user")
                                                            .description("Example description")
                                                            .ebitda(123.4)
                                                            .email(
                                                                "some_organization@organization.com"
                                                            )
                                                            .financialNotes("Example notes")
                                                            .financialYearEndDate(
                                                                OffsetDateTime.parse(
                                                                    "2021-01-01T01:01:01.123Z"
                                                                )
                                                            )
                                                            .fleetPlanNotes("Example notes")
                                                            .formerOrgId("FORMERORG-ID")
                                                            .ftes(123)
                                                            .geoAdminLevel1("Colorado")
                                                            .geoAdminLevel2("El Paso County")
                                                            .geoAdminLevel3("Colorado Springs")
                                                            .massRanking(123)
                                                            .origin("some.user")
                                                            .origNetwork("OPS1")
                                                            .parentOrgId("PARENTORG-ID")
                                                            .postalCode("80903")
                                                            .profit(123.4)
                                                            .revenue(123.4)
                                                            .revenueRanking(123)
                                                            .riskManager("some.user")
                                                            .servicesNotes("Example notes")
                                                            .addTag("PROVIDER_TAG1")
                                                            .addTag("PROVIDER_TAG2")
                                                            .updatedAt(
                                                                OffsetDateTime.parse(
                                                                    "2018-01-01T16:00:00.123Z"
                                                                )
                                                            )
                                                            .updatedBy("some.user")
                                                            .build()
                                                    )
                                                    .origin("some.user")
                                                    .origNetwork("OPS1")
                                                    .updatedAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .updatedBy("some.user")
                                                    .build()
                                            )
                                            .manufacturerOrgId("MANUFACTUREORG-ID")
                                            .mode(AntennaDetailsFull.Mode.TX)
                                            .origin("THIRD_PARTY_DATASOURCE")
                                            .origNetwork("OPS1")
                                            .polarization(45.1)
                                            .position("Top")
                                            .addSize(0.03)
                                            .addSize(0.05)
                                            .startFrequency(2.1)
                                            .steerable(false)
                                            .addTag("PROVIDER_TAG1")
                                            .addTag("PROVIDER_TAG2")
                                            .type("Reflector")
                                            .updatedAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .updatedBy("some.user")
                                            .build()
                                    )
                                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .origin("THIRD_PARTY_DATASOURCE")
                                    .origNetwork("OPS1")
                                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .updatedBy("some.user")
                                    .build()
                            )
                            .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .createdBy("some.user")
                            .origin("THIRD_PARTY_DATASOURCE")
                            .origNetwork("OPS1")
                            .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .updatedBy("some.user")
                            .build()
                    )
                    .addBattery(
                        OnorbitBatteryFull.builder()
                            .classificationMarking("U")
                            .dataMode(OnorbitBatteryFull.DataMode.TEST)
                            .idBattery("BATTERY-ID")
                            .idOnOrbit("ONORBIT-ID")
                            .source("Bluestaq")
                            .id("ONORBITBATTERY-ID")
                            .battery(
                                BatteryFull.builder()
                                    .dataMode(BatteryFull.DataMode.TEST)
                                    .name("JAK-BATTERY-1479")
                                    .source("Bluestaq")
                                    .id("BATTERY-ID")
                                    .addBatteryDetail(
                                        BatterydetailsFull.builder()
                                            .classificationMarking("U")
                                            .dataMode(BatterydetailsFull.DataMode.TEST)
                                            .idBattery("BATTERY-ID")
                                            .source("Bluestaq")
                                            .id("BATTERYDETAILS-ID")
                                            .capacity(10.1)
                                            .createdAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .createdBy("some.user")
                                            .description("example notes")
                                            .dischargeDepth(0.2)
                                            .manufacturerOrg(
                                                OrganizationFull.builder()
                                                    .classificationMarking("U")
                                                    .dataMode(OrganizationFull.DataMode.TEST)
                                                    .name("some.user")
                                                    .source("some.user")
                                                    .type("GOVERNMENT")
                                                    .id("ORGANIZATION-ID")
                                                    .active(false)
                                                    .category("Private company")
                                                    .countryCode("US")
                                                    .createdAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .createdBy("some.user")
                                                    .description("Example description")
                                                    .externalId("EXTERNAL-ID")
                                                    .nationality("US")
                                                    .addOrganizationDetail(
                                                        OrganizationDetailsFull.builder()
                                                            .classificationMarking("U")
                                                            .dataMode(
                                                                OrganizationDetailsFull.DataMode
                                                                    .TEST
                                                            )
                                                            .idOrganization("ORGANIZATION-ID")
                                                            .name("some.user")
                                                            .source("some.user")
                                                            .id("ORGANIZATIONDETAILS-ID")
                                                            .address1("123 Main Street")
                                                            .address2("Apt 4B")
                                                            .address3("Colorado Springs CO, 80903")
                                                            .broker("some.user")
                                                            .ceo("some.user")
                                                            .cfo("some.user")
                                                            .createdAt(
                                                                OffsetDateTime.parse(
                                                                    "2018-01-01T16:00:00.123Z"
                                                                )
                                                            )
                                                            .createdBy("some.user")
                                                            .cto("some.user")
                                                            .description("Example description")
                                                            .ebitda(123.4)
                                                            .email(
                                                                "some_organization@organization.com"
                                                            )
                                                            .financialNotes("Example notes")
                                                            .financialYearEndDate(
                                                                OffsetDateTime.parse(
                                                                    "2021-01-01T01:01:01.123Z"
                                                                )
                                                            )
                                                            .fleetPlanNotes("Example notes")
                                                            .formerOrgId("FORMERORG-ID")
                                                            .ftes(123)
                                                            .geoAdminLevel1("Colorado")
                                                            .geoAdminLevel2("El Paso County")
                                                            .geoAdminLevel3("Colorado Springs")
                                                            .massRanking(123)
                                                            .origin("some.user")
                                                            .origNetwork("OPS1")
                                                            .parentOrgId("PARENTORG-ID")
                                                            .postalCode("80903")
                                                            .profit(123.4)
                                                            .revenue(123.4)
                                                            .revenueRanking(123)
                                                            .riskManager("some.user")
                                                            .servicesNotes("Example notes")
                                                            .addTag("PROVIDER_TAG1")
                                                            .addTag("PROVIDER_TAG2")
                                                            .updatedAt(
                                                                OffsetDateTime.parse(
                                                                    "2018-01-01T16:00:00.123Z"
                                                                )
                                                            )
                                                            .updatedBy("some.user")
                                                            .build()
                                                    )
                                                    .origin("some.user")
                                                    .origNetwork("OPS1")
                                                    .updatedAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .updatedBy("some.user")
                                                    .build()
                                            )
                                            .manufacturerOrgId("MANUFACTURERORG-ID")
                                            .model("11212")
                                            .origin("THIRD_PARTY_DATASOURCE")
                                            .origNetwork("OPS1")
                                            .addTag("PROVIDER_TAG1")
                                            .addTag("PROVIDER_TAG2")
                                            .technology("Ni-Cd")
                                            .updatedAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .updatedBy("some.user")
                                            .build()
                                    )
                                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .origin("THIRD_PARTY_DATASOURCE")
                                    .origNetwork("OPS1")
                                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .updatedBy("some.user")
                                    .build()
                            )
                            .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .createdBy("some.user")
                            .origin("THIRD_PARTY_DATASOURCE")
                            .origNetwork("OPS1")
                            .quantity(5)
                            .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .updatedBy("some.user")
                            .build()
                    )
                    .category(OnorbitFull.Category.LUNAR)
                    .commonName("Example common name")
                    .constellation("Big Dipper")
                    .countryCode("US")
                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .decayDate(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .addEntityCollection(
                        OnorbitFull.EntityCollection.builder()
                            .classificationMarking("U")
                            .dataMode(OnorbitFull.EntityCollection.DataMode.TEST)
                            .name("Example name")
                            .source("Bluestaq")
                            .type(OnorbitFull.EntityCollection.Type.ONORBIT)
                            .countryCode("US")
                            .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .createdBy("some.user")
                            .idEntity("ENTITY-ID")
                            .idLocation("LOCATION-ID")
                            .idOnOrbit("ONORBIT-ID")
                            .idOperatingUnit("OPERATINGUNIT-ID")
                            .location(
                                LocationFull.builder()
                                    .classificationMarking("U")
                                    .dataMode(LocationFull.DataMode.TEST)
                                    .name("Example location")
                                    .source("Bluestaq")
                                    .altitude(10.23)
                                    .countryCode("US")
                                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .idLocation("LOCATION-ID")
                                    .lat(45.23)
                                    .lon(179.1)
                                    .origin("THIRD_PARTY_DATASOURCE")
                                    .origNetwork("OPS1")
                                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .updatedBy("some.user")
                                    .build()
                            )
                            .operatingUnit(
                                OperatingunitFull.builder()
                                    .classificationMarking("U")
                                    .dataMode(OperatingunitFull.DataMode.TEST)
                                    .name("SOME_NAME")
                                    .source("some.user")
                                    .airDefArea("AL006")
                                    .allegiance("OTHR")
                                    .altAllegiance("HL")
                                    .altCountryCode("IZ")
                                    .altOperatingUnitId("32100000000021")
                                    .classRating("1")
                                    .condition("RDY")
                                    .conditionAvail("A")
                                    .coord("340000000N0430000000E")
                                    .coordDatum("WGS")
                                    .coordDerivAcc(12.345)
                                    .countryCode("IQ")
                                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .deployStatus("ND")
                                    .description("Description of unit")
                                    .divCat("5")
                                    .echelon("SHIP")
                                    .echelonTier("68")
                                    .elevMsl(123.45)
                                    .elevMslConfLvl(50)
                                    .elevMslDerivAcc(12.34)
                                    .eval(7)
                                    .flagFlown("IZ")
                                    .fleetId("A")
                                    .force("NV")
                                    .forceName("FORCE-NAME")
                                    .fpa("EOB")
                                    .functRole("MIL")
                                    .geoidalMslSep(12.34)
                                    .idContact("CONTACT-ID")
                                    .ident("FRIEND")
                                    .idLocation("LOCATION-ID")
                                    .idOperatingUnit("OPERATINGUNIT-ID")
                                    .idOrganization("ORGANIZATION-ID")
                                    .lat(45.23)
                                    .location(
                                        LocationFull.builder()
                                            .classificationMarking("U")
                                            .dataMode(LocationFull.DataMode.TEST)
                                            .name("Example location")
                                            .source("Bluestaq")
                                            .altitude(10.23)
                                            .countryCode("US")
                                            .createdAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .createdBy("some.user")
                                            .idLocation("LOCATION-ID")
                                            .lat(45.23)
                                            .lon(179.1)
                                            .origin("THIRD_PARTY_DATASOURCE")
                                            .origNetwork("OPS1")
                                            .updatedAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .updatedBy("some.user")
                                            .build()
                                    )
                                    .locName("LOCATION_NAME")
                                    .locReason("GR")
                                    .lon(179.1)
                                    .masterUnit(true)
                                    .milGrid("4QFJ12345678")
                                    .milGridSys("UTM")
                                    .msnPrimary("W6")
                                    .msnPrimarySpecialty("QK")
                                    .addOperatingUnitRemark(
                                        OperatingUnitRemarkFull.builder()
                                            .classificationMarking("U")
                                            .dataMode(OperatingUnitRemarkFull.DataMode.TEST)
                                            .idOperatingUnit("OperatingUnit-ID")
                                            .source("some.user")
                                            .text("This is a remark")
                                            .id("0167f577-e06c-358e-85aa-0a07a730bdd0")
                                            .altRmkId("123456ABC")
                                            .code("M")
                                            .createdAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .createdBy("some.user")
                                            .name("Remark name")
                                            .origin("THIRD_PARTY_DATASOURCE")
                                            .type("Restriction")
                                            .updatedAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .updatedBy("some.user")
                                            .build()
                                    )
                                    .operStatus("OPR")
                                    .organization(
                                        OrganizationFull.builder()
                                            .classificationMarking("U")
                                            .dataMode(OrganizationFull.DataMode.TEST)
                                            .name("some.user")
                                            .source("some.user")
                                            .type("GOVERNMENT")
                                            .id("ORGANIZATION-ID")
                                            .active(false)
                                            .category("Private company")
                                            .countryCode("US")
                                            .createdAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .createdBy("some.user")
                                            .description("Example description")
                                            .externalId("EXTERNAL-ID")
                                            .nationality("US")
                                            .addOrganizationDetail(
                                                OrganizationDetailsFull.builder()
                                                    .classificationMarking("U")
                                                    .dataMode(OrganizationDetailsFull.DataMode.TEST)
                                                    .idOrganization("ORGANIZATION-ID")
                                                    .name("some.user")
                                                    .source("some.user")
                                                    .id("ORGANIZATIONDETAILS-ID")
                                                    .address1("123 Main Street")
                                                    .address2("Apt 4B")
                                                    .address3("Colorado Springs CO, 80903")
                                                    .broker("some.user")
                                                    .ceo("some.user")
                                                    .cfo("some.user")
                                                    .createdAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .createdBy("some.user")
                                                    .cto("some.user")
                                                    .description("Example description")
                                                    .ebitda(123.4)
                                                    .email("some_organization@organization.com")
                                                    .financialNotes("Example notes")
                                                    .financialYearEndDate(
                                                        OffsetDateTime.parse(
                                                            "2021-01-01T01:01:01.123Z"
                                                        )
                                                    )
                                                    .fleetPlanNotes("Example notes")
                                                    .formerOrgId("FORMERORG-ID")
                                                    .ftes(123)
                                                    .geoAdminLevel1("Colorado")
                                                    .geoAdminLevel2("El Paso County")
                                                    .geoAdminLevel3("Colorado Springs")
                                                    .massRanking(123)
                                                    .origin("some.user")
                                                    .origNetwork("OPS1")
                                                    .parentOrgId("PARENTORG-ID")
                                                    .postalCode("80903")
                                                    .profit(123.4)
                                                    .revenue(123.4)
                                                    .revenueRanking(123)
                                                    .riskManager("some.user")
                                                    .servicesNotes("Example notes")
                                                    .addTag("PROVIDER_TAG1")
                                                    .addTag("PROVIDER_TAG2")
                                                    .updatedAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .updatedBy("some.user")
                                                    .build()
                                            )
                                            .origin("some.user")
                                            .origNetwork("OPS1")
                                            .updatedAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .updatedBy("some.user")
                                            .build()
                                    )
                                    .origin("THIRD_PARTY_DATASOURCE")
                                    .polSubdiv("IZ07")
                                    .recStatus("A")
                                    .referenceDoc("Provider Reference Documentation")
                                    .resProd("RT")
                                    .reviewDate(LocalDate.parse("2008-06-10"))
                                    .stylizedUnit(true)
                                    .symCode("SOGPU----------")
                                    .unitIdentifier("AZXAZ12345")
                                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .updatedBy("some.user")
                                    .utm("19P4390691376966")
                                    .wac("0427")
                                    .build()
                            )
                            .origin("THIRD_PARTY_DATASOURCE")
                            .origNetwork("OPS1")
                            .ownerType(OnorbitFull.EntityCollection.OwnerType.COMMERCIAL)
                            .addRfBand(
                                RfBandFull.builder()
                                    .classificationMarking("U")
                                    .dataMode(RfBandFull.DataMode.TEST)
                                    .idEntity("ENTITY-ID")
                                    .name("BAND_NAME")
                                    .source("Bluestaq")
                                    .id("ad88770b-d824-443f-bdce-5f9e3fa500a9")
                                    .band("Ku")
                                    .bandwidth(100.23)
                                    .addBandwidthSetting(250.1)
                                    .addBandwidthSetting(500.1)
                                    .beamwidth(45.23)
                                    .addBeamwidthSetting(5.1)
                                    .addBeamwidthSetting(10.1)
                                    .centerFreq(1000.23)
                                    .createdAt(OffsetDateTime.parse("2025-03-05T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .addDelaySetting(2.77)
                                    .addDelaySetting(5.64)
                                    .edgeGain(100.23)
                                    .eirp(2.23)
                                    .erp(2.23)
                                    .freqMax(2000.23)
                                    .freqMin(50.23)
                                    .addFrequencySetting(12250.1)
                                    .addFrequencySetting(15000.1)
                                    .addGainSetting(2.77)
                                    .addGainSetting(5.64)
                                    .mode(RfBandFull.Mode.TX)
                                    .addNoiseSetting(0.00033)
                                    .addNoiseSetting(0.0033)
                                    .origin("THIRD_PARTY_DATASOURCE")
                                    .origNetwork("OPS1")
                                    .peakGain(120.23)
                                    .polarization(RfBandFull.Polarization.H)
                                    .purpose(RfBandFull.Purpose.TTC)
                                    .updatedAt(OffsetDateTime.parse("2025-03-05T16:00:00.123Z"))
                                    .updatedBy("some.user")
                                    .build()
                            )
                            .addStatusCollection(
                                StatusFull.builder()
                                    .classificationMarking("U")
                                    .dataMode(StatusFull.DataMode.TEST)
                                    .idEntity("ENTITY-ID")
                                    .source("Bluestaq")
                                    .id("STATUS-ID")
                                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .declassificationDate(
                                        OffsetDateTime.parse("2021-01-01T01:02:02.123Z")
                                    )
                                    .declassificationString("U")
                                    .derivedFrom("SOME_SOURCE")
                                    .notes("Example Notes")
                                    .opsCap(StatusFull.OpsCap.FMC)
                                    .origin("THIRD_PARTY_DATASOURCE")
                                    .origNetwork("OPS1")
                                    .state(StatusFull.State.ACTIVE)
                                    .addSubStatusCollection(
                                        SubStatusFull.builder()
                                            .classificationMarking("U")
                                            .dataMode(SubStatusFull.DataMode.TEST)
                                            .notes("Sample Notes")
                                            .source("Bluestaq")
                                            .status(SubStatusFull.Status.FMC)
                                            .statusId("REF-STATUS-ID")
                                            .type(SubStatusFull.Type.MD_CAP)
                                            .id("SUBSTATUS-ID")
                                            .createdAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .createdBy("some.user")
                                            .origin("THIRD_PARTY_DATASOURCE")
                                            .origNetwork("OPS1")
                                            .updatedAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .updatedBy("some.user")
                                            .build()
                                    )
                                    .sysCap(StatusFull.SysCap.FMC)
                                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .updatedBy("some.user")
                                    .build()
                            )
                            .taskable(false)
                            .terrestrialId("TERRESTRIAL-ID")
                            .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .updatedBy("some.user")
                            .addUrl("URL1")
                            .addUrl("URL2")
                            .build()
                    )
                    .idOnOrbit("ONORBIT-ID")
                    .intlDes("2021123ABC")
                    .launchDate(LocalDate.parse("2018-01-01"))
                    .launchSiteId("LAUNCHSITE-ID")
                    .lifetimeYears(10)
                    .missionNumber("Expedition 1")
                    .objectType(OnorbitFull.ObjectType.PAYLOAD)
                    .addOnorbitDetail(
                        OnorbitDetailsFull.builder()
                            .classificationMarking("U")
                            .dataMode(OnorbitDetailsFull.DataMode.TEST)
                            .idOnOrbit("REF-ONORBIT-ID")
                            .source("Bluestaq")
                            .id("ONORBITDETAILS-ID")
                            .additionalMass(10.23)
                            .adeptRadius(10.23)
                            .bolDeltaV(1000.1)
                            .bolFuelMass(10.23)
                            .busCrossSection(10.23)
                            .busType("A2100")
                            .colaRadius(10.23)
                            .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .createdBy("some.user")
                            .crossSection(10.23)
                            .currentMass(500.0)
                            .deltaVUnc(50.1)
                            .addDepEstMass(20.0)
                            .addDepEstMass(21.0)
                            .addDepMassUnc(10.0)
                            .addDepMassUnc(5.0)
                            .addDepName("GOES-18A")
                            .addDepName("GOES-18B")
                            .driftRate(1.23)
                            .dryMass(10.23)
                            .estDeltaVDuration(10.23)
                            .fuelRemaining(10.23)
                            .geoSlot(90.23)
                            .lastObSource("THIRD_PARTY_DATASOURCE")
                            .lastObTime(OffsetDateTime.parse("2021-01-01T01:01:01.123456Z"))
                            .launchMass(10.23)
                            .launchMassMax(15.23)
                            .launchMassMin(5.23)
                            .maneuverable(false)
                            .maxDeltaV(10.23)
                            .maxRadius(10.23)
                            .addMissionType("Weather")
                            .addMissionType("Space Weather")
                            .numDeployable(2)
                            .numMission(2)
                            .origin("THIRD_PARTY_DATASOURCE")
                            .origNetwork("OPS1")
                            .rcs(10.23)
                            .rcsMax(15.23)
                            .rcsMean(10.23)
                            .rcsMin(5.23)
                            .refSource("Wikipedia")
                            .solarArrayArea(10.23)
                            .totalMassUnc(50.1)
                            .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .updatedBy("some.user")
                            .vismag(10.23)
                            .vismagMax(15.23)
                            .vismagMean(10.23)
                            .vismagMin(5.23)
                            .build()
                    )
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("OPS1")
                    .addSolarArray(
                        OnorbitSolarArrayFull.builder()
                            .classificationMarking("U")
                            .dataMode(OnorbitSolarArrayFull.DataMode.TEST)
                            .idOnOrbit("ONORBIT-ID")
                            .idSolarArray("SOLARARRAY-ID")
                            .source("Bluestaq")
                            .id("ONORBITSOLARARRAY-ID")
                            .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .createdBy("some.user")
                            .origin("THIRD_PARTY_DATASOURCE")
                            .origNetwork("OPS1")
                            .quantity(10)
                            .solarArray(
                                SolarArrayFull.builder()
                                    .dataMode(SolarArrayFull.DataMode.TEST)
                                    .name("Solar1")
                                    .source("Bluestaq")
                                    .id("SOLARARRAY-ID")
                                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .origin("THIRD_PARTY_DATASOURCE")
                                    .origNetwork("OPS1")
                                    .addSolarArrayDetail(
                                        SolarArrayDetailsFull.builder()
                                            .classificationMarking("U")
                                            .dataMode(SolarArrayDetailsFull.DataMode.TEST)
                                            .idSolarArray("SOLARARRAY-ID")
                                            .source("Bluestaq")
                                            .id("SOLARARRAYDETAILS-ID")
                                            .area(123.4)
                                            .createdAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .createdBy("some.user")
                                            .description("Example notes")
                                            .junctionTechnology("Triple")
                                            .manufacturerOrg(
                                                OrganizationFull.builder()
                                                    .classificationMarking("U")
                                                    .dataMode(OrganizationFull.DataMode.TEST)
                                                    .name("some.user")
                                                    .source("some.user")
                                                    .type("GOVERNMENT")
                                                    .id("ORGANIZATION-ID")
                                                    .active(false)
                                                    .category("Private company")
                                                    .countryCode("US")
                                                    .createdAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .createdBy("some.user")
                                                    .description("Example description")
                                                    .externalId("EXTERNAL-ID")
                                                    .nationality("US")
                                                    .addOrganizationDetail(
                                                        OrganizationDetailsFull.builder()
                                                            .classificationMarking("U")
                                                            .dataMode(
                                                                OrganizationDetailsFull.DataMode
                                                                    .TEST
                                                            )
                                                            .idOrganization("ORGANIZATION-ID")
                                                            .name("some.user")
                                                            .source("some.user")
                                                            .id("ORGANIZATIONDETAILS-ID")
                                                            .address1("123 Main Street")
                                                            .address2("Apt 4B")
                                                            .address3("Colorado Springs CO, 80903")
                                                            .broker("some.user")
                                                            .ceo("some.user")
                                                            .cfo("some.user")
                                                            .createdAt(
                                                                OffsetDateTime.parse(
                                                                    "2018-01-01T16:00:00.123Z"
                                                                )
                                                            )
                                                            .createdBy("some.user")
                                                            .cto("some.user")
                                                            .description("Example description")
                                                            .ebitda(123.4)
                                                            .email(
                                                                "some_organization@organization.com"
                                                            )
                                                            .financialNotes("Example notes")
                                                            .financialYearEndDate(
                                                                OffsetDateTime.parse(
                                                                    "2021-01-01T01:01:01.123Z"
                                                                )
                                                            )
                                                            .fleetPlanNotes("Example notes")
                                                            .formerOrgId("FORMERORG-ID")
                                                            .ftes(123)
                                                            .geoAdminLevel1("Colorado")
                                                            .geoAdminLevel2("El Paso County")
                                                            .geoAdminLevel3("Colorado Springs")
                                                            .massRanking(123)
                                                            .origin("some.user")
                                                            .origNetwork("OPS1")
                                                            .parentOrgId("PARENTORG-ID")
                                                            .postalCode("80903")
                                                            .profit(123.4)
                                                            .revenue(123.4)
                                                            .revenueRanking(123)
                                                            .riskManager("some.user")
                                                            .servicesNotes("Example notes")
                                                            .addTag("PROVIDER_TAG1")
                                                            .addTag("PROVIDER_TAG2")
                                                            .updatedAt(
                                                                OffsetDateTime.parse(
                                                                    "2018-01-01T16:00:00.123Z"
                                                                )
                                                            )
                                                            .updatedBy("some.user")
                                                            .build()
                                                    )
                                                    .origin("some.user")
                                                    .origNetwork("OPS1")
                                                    .updatedAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .updatedBy("some.user")
                                                    .build()
                                            )
                                            .manufacturerOrgId("MANUFACTURERORG-ID")
                                            .origin("THIRD_PARTY_DATASOURCE")
                                            .origNetwork("OPS1")
                                            .span(123.4)
                                            .addTag("TAG1")
                                            .addTag("TAG2")
                                            .technology("Ga-As")
                                            .type("U Shaped")
                                            .updatedAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .updatedBy("some.user")
                                            .build()
                                    )
                                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .updatedBy("some.user")
                                    .build()
                            )
                            .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .updatedBy("some.user")
                            .build()
                    )
                    .addThruster(
                        OnorbitThrusterFull.builder()
                            .classificationMarking("U")
                            .dataMode(OnorbitThrusterFull.DataMode.TEST)
                            .idEngine("ENGINE-ID")
                            .idOnOrbit("ONORBIT-ID")
                            .source("Bluestaq")
                            .id("ONORBITTHRUSTER-ID")
                            .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .createdBy("some.user")
                            .engine(
                                Engine.builder()
                                    .classificationMarking("U")
                                    .dataMode(Engine.DataMode.TEST)
                                    .name("ENGINE_VARIANT1")
                                    .source("Bluestaq")
                                    .id("ENGINE-ID")
                                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .addEngineDetail(
                                        EngineDetailsFull.builder()
                                            .classificationMarking("U")
                                            .dataMode(EngineDetailsFull.DataMode.TEST)
                                            .idEngine("ENGINE-ID")
                                            .source("Bluestaq")
                                            .id("ENGINEDETAILS-ID")
                                            .burnTime(1.1)
                                            .chamberPressure(1.1)
                                            .characteristicType("Electric")
                                            .createdAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .createdBy("some.user")
                                            .cycleType("Pressure Fed")
                                            .family("ENGINE_TYPE1")
                                            .manufacturerOrgId("MANUFACTURERORG-ID")
                                            .maxFirings(5)
                                            .notes("Example notes")
                                            .nozzleExpansionRatio(1.1)
                                            .origin("THIRD_PARTY_DATASOURCE")
                                            .origNetwork("OPS1")
                                            .oxidizer("Liquid Oxygen")
                                            .propellant("Liquid")
                                            .seaLevelThrust(1.1)
                                            .specificImpulse(1.1)
                                            .addTag("PROVIDER_TAG1")
                                            .addTag("PROVIDER_TAG2")
                                            .updatedAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .updatedBy("some.user")
                                            .vacuumThrust(1.1)
                                            .build()
                                    )
                                    .origin("THIRD_PARTY_DATASOURCE")
                                    .origNetwork("OPS1")
                                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .updatedBy("some.user")
                                    .build()
                            )
                            .origin("THIRD_PARTY_DATASOURCE")
                            .origNetwork("OPS1")
                            .quantity(10)
                            .type("Hydrazine REA")
                            .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .updatedBy("some.user")
                            .build()
                    )
                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .updatedBy("some.user")
                    .build()
            )
        assertThat(ephemerisSet.origin()).contains("THIRD_PARTY_DATASOURCE")
        assertThat(ephemerisSet.origNetwork()).contains("OPS1")
        assertThat(ephemerisSet.origObjectId()).contains("ORIGOBJECT-ID")
        assertThat(ephemerisSet.pedigree()).contains("PROPAGATED")
        assertThat(ephemerisSet.referenceFrame()).contains(EphemerisSet.ReferenceFrame.J2000)
        assertThat(ephemerisSet.satNo()).contains(2)
        assertThat(ephemerisSet.solidEarthTides()).contains(false)
        assertThat(ephemerisSet.stateVector())
            .contains(
                StateVectorFull.builder()
                    .classificationMarking("U")
                    .dataMode(StateVectorFull.DataMode.TEST)
                    .epoch(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                    .source("Bluestaq")
                    .actualOdSpan(3.5)
                    .algorithm("SAMPLE_ALGORITHM")
                    .alt1ReferenceFrame("TEME")
                    .alt2ReferenceFrame("EFG/TDR")
                    .area(5.065)
                    .bDot(1.23)
                    .cmOffset(1.23)
                    .cov(listOf(1.1, 2.4, 3.8, 4.2, 5.5, 6.0))
                    .covMethod("CALCULATED")
                    .covReferenceFrame(StateVectorFull.CovReferenceFrame.J2000)
                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .descriptor("descriptor")
                    .dragArea(4.739)
                    .dragCoeff(0.0224391269775)
                    .dragModel("JAC70")
                    .edr(1.23)
                    .effectiveFrom(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .effectiveUntil(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .addEqCov(1.1)
                    .addEqCov(2.2)
                    .errorControl(1.23)
                    .fixedStep(true)
                    .geopotentialModel("EGM-96")
                    .iau1980Terms(4)
                    .idOnOrbit("ONORBIT-ID")
                    .idOrbitDetermination("026dd511-8ba5-47d3-9909-836149f87686")
                    .idStateVector("STATEVECTOR-ID")
                    .integratorMode("integratorMode")
                    .inTrackThrust(true)
                    .lastObEnd(OffsetDateTime.parse("2022-11-09T11:20:21.247192Z"))
                    .lastObStart(OffsetDateTime.parse("2022-11-09T11:20:21.247192Z"))
                    .leapSecondTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
                    .lunarSolar(true)
                    .mass(164.5)
                    .msgTs(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                    .obsAvailable(376)
                    .obsUsed(374)
                    .onOrbit(
                        OnorbitFull.builder()
                            .classificationMarking("U")
                            .dataMode(OnorbitFull.DataMode.TEST)
                            .satNo(1)
                            .source("Bluestaq")
                            .altName("Alternate Name")
                            .addAntenna(
                                OnorbitAntennaFull.builder()
                                    .classificationMarking("U")
                                    .dataMode(OnorbitAntennaFull.DataMode.TEST)
                                    .idAntenna("ANTENNA-ID")
                                    .idOnOrbit("ONORBIT-ID")
                                    .source("Bluestaq")
                                    .id("ONORBITANTENNA-ID")
                                    .antenna(
                                        AntennaFull.builder()
                                            .dataMode(AntennaFull.DataMode.TEST)
                                            .name("IRIDIUM NEXT 121-ANTENNA-10075")
                                            .source("Bluestaq")
                                            .id("ANTENNA-ID")
                                            .addAntennaDetail(
                                                AntennaDetailsFull.builder()
                                                    .classificationMarking("U")
                                                    .dataMode(AntennaDetailsFull.DataMode.TEST)
                                                    .idAntenna("ANTENNA-ID")
                                                    .source("Bluestaq")
                                                    .id("ANTENNADETAILS-ID")
                                                    .beamForming(false)
                                                    .beamwidth(14.1)
                                                    .createdAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .createdBy("some.user")
                                                    .description("Description of antenna A")
                                                    .diameter(0.01)
                                                    .endFrequency(3.3)
                                                    .gain(20.1)
                                                    .gainTolerance(5.1)
                                                    .manufacturerOrg(
                                                        OrganizationFull.builder()
                                                            .classificationMarking("U")
                                                            .dataMode(
                                                                OrganizationFull.DataMode.TEST
                                                            )
                                                            .name("some.user")
                                                            .source("some.user")
                                                            .type("GOVERNMENT")
                                                            .id("ORGANIZATION-ID")
                                                            .active(false)
                                                            .category("Private company")
                                                            .countryCode("US")
                                                            .createdAt(
                                                                OffsetDateTime.parse(
                                                                    "2018-01-01T16:00:00.123Z"
                                                                )
                                                            )
                                                            .createdBy("some.user")
                                                            .description("Example description")
                                                            .externalId("EXTERNAL-ID")
                                                            .nationality("US")
                                                            .addOrganizationDetail(
                                                                OrganizationDetailsFull.builder()
                                                                    .classificationMarking("U")
                                                                    .dataMode(
                                                                        OrganizationDetailsFull
                                                                            .DataMode
                                                                            .TEST
                                                                    )
                                                                    .idOrganization(
                                                                        "ORGANIZATION-ID"
                                                                    )
                                                                    .name("some.user")
                                                                    .source("some.user")
                                                                    .id("ORGANIZATIONDETAILS-ID")
                                                                    .address1("123 Main Street")
                                                                    .address2("Apt 4B")
                                                                    .address3(
                                                                        "Colorado Springs CO, 80903"
                                                                    )
                                                                    .broker("some.user")
                                                                    .ceo("some.user")
                                                                    .cfo("some.user")
                                                                    .createdAt(
                                                                        OffsetDateTime.parse(
                                                                            "2018-01-01T16:00:00.123Z"
                                                                        )
                                                                    )
                                                                    .createdBy("some.user")
                                                                    .cto("some.user")
                                                                    .description(
                                                                        "Example description"
                                                                    )
                                                                    .ebitda(123.4)
                                                                    .email(
                                                                        "some_organization@organization.com"
                                                                    )
                                                                    .financialNotes("Example notes")
                                                                    .financialYearEndDate(
                                                                        OffsetDateTime.parse(
                                                                            "2021-01-01T01:01:01.123Z"
                                                                        )
                                                                    )
                                                                    .fleetPlanNotes("Example notes")
                                                                    .formerOrgId("FORMERORG-ID")
                                                                    .ftes(123)
                                                                    .geoAdminLevel1("Colorado")
                                                                    .geoAdminLevel2(
                                                                        "El Paso County"
                                                                    )
                                                                    .geoAdminLevel3(
                                                                        "Colorado Springs"
                                                                    )
                                                                    .massRanking(123)
                                                                    .origin("some.user")
                                                                    .origNetwork("OPS1")
                                                                    .parentOrgId("PARENTORG-ID")
                                                                    .postalCode("80903")
                                                                    .profit(123.4)
                                                                    .revenue(123.4)
                                                                    .revenueRanking(123)
                                                                    .riskManager("some.user")
                                                                    .servicesNotes("Example notes")
                                                                    .addTag("PROVIDER_TAG1")
                                                                    .addTag("PROVIDER_TAG2")
                                                                    .updatedAt(
                                                                        OffsetDateTime.parse(
                                                                            "2018-01-01T16:00:00.123Z"
                                                                        )
                                                                    )
                                                                    .updatedBy("some.user")
                                                                    .build()
                                                            )
                                                            .origin("some.user")
                                                            .origNetwork("OPS1")
                                                            .updatedAt(
                                                                OffsetDateTime.parse(
                                                                    "2018-01-01T16:00:00.123Z"
                                                                )
                                                            )
                                                            .updatedBy("some.user")
                                                            .build()
                                                    )
                                                    .manufacturerOrgId("MANUFACTUREORG-ID")
                                                    .mode(AntennaDetailsFull.Mode.TX)
                                                    .origin("THIRD_PARTY_DATASOURCE")
                                                    .origNetwork("OPS1")
                                                    .polarization(45.1)
                                                    .position("Top")
                                                    .addSize(0.03)
                                                    .addSize(0.05)
                                                    .startFrequency(2.1)
                                                    .steerable(false)
                                                    .addTag("PROVIDER_TAG1")
                                                    .addTag("PROVIDER_TAG2")
                                                    .type("Reflector")
                                                    .updatedAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .updatedBy("some.user")
                                                    .build()
                                            )
                                            .createdAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .createdBy("some.user")
                                            .origin("THIRD_PARTY_DATASOURCE")
                                            .origNetwork("OPS1")
                                            .updatedAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .updatedBy("some.user")
                                            .build()
                                    )
                                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .origin("THIRD_PARTY_DATASOURCE")
                                    .origNetwork("OPS1")
                                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .updatedBy("some.user")
                                    .build()
                            )
                            .addBattery(
                                OnorbitBatteryFull.builder()
                                    .classificationMarking("U")
                                    .dataMode(OnorbitBatteryFull.DataMode.TEST)
                                    .idBattery("BATTERY-ID")
                                    .idOnOrbit("ONORBIT-ID")
                                    .source("Bluestaq")
                                    .id("ONORBITBATTERY-ID")
                                    .battery(
                                        BatteryFull.builder()
                                            .dataMode(BatteryFull.DataMode.TEST)
                                            .name("JAK-BATTERY-1479")
                                            .source("Bluestaq")
                                            .id("BATTERY-ID")
                                            .addBatteryDetail(
                                                BatterydetailsFull.builder()
                                                    .classificationMarking("U")
                                                    .dataMode(BatterydetailsFull.DataMode.TEST)
                                                    .idBattery("BATTERY-ID")
                                                    .source("Bluestaq")
                                                    .id("BATTERYDETAILS-ID")
                                                    .capacity(10.1)
                                                    .createdAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .createdBy("some.user")
                                                    .description("example notes")
                                                    .dischargeDepth(0.2)
                                                    .manufacturerOrg(
                                                        OrganizationFull.builder()
                                                            .classificationMarking("U")
                                                            .dataMode(
                                                                OrganizationFull.DataMode.TEST
                                                            )
                                                            .name("some.user")
                                                            .source("some.user")
                                                            .type("GOVERNMENT")
                                                            .id("ORGANIZATION-ID")
                                                            .active(false)
                                                            .category("Private company")
                                                            .countryCode("US")
                                                            .createdAt(
                                                                OffsetDateTime.parse(
                                                                    "2018-01-01T16:00:00.123Z"
                                                                )
                                                            )
                                                            .createdBy("some.user")
                                                            .description("Example description")
                                                            .externalId("EXTERNAL-ID")
                                                            .nationality("US")
                                                            .addOrganizationDetail(
                                                                OrganizationDetailsFull.builder()
                                                                    .classificationMarking("U")
                                                                    .dataMode(
                                                                        OrganizationDetailsFull
                                                                            .DataMode
                                                                            .TEST
                                                                    )
                                                                    .idOrganization(
                                                                        "ORGANIZATION-ID"
                                                                    )
                                                                    .name("some.user")
                                                                    .source("some.user")
                                                                    .id("ORGANIZATIONDETAILS-ID")
                                                                    .address1("123 Main Street")
                                                                    .address2("Apt 4B")
                                                                    .address3(
                                                                        "Colorado Springs CO, 80903"
                                                                    )
                                                                    .broker("some.user")
                                                                    .ceo("some.user")
                                                                    .cfo("some.user")
                                                                    .createdAt(
                                                                        OffsetDateTime.parse(
                                                                            "2018-01-01T16:00:00.123Z"
                                                                        )
                                                                    )
                                                                    .createdBy("some.user")
                                                                    .cto("some.user")
                                                                    .description(
                                                                        "Example description"
                                                                    )
                                                                    .ebitda(123.4)
                                                                    .email(
                                                                        "some_organization@organization.com"
                                                                    )
                                                                    .financialNotes("Example notes")
                                                                    .financialYearEndDate(
                                                                        OffsetDateTime.parse(
                                                                            "2021-01-01T01:01:01.123Z"
                                                                        )
                                                                    )
                                                                    .fleetPlanNotes("Example notes")
                                                                    .formerOrgId("FORMERORG-ID")
                                                                    .ftes(123)
                                                                    .geoAdminLevel1("Colorado")
                                                                    .geoAdminLevel2(
                                                                        "El Paso County"
                                                                    )
                                                                    .geoAdminLevel3(
                                                                        "Colorado Springs"
                                                                    )
                                                                    .massRanking(123)
                                                                    .origin("some.user")
                                                                    .origNetwork("OPS1")
                                                                    .parentOrgId("PARENTORG-ID")
                                                                    .postalCode("80903")
                                                                    .profit(123.4)
                                                                    .revenue(123.4)
                                                                    .revenueRanking(123)
                                                                    .riskManager("some.user")
                                                                    .servicesNotes("Example notes")
                                                                    .addTag("PROVIDER_TAG1")
                                                                    .addTag("PROVIDER_TAG2")
                                                                    .updatedAt(
                                                                        OffsetDateTime.parse(
                                                                            "2018-01-01T16:00:00.123Z"
                                                                        )
                                                                    )
                                                                    .updatedBy("some.user")
                                                                    .build()
                                                            )
                                                            .origin("some.user")
                                                            .origNetwork("OPS1")
                                                            .updatedAt(
                                                                OffsetDateTime.parse(
                                                                    "2018-01-01T16:00:00.123Z"
                                                                )
                                                            )
                                                            .updatedBy("some.user")
                                                            .build()
                                                    )
                                                    .manufacturerOrgId("MANUFACTURERORG-ID")
                                                    .model("11212")
                                                    .origin("THIRD_PARTY_DATASOURCE")
                                                    .origNetwork("OPS1")
                                                    .addTag("PROVIDER_TAG1")
                                                    .addTag("PROVIDER_TAG2")
                                                    .technology("Ni-Cd")
                                                    .updatedAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .updatedBy("some.user")
                                                    .build()
                                            )
                                            .createdAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .createdBy("some.user")
                                            .origin("THIRD_PARTY_DATASOURCE")
                                            .origNetwork("OPS1")
                                            .updatedAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .updatedBy("some.user")
                                            .build()
                                    )
                                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .origin("THIRD_PARTY_DATASOURCE")
                                    .origNetwork("OPS1")
                                    .quantity(5)
                                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .updatedBy("some.user")
                                    .build()
                            )
                            .category(OnorbitFull.Category.LUNAR)
                            .commonName("Example common name")
                            .constellation("Big Dipper")
                            .countryCode("US")
                            .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .createdBy("some.user")
                            .decayDate(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .addEntityCollection(
                                OnorbitFull.EntityCollection.builder()
                                    .classificationMarking("U")
                                    .dataMode(OnorbitFull.EntityCollection.DataMode.TEST)
                                    .name("Example name")
                                    .source("Bluestaq")
                                    .type(OnorbitFull.EntityCollection.Type.ONORBIT)
                                    .countryCode("US")
                                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .idEntity("ENTITY-ID")
                                    .idLocation("LOCATION-ID")
                                    .idOnOrbit("ONORBIT-ID")
                                    .idOperatingUnit("OPERATINGUNIT-ID")
                                    .location(
                                        LocationFull.builder()
                                            .classificationMarking("U")
                                            .dataMode(LocationFull.DataMode.TEST)
                                            .name("Example location")
                                            .source("Bluestaq")
                                            .altitude(10.23)
                                            .countryCode("US")
                                            .createdAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .createdBy("some.user")
                                            .idLocation("LOCATION-ID")
                                            .lat(45.23)
                                            .lon(179.1)
                                            .origin("THIRD_PARTY_DATASOURCE")
                                            .origNetwork("OPS1")
                                            .updatedAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .updatedBy("some.user")
                                            .build()
                                    )
                                    .operatingUnit(
                                        OperatingunitFull.builder()
                                            .classificationMarking("U")
                                            .dataMode(OperatingunitFull.DataMode.TEST)
                                            .name("SOME_NAME")
                                            .source("some.user")
                                            .airDefArea("AL006")
                                            .allegiance("OTHR")
                                            .altAllegiance("HL")
                                            .altCountryCode("IZ")
                                            .altOperatingUnitId("32100000000021")
                                            .classRating("1")
                                            .condition("RDY")
                                            .conditionAvail("A")
                                            .coord("340000000N0430000000E")
                                            .coordDatum("WGS")
                                            .coordDerivAcc(12.345)
                                            .countryCode("IQ")
                                            .createdAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .createdBy("some.user")
                                            .deployStatus("ND")
                                            .description("Description of unit")
                                            .divCat("5")
                                            .echelon("SHIP")
                                            .echelonTier("68")
                                            .elevMsl(123.45)
                                            .elevMslConfLvl(50)
                                            .elevMslDerivAcc(12.34)
                                            .eval(7)
                                            .flagFlown("IZ")
                                            .fleetId("A")
                                            .force("NV")
                                            .forceName("FORCE-NAME")
                                            .fpa("EOB")
                                            .functRole("MIL")
                                            .geoidalMslSep(12.34)
                                            .idContact("CONTACT-ID")
                                            .ident("FRIEND")
                                            .idLocation("LOCATION-ID")
                                            .idOperatingUnit("OPERATINGUNIT-ID")
                                            .idOrganization("ORGANIZATION-ID")
                                            .lat(45.23)
                                            .location(
                                                LocationFull.builder()
                                                    .classificationMarking("U")
                                                    .dataMode(LocationFull.DataMode.TEST)
                                                    .name("Example location")
                                                    .source("Bluestaq")
                                                    .altitude(10.23)
                                                    .countryCode("US")
                                                    .createdAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .createdBy("some.user")
                                                    .idLocation("LOCATION-ID")
                                                    .lat(45.23)
                                                    .lon(179.1)
                                                    .origin("THIRD_PARTY_DATASOURCE")
                                                    .origNetwork("OPS1")
                                                    .updatedAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .updatedBy("some.user")
                                                    .build()
                                            )
                                            .locName("LOCATION_NAME")
                                            .locReason("GR")
                                            .lon(179.1)
                                            .masterUnit(true)
                                            .milGrid("4QFJ12345678")
                                            .milGridSys("UTM")
                                            .msnPrimary("W6")
                                            .msnPrimarySpecialty("QK")
                                            .addOperatingUnitRemark(
                                                OperatingUnitRemarkFull.builder()
                                                    .classificationMarking("U")
                                                    .dataMode(OperatingUnitRemarkFull.DataMode.TEST)
                                                    .idOperatingUnit("OperatingUnit-ID")
                                                    .source("some.user")
                                                    .text("This is a remark")
                                                    .id("0167f577-e06c-358e-85aa-0a07a730bdd0")
                                                    .altRmkId("123456ABC")
                                                    .code("M")
                                                    .createdAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .createdBy("some.user")
                                                    .name("Remark name")
                                                    .origin("THIRD_PARTY_DATASOURCE")
                                                    .type("Restriction")
                                                    .updatedAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .updatedBy("some.user")
                                                    .build()
                                            )
                                            .operStatus("OPR")
                                            .organization(
                                                OrganizationFull.builder()
                                                    .classificationMarking("U")
                                                    .dataMode(OrganizationFull.DataMode.TEST)
                                                    .name("some.user")
                                                    .source("some.user")
                                                    .type("GOVERNMENT")
                                                    .id("ORGANIZATION-ID")
                                                    .active(false)
                                                    .category("Private company")
                                                    .countryCode("US")
                                                    .createdAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .createdBy("some.user")
                                                    .description("Example description")
                                                    .externalId("EXTERNAL-ID")
                                                    .nationality("US")
                                                    .addOrganizationDetail(
                                                        OrganizationDetailsFull.builder()
                                                            .classificationMarking("U")
                                                            .dataMode(
                                                                OrganizationDetailsFull.DataMode
                                                                    .TEST
                                                            )
                                                            .idOrganization("ORGANIZATION-ID")
                                                            .name("some.user")
                                                            .source("some.user")
                                                            .id("ORGANIZATIONDETAILS-ID")
                                                            .address1("123 Main Street")
                                                            .address2("Apt 4B")
                                                            .address3("Colorado Springs CO, 80903")
                                                            .broker("some.user")
                                                            .ceo("some.user")
                                                            .cfo("some.user")
                                                            .createdAt(
                                                                OffsetDateTime.parse(
                                                                    "2018-01-01T16:00:00.123Z"
                                                                )
                                                            )
                                                            .createdBy("some.user")
                                                            .cto("some.user")
                                                            .description("Example description")
                                                            .ebitda(123.4)
                                                            .email(
                                                                "some_organization@organization.com"
                                                            )
                                                            .financialNotes("Example notes")
                                                            .financialYearEndDate(
                                                                OffsetDateTime.parse(
                                                                    "2021-01-01T01:01:01.123Z"
                                                                )
                                                            )
                                                            .fleetPlanNotes("Example notes")
                                                            .formerOrgId("FORMERORG-ID")
                                                            .ftes(123)
                                                            .geoAdminLevel1("Colorado")
                                                            .geoAdminLevel2("El Paso County")
                                                            .geoAdminLevel3("Colorado Springs")
                                                            .massRanking(123)
                                                            .origin("some.user")
                                                            .origNetwork("OPS1")
                                                            .parentOrgId("PARENTORG-ID")
                                                            .postalCode("80903")
                                                            .profit(123.4)
                                                            .revenue(123.4)
                                                            .revenueRanking(123)
                                                            .riskManager("some.user")
                                                            .servicesNotes("Example notes")
                                                            .addTag("PROVIDER_TAG1")
                                                            .addTag("PROVIDER_TAG2")
                                                            .updatedAt(
                                                                OffsetDateTime.parse(
                                                                    "2018-01-01T16:00:00.123Z"
                                                                )
                                                            )
                                                            .updatedBy("some.user")
                                                            .build()
                                                    )
                                                    .origin("some.user")
                                                    .origNetwork("OPS1")
                                                    .updatedAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .updatedBy("some.user")
                                                    .build()
                                            )
                                            .origin("THIRD_PARTY_DATASOURCE")
                                            .polSubdiv("IZ07")
                                            .recStatus("A")
                                            .referenceDoc("Provider Reference Documentation")
                                            .resProd("RT")
                                            .reviewDate(LocalDate.parse("2008-06-10"))
                                            .stylizedUnit(true)
                                            .symCode("SOGPU----------")
                                            .unitIdentifier("AZXAZ12345")
                                            .updatedAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .updatedBy("some.user")
                                            .utm("19P4390691376966")
                                            .wac("0427")
                                            .build()
                                    )
                                    .origin("THIRD_PARTY_DATASOURCE")
                                    .origNetwork("OPS1")
                                    .ownerType(OnorbitFull.EntityCollection.OwnerType.COMMERCIAL)
                                    .addRfBand(
                                        RfBandFull.builder()
                                            .classificationMarking("U")
                                            .dataMode(RfBandFull.DataMode.TEST)
                                            .idEntity("ENTITY-ID")
                                            .name("BAND_NAME")
                                            .source("Bluestaq")
                                            .id("ad88770b-d824-443f-bdce-5f9e3fa500a9")
                                            .band("Ku")
                                            .bandwidth(100.23)
                                            .addBandwidthSetting(250.1)
                                            .addBandwidthSetting(500.1)
                                            .beamwidth(45.23)
                                            .addBeamwidthSetting(5.1)
                                            .addBeamwidthSetting(10.1)
                                            .centerFreq(1000.23)
                                            .createdAt(
                                                OffsetDateTime.parse("2025-03-05T16:00:00.123Z")
                                            )
                                            .createdBy("some.user")
                                            .addDelaySetting(2.77)
                                            .addDelaySetting(5.64)
                                            .edgeGain(100.23)
                                            .eirp(2.23)
                                            .erp(2.23)
                                            .freqMax(2000.23)
                                            .freqMin(50.23)
                                            .addFrequencySetting(12250.1)
                                            .addFrequencySetting(15000.1)
                                            .addGainSetting(2.77)
                                            .addGainSetting(5.64)
                                            .mode(RfBandFull.Mode.TX)
                                            .addNoiseSetting(0.00033)
                                            .addNoiseSetting(0.0033)
                                            .origin("THIRD_PARTY_DATASOURCE")
                                            .origNetwork("OPS1")
                                            .peakGain(120.23)
                                            .polarization(RfBandFull.Polarization.H)
                                            .purpose(RfBandFull.Purpose.TTC)
                                            .updatedAt(
                                                OffsetDateTime.parse("2025-03-05T16:00:00.123Z")
                                            )
                                            .updatedBy("some.user")
                                            .build()
                                    )
                                    .addStatusCollection(
                                        StatusFull.builder()
                                            .classificationMarking("U")
                                            .dataMode(StatusFull.DataMode.TEST)
                                            .idEntity("ENTITY-ID")
                                            .source("Bluestaq")
                                            .id("STATUS-ID")
                                            .createdAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .createdBy("some.user")
                                            .declassificationDate(
                                                OffsetDateTime.parse("2021-01-01T01:02:02.123Z")
                                            )
                                            .declassificationString("U")
                                            .derivedFrom("SOME_SOURCE")
                                            .notes("Example Notes")
                                            .opsCap(StatusFull.OpsCap.FMC)
                                            .origin("THIRD_PARTY_DATASOURCE")
                                            .origNetwork("OPS1")
                                            .state(StatusFull.State.ACTIVE)
                                            .addSubStatusCollection(
                                                SubStatusFull.builder()
                                                    .classificationMarking("U")
                                                    .dataMode(SubStatusFull.DataMode.TEST)
                                                    .notes("Sample Notes")
                                                    .source("Bluestaq")
                                                    .status(SubStatusFull.Status.FMC)
                                                    .statusId("REF-STATUS-ID")
                                                    .type(SubStatusFull.Type.MD_CAP)
                                                    .id("SUBSTATUS-ID")
                                                    .createdAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .createdBy("some.user")
                                                    .origin("THIRD_PARTY_DATASOURCE")
                                                    .origNetwork("OPS1")
                                                    .updatedAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .updatedBy("some.user")
                                                    .build()
                                            )
                                            .sysCap(StatusFull.SysCap.FMC)
                                            .updatedAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .updatedBy("some.user")
                                            .build()
                                    )
                                    .taskable(false)
                                    .terrestrialId("TERRESTRIAL-ID")
                                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .updatedBy("some.user")
                                    .addUrl("URL1")
                                    .addUrl("URL2")
                                    .build()
                            )
                            .idOnOrbit("ONORBIT-ID")
                            .intlDes("2021123ABC")
                            .launchDate(LocalDate.parse("2018-01-01"))
                            .launchSiteId("LAUNCHSITE-ID")
                            .lifetimeYears(10)
                            .missionNumber("Expedition 1")
                            .objectType(OnorbitFull.ObjectType.PAYLOAD)
                            .addOnorbitDetail(
                                OnorbitDetailsFull.builder()
                                    .classificationMarking("U")
                                    .dataMode(OnorbitDetailsFull.DataMode.TEST)
                                    .idOnOrbit("REF-ONORBIT-ID")
                                    .source("Bluestaq")
                                    .id("ONORBITDETAILS-ID")
                                    .additionalMass(10.23)
                                    .adeptRadius(10.23)
                                    .bolDeltaV(1000.1)
                                    .bolFuelMass(10.23)
                                    .busCrossSection(10.23)
                                    .busType("A2100")
                                    .colaRadius(10.23)
                                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .crossSection(10.23)
                                    .currentMass(500.0)
                                    .deltaVUnc(50.1)
                                    .addDepEstMass(20.0)
                                    .addDepEstMass(21.0)
                                    .addDepMassUnc(10.0)
                                    .addDepMassUnc(5.0)
                                    .addDepName("GOES-18A")
                                    .addDepName("GOES-18B")
                                    .driftRate(1.23)
                                    .dryMass(10.23)
                                    .estDeltaVDuration(10.23)
                                    .fuelRemaining(10.23)
                                    .geoSlot(90.23)
                                    .lastObSource("THIRD_PARTY_DATASOURCE")
                                    .lastObTime(OffsetDateTime.parse("2021-01-01T01:01:01.123456Z"))
                                    .launchMass(10.23)
                                    .launchMassMax(15.23)
                                    .launchMassMin(5.23)
                                    .maneuverable(false)
                                    .maxDeltaV(10.23)
                                    .maxRadius(10.23)
                                    .addMissionType("Weather")
                                    .addMissionType("Space Weather")
                                    .numDeployable(2)
                                    .numMission(2)
                                    .origin("THIRD_PARTY_DATASOURCE")
                                    .origNetwork("OPS1")
                                    .rcs(10.23)
                                    .rcsMax(15.23)
                                    .rcsMean(10.23)
                                    .rcsMin(5.23)
                                    .refSource("Wikipedia")
                                    .solarArrayArea(10.23)
                                    .totalMassUnc(50.1)
                                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .updatedBy("some.user")
                                    .vismag(10.23)
                                    .vismagMax(15.23)
                                    .vismagMean(10.23)
                                    .vismagMin(5.23)
                                    .build()
                            )
                            .origin("THIRD_PARTY_DATASOURCE")
                            .origNetwork("OPS1")
                            .addSolarArray(
                                OnorbitSolarArrayFull.builder()
                                    .classificationMarking("U")
                                    .dataMode(OnorbitSolarArrayFull.DataMode.TEST)
                                    .idOnOrbit("ONORBIT-ID")
                                    .idSolarArray("SOLARARRAY-ID")
                                    .source("Bluestaq")
                                    .id("ONORBITSOLARARRAY-ID")
                                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .origin("THIRD_PARTY_DATASOURCE")
                                    .origNetwork("OPS1")
                                    .quantity(10)
                                    .solarArray(
                                        SolarArrayFull.builder()
                                            .dataMode(SolarArrayFull.DataMode.TEST)
                                            .name("Solar1")
                                            .source("Bluestaq")
                                            .id("SOLARARRAY-ID")
                                            .createdAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .createdBy("some.user")
                                            .origin("THIRD_PARTY_DATASOURCE")
                                            .origNetwork("OPS1")
                                            .addSolarArrayDetail(
                                                SolarArrayDetailsFull.builder()
                                                    .classificationMarking("U")
                                                    .dataMode(SolarArrayDetailsFull.DataMode.TEST)
                                                    .idSolarArray("SOLARARRAY-ID")
                                                    .source("Bluestaq")
                                                    .id("SOLARARRAYDETAILS-ID")
                                                    .area(123.4)
                                                    .createdAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .createdBy("some.user")
                                                    .description("Example notes")
                                                    .junctionTechnology("Triple")
                                                    .manufacturerOrg(
                                                        OrganizationFull.builder()
                                                            .classificationMarking("U")
                                                            .dataMode(
                                                                OrganizationFull.DataMode.TEST
                                                            )
                                                            .name("some.user")
                                                            .source("some.user")
                                                            .type("GOVERNMENT")
                                                            .id("ORGANIZATION-ID")
                                                            .active(false)
                                                            .category("Private company")
                                                            .countryCode("US")
                                                            .createdAt(
                                                                OffsetDateTime.parse(
                                                                    "2018-01-01T16:00:00.123Z"
                                                                )
                                                            )
                                                            .createdBy("some.user")
                                                            .description("Example description")
                                                            .externalId("EXTERNAL-ID")
                                                            .nationality("US")
                                                            .addOrganizationDetail(
                                                                OrganizationDetailsFull.builder()
                                                                    .classificationMarking("U")
                                                                    .dataMode(
                                                                        OrganizationDetailsFull
                                                                            .DataMode
                                                                            .TEST
                                                                    )
                                                                    .idOrganization(
                                                                        "ORGANIZATION-ID"
                                                                    )
                                                                    .name("some.user")
                                                                    .source("some.user")
                                                                    .id("ORGANIZATIONDETAILS-ID")
                                                                    .address1("123 Main Street")
                                                                    .address2("Apt 4B")
                                                                    .address3(
                                                                        "Colorado Springs CO, 80903"
                                                                    )
                                                                    .broker("some.user")
                                                                    .ceo("some.user")
                                                                    .cfo("some.user")
                                                                    .createdAt(
                                                                        OffsetDateTime.parse(
                                                                            "2018-01-01T16:00:00.123Z"
                                                                        )
                                                                    )
                                                                    .createdBy("some.user")
                                                                    .cto("some.user")
                                                                    .description(
                                                                        "Example description"
                                                                    )
                                                                    .ebitda(123.4)
                                                                    .email(
                                                                        "some_organization@organization.com"
                                                                    )
                                                                    .financialNotes("Example notes")
                                                                    .financialYearEndDate(
                                                                        OffsetDateTime.parse(
                                                                            "2021-01-01T01:01:01.123Z"
                                                                        )
                                                                    )
                                                                    .fleetPlanNotes("Example notes")
                                                                    .formerOrgId("FORMERORG-ID")
                                                                    .ftes(123)
                                                                    .geoAdminLevel1("Colorado")
                                                                    .geoAdminLevel2(
                                                                        "El Paso County"
                                                                    )
                                                                    .geoAdminLevel3(
                                                                        "Colorado Springs"
                                                                    )
                                                                    .massRanking(123)
                                                                    .origin("some.user")
                                                                    .origNetwork("OPS1")
                                                                    .parentOrgId("PARENTORG-ID")
                                                                    .postalCode("80903")
                                                                    .profit(123.4)
                                                                    .revenue(123.4)
                                                                    .revenueRanking(123)
                                                                    .riskManager("some.user")
                                                                    .servicesNotes("Example notes")
                                                                    .addTag("PROVIDER_TAG1")
                                                                    .addTag("PROVIDER_TAG2")
                                                                    .updatedAt(
                                                                        OffsetDateTime.parse(
                                                                            "2018-01-01T16:00:00.123Z"
                                                                        )
                                                                    )
                                                                    .updatedBy("some.user")
                                                                    .build()
                                                            )
                                                            .origin("some.user")
                                                            .origNetwork("OPS1")
                                                            .updatedAt(
                                                                OffsetDateTime.parse(
                                                                    "2018-01-01T16:00:00.123Z"
                                                                )
                                                            )
                                                            .updatedBy("some.user")
                                                            .build()
                                                    )
                                                    .manufacturerOrgId("MANUFACTURERORG-ID")
                                                    .origin("THIRD_PARTY_DATASOURCE")
                                                    .origNetwork("OPS1")
                                                    .span(123.4)
                                                    .addTag("TAG1")
                                                    .addTag("TAG2")
                                                    .technology("Ga-As")
                                                    .type("U Shaped")
                                                    .updatedAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .updatedBy("some.user")
                                                    .build()
                                            )
                                            .updatedAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .updatedBy("some.user")
                                            .build()
                                    )
                                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .updatedBy("some.user")
                                    .build()
                            )
                            .addThruster(
                                OnorbitThrusterFull.builder()
                                    .classificationMarking("U")
                                    .dataMode(OnorbitThrusterFull.DataMode.TEST)
                                    .idEngine("ENGINE-ID")
                                    .idOnOrbit("ONORBIT-ID")
                                    .source("Bluestaq")
                                    .id("ONORBITTHRUSTER-ID")
                                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .createdBy("some.user")
                                    .engine(
                                        Engine.builder()
                                            .classificationMarking("U")
                                            .dataMode(Engine.DataMode.TEST)
                                            .name("ENGINE_VARIANT1")
                                            .source("Bluestaq")
                                            .id("ENGINE-ID")
                                            .createdAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .createdBy("some.user")
                                            .addEngineDetail(
                                                EngineDetailsFull.builder()
                                                    .classificationMarking("U")
                                                    .dataMode(EngineDetailsFull.DataMode.TEST)
                                                    .idEngine("ENGINE-ID")
                                                    .source("Bluestaq")
                                                    .id("ENGINEDETAILS-ID")
                                                    .burnTime(1.1)
                                                    .chamberPressure(1.1)
                                                    .characteristicType("Electric")
                                                    .createdAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .createdBy("some.user")
                                                    .cycleType("Pressure Fed")
                                                    .family("ENGINE_TYPE1")
                                                    .manufacturerOrgId("MANUFACTURERORG-ID")
                                                    .maxFirings(5)
                                                    .notes("Example notes")
                                                    .nozzleExpansionRatio(1.1)
                                                    .origin("THIRD_PARTY_DATASOURCE")
                                                    .origNetwork("OPS1")
                                                    .oxidizer("Liquid Oxygen")
                                                    .propellant("Liquid")
                                                    .seaLevelThrust(1.1)
                                                    .specificImpulse(1.1)
                                                    .addTag("PROVIDER_TAG1")
                                                    .addTag("PROVIDER_TAG2")
                                                    .updatedAt(
                                                        OffsetDateTime.parse(
                                                            "2018-01-01T16:00:00.123Z"
                                                        )
                                                    )
                                                    .updatedBy("some.user")
                                                    .vacuumThrust(1.1)
                                                    .build()
                                            )
                                            .origin("THIRD_PARTY_DATASOURCE")
                                            .origNetwork("OPS1")
                                            .updatedAt(
                                                OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                            )
                                            .updatedBy("some.user")
                                            .build()
                                    )
                                    .origin("THIRD_PARTY_DATASOURCE")
                                    .origNetwork("OPS1")
                                    .quantity(10)
                                    .type("Hydrazine REA")
                                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .updatedBy("some.user")
                                    .build()
                            )
                            .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                            .updatedBy("some.user")
                            .build()
                    )
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("OPS1")
                    .origObjectId("ORIGOBJECT-ID")
                    .partials("ANALYTIC")
                    .pedigree("CONJUNCTION")
                    .polarMotionX(1.23)
                    .polarMotionY(1.23)
                    .posUnc(0.333399744452)
                    .rawFileUri("rawFileURI")
                    .recOdSpan(3.5)
                    .referenceFrame(StateVectorFull.ReferenceFrame.J2000)
                    .residualsAcc(99.5)
                    .revNo(7205)
                    .rms(0.991)
                    .satNo(12)
                    .addSigmaPosUvw(1.23)
                    .addSigmaPosUvw(4.56)
                    .addSigmaVelUvw(1.23)
                    .addSigmaVelUvw(4.56)
                    .solarFluxApAvg(1.23)
                    .solarFluxF10(1.23)
                    .solarFluxF10Avg(1.23)
                    .solarRadPress(true)
                    .solarRadPressCoeff(0.0244394)
                    .solidEarthTides(true)
                    .addSourcedData("DATA1")
                    .addSourcedData("DATA2")
                    .addSourcedDataType(StateVectorFull.SourcedDataType.RADAR)
                    .sourceDl("AXE")
                    .srpArea(4.311)
                    .stepMode("AUTO")
                    .stepSize(1.23)
                    .stepSizeSelection("AUTO")
                    .addTag("TAG1")
                    .addTag("TAG2")
                    .taiUtc(1.23)
                    .thrustAccel(1.23)
                    .tracksAvail(163)
                    .tracksUsed(163)
                    .transactionId("transactionId")
                    .uct(true)
                    .ut1Rate(1.23)
                    .ut1Utc(1.23)
                    .velUnc(0.000004)
                    .xaccel(-2.12621392)
                    .xpos(-1118.577381)
                    .xposAlt1(-1145.688502)
                    .xposAlt2(-1456.915926)
                    .xvel(-4.25242784)
                    .xvelAlt1(-4.270832252)
                    .xvelAlt2(-1.219814294)
                    .yaccel(2.645553717)
                    .ypos(3026.231084)
                    .yposAlt1(3020.729572)
                    .yposAlt2(-2883.540406)
                    .yvel(5.291107434)
                    .yvelAlt1(5.27074276)
                    .yvelAlt2(-6.602080212)
                    .zaccel(-1.06310696)
                    .zpos(6167.831808)
                    .zposAlt1(6165.55187)
                    .zposAlt2(6165.55187)
                    .zvel(-3.356493869)
                    .zvelAlt1(-3.365155181)
                    .zvelAlt2(-3.365155181)
                    .build()
            )
        assertThat(ephemerisSet.stepSize()).contains(1L)
        assertThat(ephemerisSet.tags().getOrNull())
            .containsExactly("PROVIDER_TAG1", "PROVIDER_TAG2")
        assertThat(ephemerisSet.transactionId()).contains("TRANSACTION-ID")
        assertThat(ephemerisSet.usableEndTime())
            .contains(OffsetDateTime.parse("2018-01-01T20:50:00.123456Z"))
        assertThat(ephemerisSet.usableStartTime())
            .contains(OffsetDateTime.parse("2018-01-01T16:10:00.123456Z"))
    }

    @Test
    fun roundtrip() {
        val jsonMapper = jsonMapper()
        val ephemerisSet =
            EphemerisSet.builder()
                .category("ANALYST")
                .classificationMarking("U")
                .dataMode(EphemerisSet.DataMode.TEST)
                .numPoints(1)
                .pointEndTime(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                .pointStartTime(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                .source("Bluestaq")
                .type("LAUNCH")
                .id("EPHEMERISSET-ID")
                .bDot(1.1)
                .centBody("Earth")
                .comments("Example notes")
                .covReferenceFrame(EphemerisSet.CovReferenceFrame.J2000)
                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                .createdBy("some.user")
                .description("Example notes")
                .descriptor("Example descriptor")
                .dragModel("JAC70")
                .edr(1.1)
                .addEphemerisList(
                    EphemerisFull.builder()
                        .classificationMarking("U")
                        .dataMode(EphemerisFull.DataMode.TEST)
                        .source("Bluestaq")
                        .ts(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                        .xpos(1.1)
                        .xvel(1.1)
                        .ypos(1.1)
                        .yvel(1.1)
                        .zpos(1.1)
                        .zvel(1.1)
                        .id("EPHEMERIS-ID")
                        .cov(listOf(1.1, 2.4, 3.8, 4.2, 5.5, 6.0))
                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .createdBy("some.user")
                        .esId("ES-ID")
                        .idOnOrbit("ONORBIT-ID")
                        .origin("THIRD_PARTY_DATASOURCE")
                        .origObjectId("ORIGOBJECT-ID")
                        .xaccel(1.1)
                        .yaccel(1.1)
                        .zaccel(1.1)
                        .build()
                )
                .filename("Example file name")
                .geopotentialModel("GEM-T3")
                .hasAccel(false)
                .hasCov(false)
                .hasMnvr(false)
                .addIdManeuver("EXAMPLE_ID1")
                .addIdManeuver("EXAMPLE_ID2")
                .idOnOrbit("ONORBIT-ID")
                .idStateVector("STATEVECTOR-ID")
                .integrator("COWELL")
                .interpolation("LINEAR")
                .interpolationDegree(5)
                .lunarSolar(false)
                .onOrbit(
                    OnorbitFull.builder()
                        .classificationMarking("U")
                        .dataMode(OnorbitFull.DataMode.TEST)
                        .satNo(1)
                        .source("Bluestaq")
                        .altName("Alternate Name")
                        .addAntenna(
                            OnorbitAntennaFull.builder()
                                .classificationMarking("U")
                                .dataMode(OnorbitAntennaFull.DataMode.TEST)
                                .idAntenna("ANTENNA-ID")
                                .idOnOrbit("ONORBIT-ID")
                                .source("Bluestaq")
                                .id("ONORBITANTENNA-ID")
                                .antenna(
                                    AntennaFull.builder()
                                        .dataMode(AntennaFull.DataMode.TEST)
                                        .name("IRIDIUM NEXT 121-ANTENNA-10075")
                                        .source("Bluestaq")
                                        .id("ANTENNA-ID")
                                        .addAntennaDetail(
                                            AntennaDetailsFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(AntennaDetailsFull.DataMode.TEST)
                                                .idAntenna("ANTENNA-ID")
                                                .source("Bluestaq")
                                                .id("ANTENNADETAILS-ID")
                                                .beamForming(false)
                                                .beamwidth(14.1)
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .description("Description of antenna A")
                                                .diameter(0.01)
                                                .endFrequency(3.3)
                                                .gain(20.1)
                                                .gainTolerance(5.1)
                                                .manufacturerOrg(
                                                    OrganizationFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(OrganizationFull.DataMode.TEST)
                                                        .name("some.user")
                                                        .source("some.user")
                                                        .type("GOVERNMENT")
                                                        .id("ORGANIZATION-ID")
                                                        .active(false)
                                                        .category("Private company")
                                                        .countryCode("US")
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .description("Example description")
                                                        .externalId("EXTERNAL-ID")
                                                        .nationality("US")
                                                        .addOrganizationDetail(
                                                            OrganizationDetailsFull.builder()
                                                                .classificationMarking("U")
                                                                .dataMode(
                                                                    OrganizationDetailsFull.DataMode
                                                                        .TEST
                                                                )
                                                                .idOrganization("ORGANIZATION-ID")
                                                                .name("some.user")
                                                                .source("some.user")
                                                                .id("ORGANIZATIONDETAILS-ID")
                                                                .address1("123 Main Street")
                                                                .address2("Apt 4B")
                                                                .address3(
                                                                    "Colorado Springs CO, 80903"
                                                                )
                                                                .broker("some.user")
                                                                .ceo("some.user")
                                                                .cfo("some.user")
                                                                .createdAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .createdBy("some.user")
                                                                .cto("some.user")
                                                                .description("Example description")
                                                                .ebitda(123.4)
                                                                .email(
                                                                    "some_organization@organization.com"
                                                                )
                                                                .financialNotes("Example notes")
                                                                .financialYearEndDate(
                                                                    OffsetDateTime.parse(
                                                                        "2021-01-01T01:01:01.123Z"
                                                                    )
                                                                )
                                                                .fleetPlanNotes("Example notes")
                                                                .formerOrgId("FORMERORG-ID")
                                                                .ftes(123)
                                                                .geoAdminLevel1("Colorado")
                                                                .geoAdminLevel2("El Paso County")
                                                                .geoAdminLevel3("Colorado Springs")
                                                                .massRanking(123)
                                                                .origin("some.user")
                                                                .origNetwork("OPS1")
                                                                .parentOrgId("PARENTORG-ID")
                                                                .postalCode("80903")
                                                                .profit(123.4)
                                                                .revenue(123.4)
                                                                .revenueRanking(123)
                                                                .riskManager("some.user")
                                                                .servicesNotes("Example notes")
                                                                .addTag("PROVIDER_TAG1")
                                                                .addTag("PROVIDER_TAG2")
                                                                .updatedAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .updatedBy("some.user")
                                                                .build()
                                                        )
                                                        .origin("some.user")
                                                        .origNetwork("OPS1")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .manufacturerOrgId("MANUFACTUREORG-ID")
                                                .mode(AntennaDetailsFull.Mode.TX)
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .polarization(45.1)
                                                .position("Top")
                                                .addSize(0.03)
                                                .addSize(0.05)
                                                .startFrequency(2.1)
                                                .steerable(false)
                                                .addTag("PROVIDER_TAG1")
                                                .addTag("PROVIDER_TAG2")
                                                .type("Reflector")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .build()
                        )
                        .addBattery(
                            OnorbitBatteryFull.builder()
                                .classificationMarking("U")
                                .dataMode(OnorbitBatteryFull.DataMode.TEST)
                                .idBattery("BATTERY-ID")
                                .idOnOrbit("ONORBIT-ID")
                                .source("Bluestaq")
                                .id("ONORBITBATTERY-ID")
                                .battery(
                                    BatteryFull.builder()
                                        .dataMode(BatteryFull.DataMode.TEST)
                                        .name("JAK-BATTERY-1479")
                                        .source("Bluestaq")
                                        .id("BATTERY-ID")
                                        .addBatteryDetail(
                                            BatterydetailsFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(BatterydetailsFull.DataMode.TEST)
                                                .idBattery("BATTERY-ID")
                                                .source("Bluestaq")
                                                .id("BATTERYDETAILS-ID")
                                                .capacity(10.1)
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .description("example notes")
                                                .dischargeDepth(0.2)
                                                .manufacturerOrg(
                                                    OrganizationFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(OrganizationFull.DataMode.TEST)
                                                        .name("some.user")
                                                        .source("some.user")
                                                        .type("GOVERNMENT")
                                                        .id("ORGANIZATION-ID")
                                                        .active(false)
                                                        .category("Private company")
                                                        .countryCode("US")
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .description("Example description")
                                                        .externalId("EXTERNAL-ID")
                                                        .nationality("US")
                                                        .addOrganizationDetail(
                                                            OrganizationDetailsFull.builder()
                                                                .classificationMarking("U")
                                                                .dataMode(
                                                                    OrganizationDetailsFull.DataMode
                                                                        .TEST
                                                                )
                                                                .idOrganization("ORGANIZATION-ID")
                                                                .name("some.user")
                                                                .source("some.user")
                                                                .id("ORGANIZATIONDETAILS-ID")
                                                                .address1("123 Main Street")
                                                                .address2("Apt 4B")
                                                                .address3(
                                                                    "Colorado Springs CO, 80903"
                                                                )
                                                                .broker("some.user")
                                                                .ceo("some.user")
                                                                .cfo("some.user")
                                                                .createdAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .createdBy("some.user")
                                                                .cto("some.user")
                                                                .description("Example description")
                                                                .ebitda(123.4)
                                                                .email(
                                                                    "some_organization@organization.com"
                                                                )
                                                                .financialNotes("Example notes")
                                                                .financialYearEndDate(
                                                                    OffsetDateTime.parse(
                                                                        "2021-01-01T01:01:01.123Z"
                                                                    )
                                                                )
                                                                .fleetPlanNotes("Example notes")
                                                                .formerOrgId("FORMERORG-ID")
                                                                .ftes(123)
                                                                .geoAdminLevel1("Colorado")
                                                                .geoAdminLevel2("El Paso County")
                                                                .geoAdminLevel3("Colorado Springs")
                                                                .massRanking(123)
                                                                .origin("some.user")
                                                                .origNetwork("OPS1")
                                                                .parentOrgId("PARENTORG-ID")
                                                                .postalCode("80903")
                                                                .profit(123.4)
                                                                .revenue(123.4)
                                                                .revenueRanking(123)
                                                                .riskManager("some.user")
                                                                .servicesNotes("Example notes")
                                                                .addTag("PROVIDER_TAG1")
                                                                .addTag("PROVIDER_TAG2")
                                                                .updatedAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .updatedBy("some.user")
                                                                .build()
                                                        )
                                                        .origin("some.user")
                                                        .origNetwork("OPS1")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .manufacturerOrgId("MANUFACTURERORG-ID")
                                                .model("11212")
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .addTag("PROVIDER_TAG1")
                                                .addTag("PROVIDER_TAG2")
                                                .technology("Ni-Cd")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .quantity(5)
                                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .build()
                        )
                        .category(OnorbitFull.Category.LUNAR)
                        .commonName("Example common name")
                        .constellation("Big Dipper")
                        .countryCode("US")
                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .createdBy("some.user")
                        .decayDate(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .addEntityCollection(
                            OnorbitFull.EntityCollection.builder()
                                .classificationMarking("U")
                                .dataMode(OnorbitFull.EntityCollection.DataMode.TEST)
                                .name("Example name")
                                .source("Bluestaq")
                                .type(OnorbitFull.EntityCollection.Type.ONORBIT)
                                .countryCode("US")
                                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .idEntity("ENTITY-ID")
                                .idLocation("LOCATION-ID")
                                .idOnOrbit("ONORBIT-ID")
                                .idOperatingUnit("OPERATINGUNIT-ID")
                                .location(
                                    LocationFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(LocationFull.DataMode.TEST)
                                        .name("Example location")
                                        .source("Bluestaq")
                                        .altitude(10.23)
                                        .countryCode("US")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .idLocation("LOCATION-ID")
                                        .lat(45.23)
                                        .lon(179.1)
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .operatingUnit(
                                    OperatingunitFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OperatingunitFull.DataMode.TEST)
                                        .name("SOME_NAME")
                                        .source("some.user")
                                        .airDefArea("AL006")
                                        .allegiance("OTHR")
                                        .altAllegiance("HL")
                                        .altCountryCode("IZ")
                                        .altOperatingUnitId("32100000000021")
                                        .classRating("1")
                                        .condition("RDY")
                                        .conditionAvail("A")
                                        .coord("340000000N0430000000E")
                                        .coordDatum("WGS")
                                        .coordDerivAcc(12.345)
                                        .countryCode("IQ")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .deployStatus("ND")
                                        .description("Description of unit")
                                        .divCat("5")
                                        .echelon("SHIP")
                                        .echelonTier("68")
                                        .elevMsl(123.45)
                                        .elevMslConfLvl(50)
                                        .elevMslDerivAcc(12.34)
                                        .eval(7)
                                        .flagFlown("IZ")
                                        .fleetId("A")
                                        .force("NV")
                                        .forceName("FORCE-NAME")
                                        .fpa("EOB")
                                        .functRole("MIL")
                                        .geoidalMslSep(12.34)
                                        .idContact("CONTACT-ID")
                                        .ident("FRIEND")
                                        .idLocation("LOCATION-ID")
                                        .idOperatingUnit("OPERATINGUNIT-ID")
                                        .idOrganization("ORGANIZATION-ID")
                                        .lat(45.23)
                                        .location(
                                            LocationFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(LocationFull.DataMode.TEST)
                                                .name("Example location")
                                                .source("Bluestaq")
                                                .altitude(10.23)
                                                .countryCode("US")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .idLocation("LOCATION-ID")
                                                .lat(45.23)
                                                .lon(179.1)
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .locName("LOCATION_NAME")
                                        .locReason("GR")
                                        .lon(179.1)
                                        .masterUnit(true)
                                        .milGrid("4QFJ12345678")
                                        .milGridSys("UTM")
                                        .msnPrimary("W6")
                                        .msnPrimarySpecialty("QK")
                                        .addOperatingUnitRemark(
                                            OperatingUnitRemarkFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(OperatingUnitRemarkFull.DataMode.TEST)
                                                .idOperatingUnit("OperatingUnit-ID")
                                                .source("some.user")
                                                .text("This is a remark")
                                                .id("0167f577-e06c-358e-85aa-0a07a730bdd0")
                                                .altRmkId("123456ABC")
                                                .code("M")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .name("Remark name")
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .type("Restriction")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .operStatus("OPR")
                                        .organization(
                                            OrganizationFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(OrganizationFull.DataMode.TEST)
                                                .name("some.user")
                                                .source("some.user")
                                                .type("GOVERNMENT")
                                                .id("ORGANIZATION-ID")
                                                .active(false)
                                                .category("Private company")
                                                .countryCode("US")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .description("Example description")
                                                .externalId("EXTERNAL-ID")
                                                .nationality("US")
                                                .addOrganizationDetail(
                                                    OrganizationDetailsFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(
                                                            OrganizationDetailsFull.DataMode.TEST
                                                        )
                                                        .idOrganization("ORGANIZATION-ID")
                                                        .name("some.user")
                                                        .source("some.user")
                                                        .id("ORGANIZATIONDETAILS-ID")
                                                        .address1("123 Main Street")
                                                        .address2("Apt 4B")
                                                        .address3("Colorado Springs CO, 80903")
                                                        .broker("some.user")
                                                        .ceo("some.user")
                                                        .cfo("some.user")
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .cto("some.user")
                                                        .description("Example description")
                                                        .ebitda(123.4)
                                                        .email("some_organization@organization.com")
                                                        .financialNotes("Example notes")
                                                        .financialYearEndDate(
                                                            OffsetDateTime.parse(
                                                                "2021-01-01T01:01:01.123Z"
                                                            )
                                                        )
                                                        .fleetPlanNotes("Example notes")
                                                        .formerOrgId("FORMERORG-ID")
                                                        .ftes(123)
                                                        .geoAdminLevel1("Colorado")
                                                        .geoAdminLevel2("El Paso County")
                                                        .geoAdminLevel3("Colorado Springs")
                                                        .massRanking(123)
                                                        .origin("some.user")
                                                        .origNetwork("OPS1")
                                                        .parentOrgId("PARENTORG-ID")
                                                        .postalCode("80903")
                                                        .profit(123.4)
                                                        .revenue(123.4)
                                                        .revenueRanking(123)
                                                        .riskManager("some.user")
                                                        .servicesNotes("Example notes")
                                                        .addTag("PROVIDER_TAG1")
                                                        .addTag("PROVIDER_TAG2")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .origin("some.user")
                                                .origNetwork("OPS1")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .polSubdiv("IZ07")
                                        .recStatus("A")
                                        .referenceDoc("Provider Reference Documentation")
                                        .resProd("RT")
                                        .reviewDate(LocalDate.parse("2008-06-10"))
                                        .stylizedUnit(true)
                                        .symCode("SOGPU----------")
                                        .unitIdentifier("AZXAZ12345")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .utm("19P4390691376966")
                                        .wac("0427")
                                        .build()
                                )
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .ownerType(OnorbitFull.EntityCollection.OwnerType.COMMERCIAL)
                                .addRfBand(
                                    RfBandFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(RfBandFull.DataMode.TEST)
                                        .idEntity("ENTITY-ID")
                                        .name("BAND_NAME")
                                        .source("Bluestaq")
                                        .id("ad88770b-d824-443f-bdce-5f9e3fa500a9")
                                        .band("Ku")
                                        .bandwidth(100.23)
                                        .addBandwidthSetting(250.1)
                                        .addBandwidthSetting(500.1)
                                        .beamwidth(45.23)
                                        .addBeamwidthSetting(5.1)
                                        .addBeamwidthSetting(10.1)
                                        .centerFreq(1000.23)
                                        .createdAt(OffsetDateTime.parse("2025-03-05T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .addDelaySetting(2.77)
                                        .addDelaySetting(5.64)
                                        .edgeGain(100.23)
                                        .eirp(2.23)
                                        .erp(2.23)
                                        .freqMax(2000.23)
                                        .freqMin(50.23)
                                        .addFrequencySetting(12250.1)
                                        .addFrequencySetting(15000.1)
                                        .addGainSetting(2.77)
                                        .addGainSetting(5.64)
                                        .mode(RfBandFull.Mode.TX)
                                        .addNoiseSetting(0.00033)
                                        .addNoiseSetting(0.0033)
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .peakGain(120.23)
                                        .polarization(RfBandFull.Polarization.H)
                                        .purpose(RfBandFull.Purpose.TTC)
                                        .updatedAt(OffsetDateTime.parse("2025-03-05T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .addStatusCollection(
                                    StatusFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(StatusFull.DataMode.TEST)
                                        .idEntity("ENTITY-ID")
                                        .source("Bluestaq")
                                        .id("STATUS-ID")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .declassificationDate(
                                            OffsetDateTime.parse("2021-01-01T01:02:02.123Z")
                                        )
                                        .declassificationString("U")
                                        .derivedFrom("SOME_SOURCE")
                                        .notes("Example Notes")
                                        .opsCap(StatusFull.OpsCap.FMC)
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .state(StatusFull.State.ACTIVE)
                                        .addSubStatusCollection(
                                            SubStatusFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(SubStatusFull.DataMode.TEST)
                                                .notes("Sample Notes")
                                                .source("Bluestaq")
                                                .status(SubStatusFull.Status.FMC)
                                                .statusId("REF-STATUS-ID")
                                                .type(SubStatusFull.Type.MD_CAP)
                                                .id("SUBSTATUS-ID")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .sysCap(StatusFull.SysCap.FMC)
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .taskable(false)
                                .terrestrialId("TERRESTRIAL-ID")
                                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .addUrl("URL1")
                                .addUrl("URL2")
                                .build()
                        )
                        .idOnOrbit("ONORBIT-ID")
                        .intlDes("2021123ABC")
                        .launchDate(LocalDate.parse("2018-01-01"))
                        .launchSiteId("LAUNCHSITE-ID")
                        .lifetimeYears(10)
                        .missionNumber("Expedition 1")
                        .objectType(OnorbitFull.ObjectType.PAYLOAD)
                        .addOnorbitDetail(
                            OnorbitDetailsFull.builder()
                                .classificationMarking("U")
                                .dataMode(OnorbitDetailsFull.DataMode.TEST)
                                .idOnOrbit("REF-ONORBIT-ID")
                                .source("Bluestaq")
                                .id("ONORBITDETAILS-ID")
                                .additionalMass(10.23)
                                .adeptRadius(10.23)
                                .bolDeltaV(1000.1)
                                .bolFuelMass(10.23)
                                .busCrossSection(10.23)
                                .busType("A2100")
                                .colaRadius(10.23)
                                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .crossSection(10.23)
                                .currentMass(500.0)
                                .deltaVUnc(50.1)
                                .addDepEstMass(20.0)
                                .addDepEstMass(21.0)
                                .addDepMassUnc(10.0)
                                .addDepMassUnc(5.0)
                                .addDepName("GOES-18A")
                                .addDepName("GOES-18B")
                                .driftRate(1.23)
                                .dryMass(10.23)
                                .estDeltaVDuration(10.23)
                                .fuelRemaining(10.23)
                                .geoSlot(90.23)
                                .lastObSource("THIRD_PARTY_DATASOURCE")
                                .lastObTime(OffsetDateTime.parse("2021-01-01T01:01:01.123456Z"))
                                .launchMass(10.23)
                                .launchMassMax(15.23)
                                .launchMassMin(5.23)
                                .maneuverable(false)
                                .maxDeltaV(10.23)
                                .maxRadius(10.23)
                                .addMissionType("Weather")
                                .addMissionType("Space Weather")
                                .numDeployable(2)
                                .numMission(2)
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .rcs(10.23)
                                .rcsMax(15.23)
                                .rcsMean(10.23)
                                .rcsMin(5.23)
                                .refSource("Wikipedia")
                                .solarArrayArea(10.23)
                                .totalMassUnc(50.1)
                                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .vismag(10.23)
                                .vismagMax(15.23)
                                .vismagMean(10.23)
                                .vismagMin(5.23)
                                .build()
                        )
                        .origin("THIRD_PARTY_DATASOURCE")
                        .origNetwork("OPS1")
                        .addSolarArray(
                            OnorbitSolarArrayFull.builder()
                                .classificationMarking("U")
                                .dataMode(OnorbitSolarArrayFull.DataMode.TEST)
                                .idOnOrbit("ONORBIT-ID")
                                .idSolarArray("SOLARARRAY-ID")
                                .source("Bluestaq")
                                .id("ONORBITSOLARARRAY-ID")
                                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .quantity(10)
                                .solarArray(
                                    SolarArrayFull.builder()
                                        .dataMode(SolarArrayFull.DataMode.TEST)
                                        .name("Solar1")
                                        .source("Bluestaq")
                                        .id("SOLARARRAY-ID")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .addSolarArrayDetail(
                                            SolarArrayDetailsFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(SolarArrayDetailsFull.DataMode.TEST)
                                                .idSolarArray("SOLARARRAY-ID")
                                                .source("Bluestaq")
                                                .id("SOLARARRAYDETAILS-ID")
                                                .area(123.4)
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .description("Example notes")
                                                .junctionTechnology("Triple")
                                                .manufacturerOrg(
                                                    OrganizationFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(OrganizationFull.DataMode.TEST)
                                                        .name("some.user")
                                                        .source("some.user")
                                                        .type("GOVERNMENT")
                                                        .id("ORGANIZATION-ID")
                                                        .active(false)
                                                        .category("Private company")
                                                        .countryCode("US")
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .description("Example description")
                                                        .externalId("EXTERNAL-ID")
                                                        .nationality("US")
                                                        .addOrganizationDetail(
                                                            OrganizationDetailsFull.builder()
                                                                .classificationMarking("U")
                                                                .dataMode(
                                                                    OrganizationDetailsFull.DataMode
                                                                        .TEST
                                                                )
                                                                .idOrganization("ORGANIZATION-ID")
                                                                .name("some.user")
                                                                .source("some.user")
                                                                .id("ORGANIZATIONDETAILS-ID")
                                                                .address1("123 Main Street")
                                                                .address2("Apt 4B")
                                                                .address3(
                                                                    "Colorado Springs CO, 80903"
                                                                )
                                                                .broker("some.user")
                                                                .ceo("some.user")
                                                                .cfo("some.user")
                                                                .createdAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .createdBy("some.user")
                                                                .cto("some.user")
                                                                .description("Example description")
                                                                .ebitda(123.4)
                                                                .email(
                                                                    "some_organization@organization.com"
                                                                )
                                                                .financialNotes("Example notes")
                                                                .financialYearEndDate(
                                                                    OffsetDateTime.parse(
                                                                        "2021-01-01T01:01:01.123Z"
                                                                    )
                                                                )
                                                                .fleetPlanNotes("Example notes")
                                                                .formerOrgId("FORMERORG-ID")
                                                                .ftes(123)
                                                                .geoAdminLevel1("Colorado")
                                                                .geoAdminLevel2("El Paso County")
                                                                .geoAdminLevel3("Colorado Springs")
                                                                .massRanking(123)
                                                                .origin("some.user")
                                                                .origNetwork("OPS1")
                                                                .parentOrgId("PARENTORG-ID")
                                                                .postalCode("80903")
                                                                .profit(123.4)
                                                                .revenue(123.4)
                                                                .revenueRanking(123)
                                                                .riskManager("some.user")
                                                                .servicesNotes("Example notes")
                                                                .addTag("PROVIDER_TAG1")
                                                                .addTag("PROVIDER_TAG2")
                                                                .updatedAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .updatedBy("some.user")
                                                                .build()
                                                        )
                                                        .origin("some.user")
                                                        .origNetwork("OPS1")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .manufacturerOrgId("MANUFACTURERORG-ID")
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .span(123.4)
                                                .addTag("TAG1")
                                                .addTag("TAG2")
                                                .technology("Ga-As")
                                                .type("U Shaped")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .build()
                        )
                        .addThruster(
                            OnorbitThrusterFull.builder()
                                .classificationMarking("U")
                                .dataMode(OnorbitThrusterFull.DataMode.TEST)
                                .idEngine("ENGINE-ID")
                                .idOnOrbit("ONORBIT-ID")
                                .source("Bluestaq")
                                .id("ONORBITTHRUSTER-ID")
                                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .engine(
                                    Engine.builder()
                                        .classificationMarking("U")
                                        .dataMode(Engine.DataMode.TEST)
                                        .name("ENGINE_VARIANT1")
                                        .source("Bluestaq")
                                        .id("ENGINE-ID")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .addEngineDetail(
                                            EngineDetailsFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(EngineDetailsFull.DataMode.TEST)
                                                .idEngine("ENGINE-ID")
                                                .source("Bluestaq")
                                                .id("ENGINEDETAILS-ID")
                                                .burnTime(1.1)
                                                .chamberPressure(1.1)
                                                .characteristicType("Electric")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .cycleType("Pressure Fed")
                                                .family("ENGINE_TYPE1")
                                                .manufacturerOrgId("MANUFACTURERORG-ID")
                                                .maxFirings(5)
                                                .notes("Example notes")
                                                .nozzleExpansionRatio(1.1)
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .oxidizer("Liquid Oxygen")
                                                .propellant("Liquid")
                                                .seaLevelThrust(1.1)
                                                .specificImpulse(1.1)
                                                .addTag("PROVIDER_TAG1")
                                                .addTag("PROVIDER_TAG2")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .vacuumThrust(1.1)
                                                .build()
                                        )
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .quantity(10)
                                .type("Hydrazine REA")
                                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .build()
                        )
                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .updatedBy("some.user")
                        .build()
                )
                .origin("THIRD_PARTY_DATASOURCE")
                .origNetwork("OPS1")
                .origObjectId("ORIGOBJECT-ID")
                .pedigree("PROPAGATED")
                .referenceFrame(EphemerisSet.ReferenceFrame.J2000)
                .satNo(2)
                .solidEarthTides(false)
                .stateVector(
                    StateVectorFull.builder()
                        .classificationMarking("U")
                        .dataMode(StateVectorFull.DataMode.TEST)
                        .epoch(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                        .source("Bluestaq")
                        .actualOdSpan(3.5)
                        .algorithm("SAMPLE_ALGORITHM")
                        .alt1ReferenceFrame("TEME")
                        .alt2ReferenceFrame("EFG/TDR")
                        .area(5.065)
                        .bDot(1.23)
                        .cmOffset(1.23)
                        .cov(listOf(1.1, 2.4, 3.8, 4.2, 5.5, 6.0))
                        .covMethod("CALCULATED")
                        .covReferenceFrame(StateVectorFull.CovReferenceFrame.J2000)
                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .createdBy("some.user")
                        .descriptor("descriptor")
                        .dragArea(4.739)
                        .dragCoeff(0.0224391269775)
                        .dragModel("JAC70")
                        .edr(1.23)
                        .effectiveFrom(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .effectiveUntil(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .addEqCov(1.1)
                        .addEqCov(2.2)
                        .errorControl(1.23)
                        .fixedStep(true)
                        .geopotentialModel("EGM-96")
                        .iau1980Terms(4)
                        .idOnOrbit("ONORBIT-ID")
                        .idOrbitDetermination("026dd511-8ba5-47d3-9909-836149f87686")
                        .idStateVector("STATEVECTOR-ID")
                        .integratorMode("integratorMode")
                        .inTrackThrust(true)
                        .lastObEnd(OffsetDateTime.parse("2022-11-09T11:20:21.247192Z"))
                        .lastObStart(OffsetDateTime.parse("2022-11-09T11:20:21.247192Z"))
                        .leapSecondTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
                        .lunarSolar(true)
                        .mass(164.5)
                        .msgTs(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                        .obsAvailable(376)
                        .obsUsed(374)
                        .onOrbit(
                            OnorbitFull.builder()
                                .classificationMarking("U")
                                .dataMode(OnorbitFull.DataMode.TEST)
                                .satNo(1)
                                .source("Bluestaq")
                                .altName("Alternate Name")
                                .addAntenna(
                                    OnorbitAntennaFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OnorbitAntennaFull.DataMode.TEST)
                                        .idAntenna("ANTENNA-ID")
                                        .idOnOrbit("ONORBIT-ID")
                                        .source("Bluestaq")
                                        .id("ONORBITANTENNA-ID")
                                        .antenna(
                                            AntennaFull.builder()
                                                .dataMode(AntennaFull.DataMode.TEST)
                                                .name("IRIDIUM NEXT 121-ANTENNA-10075")
                                                .source("Bluestaq")
                                                .id("ANTENNA-ID")
                                                .addAntennaDetail(
                                                    AntennaDetailsFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(AntennaDetailsFull.DataMode.TEST)
                                                        .idAntenna("ANTENNA-ID")
                                                        .source("Bluestaq")
                                                        .id("ANTENNADETAILS-ID")
                                                        .beamForming(false)
                                                        .beamwidth(14.1)
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .description("Description of antenna A")
                                                        .diameter(0.01)
                                                        .endFrequency(3.3)
                                                        .gain(20.1)
                                                        .gainTolerance(5.1)
                                                        .manufacturerOrg(
                                                            OrganizationFull.builder()
                                                                .classificationMarking("U")
                                                                .dataMode(
                                                                    OrganizationFull.DataMode.TEST
                                                                )
                                                                .name("some.user")
                                                                .source("some.user")
                                                                .type("GOVERNMENT")
                                                                .id("ORGANIZATION-ID")
                                                                .active(false)
                                                                .category("Private company")
                                                                .countryCode("US")
                                                                .createdAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .createdBy("some.user")
                                                                .description("Example description")
                                                                .externalId("EXTERNAL-ID")
                                                                .nationality("US")
                                                                .addOrganizationDetail(
                                                                    OrganizationDetailsFull
                                                                        .builder()
                                                                        .classificationMarking("U")
                                                                        .dataMode(
                                                                            OrganizationDetailsFull
                                                                                .DataMode
                                                                                .TEST
                                                                        )
                                                                        .idOrganization(
                                                                            "ORGANIZATION-ID"
                                                                        )
                                                                        .name("some.user")
                                                                        .source("some.user")
                                                                        .id(
                                                                            "ORGANIZATIONDETAILS-ID"
                                                                        )
                                                                        .address1("123 Main Street")
                                                                        .address2("Apt 4B")
                                                                        .address3(
                                                                            "Colorado Springs CO, 80903"
                                                                        )
                                                                        .broker("some.user")
                                                                        .ceo("some.user")
                                                                        .cfo("some.user")
                                                                        .createdAt(
                                                                            OffsetDateTime.parse(
                                                                                "2018-01-01T16:00:00.123Z"
                                                                            )
                                                                        )
                                                                        .createdBy("some.user")
                                                                        .cto("some.user")
                                                                        .description(
                                                                            "Example description"
                                                                        )
                                                                        .ebitda(123.4)
                                                                        .email(
                                                                            "some_organization@organization.com"
                                                                        )
                                                                        .financialNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .financialYearEndDate(
                                                                            OffsetDateTime.parse(
                                                                                "2021-01-01T01:01:01.123Z"
                                                                            )
                                                                        )
                                                                        .fleetPlanNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .formerOrgId("FORMERORG-ID")
                                                                        .ftes(123)
                                                                        .geoAdminLevel1("Colorado")
                                                                        .geoAdminLevel2(
                                                                            "El Paso County"
                                                                        )
                                                                        .geoAdminLevel3(
                                                                            "Colorado Springs"
                                                                        )
                                                                        .massRanking(123)
                                                                        .origin("some.user")
                                                                        .origNetwork("OPS1")
                                                                        .parentOrgId("PARENTORG-ID")
                                                                        .postalCode("80903")
                                                                        .profit(123.4)
                                                                        .revenue(123.4)
                                                                        .revenueRanking(123)
                                                                        .riskManager("some.user")
                                                                        .servicesNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .addTag("PROVIDER_TAG1")
                                                                        .addTag("PROVIDER_TAG2")
                                                                        .updatedAt(
                                                                            OffsetDateTime.parse(
                                                                                "2018-01-01T16:00:00.123Z"
                                                                            )
                                                                        )
                                                                        .updatedBy("some.user")
                                                                        .build()
                                                                )
                                                                .origin("some.user")
                                                                .origNetwork("OPS1")
                                                                .updatedAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .updatedBy("some.user")
                                                                .build()
                                                        )
                                                        .manufacturerOrgId("MANUFACTUREORG-ID")
                                                        .mode(AntennaDetailsFull.Mode.TX)
                                                        .origin("THIRD_PARTY_DATASOURCE")
                                                        .origNetwork("OPS1")
                                                        .polarization(45.1)
                                                        .position("Top")
                                                        .addSize(0.03)
                                                        .addSize(0.05)
                                                        .startFrequency(2.1)
                                                        .steerable(false)
                                                        .addTag("PROVIDER_TAG1")
                                                        .addTag("PROVIDER_TAG2")
                                                        .type("Reflector")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .addBattery(
                                    OnorbitBatteryFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OnorbitBatteryFull.DataMode.TEST)
                                        .idBattery("BATTERY-ID")
                                        .idOnOrbit("ONORBIT-ID")
                                        .source("Bluestaq")
                                        .id("ONORBITBATTERY-ID")
                                        .battery(
                                            BatteryFull.builder()
                                                .dataMode(BatteryFull.DataMode.TEST)
                                                .name("JAK-BATTERY-1479")
                                                .source("Bluestaq")
                                                .id("BATTERY-ID")
                                                .addBatteryDetail(
                                                    BatterydetailsFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(BatterydetailsFull.DataMode.TEST)
                                                        .idBattery("BATTERY-ID")
                                                        .source("Bluestaq")
                                                        .id("BATTERYDETAILS-ID")
                                                        .capacity(10.1)
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .description("example notes")
                                                        .dischargeDepth(0.2)
                                                        .manufacturerOrg(
                                                            OrganizationFull.builder()
                                                                .classificationMarking("U")
                                                                .dataMode(
                                                                    OrganizationFull.DataMode.TEST
                                                                )
                                                                .name("some.user")
                                                                .source("some.user")
                                                                .type("GOVERNMENT")
                                                                .id("ORGANIZATION-ID")
                                                                .active(false)
                                                                .category("Private company")
                                                                .countryCode("US")
                                                                .createdAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .createdBy("some.user")
                                                                .description("Example description")
                                                                .externalId("EXTERNAL-ID")
                                                                .nationality("US")
                                                                .addOrganizationDetail(
                                                                    OrganizationDetailsFull
                                                                        .builder()
                                                                        .classificationMarking("U")
                                                                        .dataMode(
                                                                            OrganizationDetailsFull
                                                                                .DataMode
                                                                                .TEST
                                                                        )
                                                                        .idOrganization(
                                                                            "ORGANIZATION-ID"
                                                                        )
                                                                        .name("some.user")
                                                                        .source("some.user")
                                                                        .id(
                                                                            "ORGANIZATIONDETAILS-ID"
                                                                        )
                                                                        .address1("123 Main Street")
                                                                        .address2("Apt 4B")
                                                                        .address3(
                                                                            "Colorado Springs CO, 80903"
                                                                        )
                                                                        .broker("some.user")
                                                                        .ceo("some.user")
                                                                        .cfo("some.user")
                                                                        .createdAt(
                                                                            OffsetDateTime.parse(
                                                                                "2018-01-01T16:00:00.123Z"
                                                                            )
                                                                        )
                                                                        .createdBy("some.user")
                                                                        .cto("some.user")
                                                                        .description(
                                                                            "Example description"
                                                                        )
                                                                        .ebitda(123.4)
                                                                        .email(
                                                                            "some_organization@organization.com"
                                                                        )
                                                                        .financialNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .financialYearEndDate(
                                                                            OffsetDateTime.parse(
                                                                                "2021-01-01T01:01:01.123Z"
                                                                            )
                                                                        )
                                                                        .fleetPlanNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .formerOrgId("FORMERORG-ID")
                                                                        .ftes(123)
                                                                        .geoAdminLevel1("Colorado")
                                                                        .geoAdminLevel2(
                                                                            "El Paso County"
                                                                        )
                                                                        .geoAdminLevel3(
                                                                            "Colorado Springs"
                                                                        )
                                                                        .massRanking(123)
                                                                        .origin("some.user")
                                                                        .origNetwork("OPS1")
                                                                        .parentOrgId("PARENTORG-ID")
                                                                        .postalCode("80903")
                                                                        .profit(123.4)
                                                                        .revenue(123.4)
                                                                        .revenueRanking(123)
                                                                        .riskManager("some.user")
                                                                        .servicesNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .addTag("PROVIDER_TAG1")
                                                                        .addTag("PROVIDER_TAG2")
                                                                        .updatedAt(
                                                                            OffsetDateTime.parse(
                                                                                "2018-01-01T16:00:00.123Z"
                                                                            )
                                                                        )
                                                                        .updatedBy("some.user")
                                                                        .build()
                                                                )
                                                                .origin("some.user")
                                                                .origNetwork("OPS1")
                                                                .updatedAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .updatedBy("some.user")
                                                                .build()
                                                        )
                                                        .manufacturerOrgId("MANUFACTURERORG-ID")
                                                        .model("11212")
                                                        .origin("THIRD_PARTY_DATASOURCE")
                                                        .origNetwork("OPS1")
                                                        .addTag("PROVIDER_TAG1")
                                                        .addTag("PROVIDER_TAG2")
                                                        .technology("Ni-Cd")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .quantity(5)
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .category(OnorbitFull.Category.LUNAR)
                                .commonName("Example common name")
                                .constellation("Big Dipper")
                                .countryCode("US")
                                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .createdBy("some.user")
                                .decayDate(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .addEntityCollection(
                                    OnorbitFull.EntityCollection.builder()
                                        .classificationMarking("U")
                                        .dataMode(OnorbitFull.EntityCollection.DataMode.TEST)
                                        .name("Example name")
                                        .source("Bluestaq")
                                        .type(OnorbitFull.EntityCollection.Type.ONORBIT)
                                        .countryCode("US")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .idEntity("ENTITY-ID")
                                        .idLocation("LOCATION-ID")
                                        .idOnOrbit("ONORBIT-ID")
                                        .idOperatingUnit("OPERATINGUNIT-ID")
                                        .location(
                                            LocationFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(LocationFull.DataMode.TEST)
                                                .name("Example location")
                                                .source("Bluestaq")
                                                .altitude(10.23)
                                                .countryCode("US")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .idLocation("LOCATION-ID")
                                                .lat(45.23)
                                                .lon(179.1)
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .operatingUnit(
                                            OperatingunitFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(OperatingunitFull.DataMode.TEST)
                                                .name("SOME_NAME")
                                                .source("some.user")
                                                .airDefArea("AL006")
                                                .allegiance("OTHR")
                                                .altAllegiance("HL")
                                                .altCountryCode("IZ")
                                                .altOperatingUnitId("32100000000021")
                                                .classRating("1")
                                                .condition("RDY")
                                                .conditionAvail("A")
                                                .coord("340000000N0430000000E")
                                                .coordDatum("WGS")
                                                .coordDerivAcc(12.345)
                                                .countryCode("IQ")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .deployStatus("ND")
                                                .description("Description of unit")
                                                .divCat("5")
                                                .echelon("SHIP")
                                                .echelonTier("68")
                                                .elevMsl(123.45)
                                                .elevMslConfLvl(50)
                                                .elevMslDerivAcc(12.34)
                                                .eval(7)
                                                .flagFlown("IZ")
                                                .fleetId("A")
                                                .force("NV")
                                                .forceName("FORCE-NAME")
                                                .fpa("EOB")
                                                .functRole("MIL")
                                                .geoidalMslSep(12.34)
                                                .idContact("CONTACT-ID")
                                                .ident("FRIEND")
                                                .idLocation("LOCATION-ID")
                                                .idOperatingUnit("OPERATINGUNIT-ID")
                                                .idOrganization("ORGANIZATION-ID")
                                                .lat(45.23)
                                                .location(
                                                    LocationFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(LocationFull.DataMode.TEST)
                                                        .name("Example location")
                                                        .source("Bluestaq")
                                                        .altitude(10.23)
                                                        .countryCode("US")
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .idLocation("LOCATION-ID")
                                                        .lat(45.23)
                                                        .lon(179.1)
                                                        .origin("THIRD_PARTY_DATASOURCE")
                                                        .origNetwork("OPS1")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .locName("LOCATION_NAME")
                                                .locReason("GR")
                                                .lon(179.1)
                                                .masterUnit(true)
                                                .milGrid("4QFJ12345678")
                                                .milGridSys("UTM")
                                                .msnPrimary("W6")
                                                .msnPrimarySpecialty("QK")
                                                .addOperatingUnitRemark(
                                                    OperatingUnitRemarkFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(
                                                            OperatingUnitRemarkFull.DataMode.TEST
                                                        )
                                                        .idOperatingUnit("OperatingUnit-ID")
                                                        .source("some.user")
                                                        .text("This is a remark")
                                                        .id("0167f577-e06c-358e-85aa-0a07a730bdd0")
                                                        .altRmkId("123456ABC")
                                                        .code("M")
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .name("Remark name")
                                                        .origin("THIRD_PARTY_DATASOURCE")
                                                        .type("Restriction")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .operStatus("OPR")
                                                .organization(
                                                    OrganizationFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(OrganizationFull.DataMode.TEST)
                                                        .name("some.user")
                                                        .source("some.user")
                                                        .type("GOVERNMENT")
                                                        .id("ORGANIZATION-ID")
                                                        .active(false)
                                                        .category("Private company")
                                                        .countryCode("US")
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .description("Example description")
                                                        .externalId("EXTERNAL-ID")
                                                        .nationality("US")
                                                        .addOrganizationDetail(
                                                            OrganizationDetailsFull.builder()
                                                                .classificationMarking("U")
                                                                .dataMode(
                                                                    OrganizationDetailsFull.DataMode
                                                                        .TEST
                                                                )
                                                                .idOrganization("ORGANIZATION-ID")
                                                                .name("some.user")
                                                                .source("some.user")
                                                                .id("ORGANIZATIONDETAILS-ID")
                                                                .address1("123 Main Street")
                                                                .address2("Apt 4B")
                                                                .address3(
                                                                    "Colorado Springs CO, 80903"
                                                                )
                                                                .broker("some.user")
                                                                .ceo("some.user")
                                                                .cfo("some.user")
                                                                .createdAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .createdBy("some.user")
                                                                .cto("some.user")
                                                                .description("Example description")
                                                                .ebitda(123.4)
                                                                .email(
                                                                    "some_organization@organization.com"
                                                                )
                                                                .financialNotes("Example notes")
                                                                .financialYearEndDate(
                                                                    OffsetDateTime.parse(
                                                                        "2021-01-01T01:01:01.123Z"
                                                                    )
                                                                )
                                                                .fleetPlanNotes("Example notes")
                                                                .formerOrgId("FORMERORG-ID")
                                                                .ftes(123)
                                                                .geoAdminLevel1("Colorado")
                                                                .geoAdminLevel2("El Paso County")
                                                                .geoAdminLevel3("Colorado Springs")
                                                                .massRanking(123)
                                                                .origin("some.user")
                                                                .origNetwork("OPS1")
                                                                .parentOrgId("PARENTORG-ID")
                                                                .postalCode("80903")
                                                                .profit(123.4)
                                                                .revenue(123.4)
                                                                .revenueRanking(123)
                                                                .riskManager("some.user")
                                                                .servicesNotes("Example notes")
                                                                .addTag("PROVIDER_TAG1")
                                                                .addTag("PROVIDER_TAG2")
                                                                .updatedAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .updatedBy("some.user")
                                                                .build()
                                                        )
                                                        .origin("some.user")
                                                        .origNetwork("OPS1")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .polSubdiv("IZ07")
                                                .recStatus("A")
                                                .referenceDoc("Provider Reference Documentation")
                                                .resProd("RT")
                                                .reviewDate(LocalDate.parse("2008-06-10"))
                                                .stylizedUnit(true)
                                                .symCode("SOGPU----------")
                                                .unitIdentifier("AZXAZ12345")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .utm("19P4390691376966")
                                                .wac("0427")
                                                .build()
                                        )
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .ownerType(
                                            OnorbitFull.EntityCollection.OwnerType.COMMERCIAL
                                        )
                                        .addRfBand(
                                            RfBandFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(RfBandFull.DataMode.TEST)
                                                .idEntity("ENTITY-ID")
                                                .name("BAND_NAME")
                                                .source("Bluestaq")
                                                .id("ad88770b-d824-443f-bdce-5f9e3fa500a9")
                                                .band("Ku")
                                                .bandwidth(100.23)
                                                .addBandwidthSetting(250.1)
                                                .addBandwidthSetting(500.1)
                                                .beamwidth(45.23)
                                                .addBeamwidthSetting(5.1)
                                                .addBeamwidthSetting(10.1)
                                                .centerFreq(1000.23)
                                                .createdAt(
                                                    OffsetDateTime.parse("2025-03-05T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .addDelaySetting(2.77)
                                                .addDelaySetting(5.64)
                                                .edgeGain(100.23)
                                                .eirp(2.23)
                                                .erp(2.23)
                                                .freqMax(2000.23)
                                                .freqMin(50.23)
                                                .addFrequencySetting(12250.1)
                                                .addFrequencySetting(15000.1)
                                                .addGainSetting(2.77)
                                                .addGainSetting(5.64)
                                                .mode(RfBandFull.Mode.TX)
                                                .addNoiseSetting(0.00033)
                                                .addNoiseSetting(0.0033)
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .peakGain(120.23)
                                                .polarization(RfBandFull.Polarization.H)
                                                .purpose(RfBandFull.Purpose.TTC)
                                                .updatedAt(
                                                    OffsetDateTime.parse("2025-03-05T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .addStatusCollection(
                                            StatusFull.builder()
                                                .classificationMarking("U")
                                                .dataMode(StatusFull.DataMode.TEST)
                                                .idEntity("ENTITY-ID")
                                                .source("Bluestaq")
                                                .id("STATUS-ID")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .declassificationDate(
                                                    OffsetDateTime.parse("2021-01-01T01:02:02.123Z")
                                                )
                                                .declassificationString("U")
                                                .derivedFrom("SOME_SOURCE")
                                                .notes("Example Notes")
                                                .opsCap(StatusFull.OpsCap.FMC)
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .state(StatusFull.State.ACTIVE)
                                                .addSubStatusCollection(
                                                    SubStatusFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(SubStatusFull.DataMode.TEST)
                                                        .notes("Sample Notes")
                                                        .source("Bluestaq")
                                                        .status(SubStatusFull.Status.FMC)
                                                        .statusId("REF-STATUS-ID")
                                                        .type(SubStatusFull.Type.MD_CAP)
                                                        .id("SUBSTATUS-ID")
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .origin("THIRD_PARTY_DATASOURCE")
                                                        .origNetwork("OPS1")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .sysCap(StatusFull.SysCap.FMC)
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .taskable(false)
                                        .terrestrialId("TERRESTRIAL-ID")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .addUrl("URL1")
                                        .addUrl("URL2")
                                        .build()
                                )
                                .idOnOrbit("ONORBIT-ID")
                                .intlDes("2021123ABC")
                                .launchDate(LocalDate.parse("2018-01-01"))
                                .launchSiteId("LAUNCHSITE-ID")
                                .lifetimeYears(10)
                                .missionNumber("Expedition 1")
                                .objectType(OnorbitFull.ObjectType.PAYLOAD)
                                .addOnorbitDetail(
                                    OnorbitDetailsFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OnorbitDetailsFull.DataMode.TEST)
                                        .idOnOrbit("REF-ONORBIT-ID")
                                        .source("Bluestaq")
                                        .id("ONORBITDETAILS-ID")
                                        .additionalMass(10.23)
                                        .adeptRadius(10.23)
                                        .bolDeltaV(1000.1)
                                        .bolFuelMass(10.23)
                                        .busCrossSection(10.23)
                                        .busType("A2100")
                                        .colaRadius(10.23)
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .crossSection(10.23)
                                        .currentMass(500.0)
                                        .deltaVUnc(50.1)
                                        .addDepEstMass(20.0)
                                        .addDepEstMass(21.0)
                                        .addDepMassUnc(10.0)
                                        .addDepMassUnc(5.0)
                                        .addDepName("GOES-18A")
                                        .addDepName("GOES-18B")
                                        .driftRate(1.23)
                                        .dryMass(10.23)
                                        .estDeltaVDuration(10.23)
                                        .fuelRemaining(10.23)
                                        .geoSlot(90.23)
                                        .lastObSource("THIRD_PARTY_DATASOURCE")
                                        .lastObTime(
                                            OffsetDateTime.parse("2021-01-01T01:01:01.123456Z")
                                        )
                                        .launchMass(10.23)
                                        .launchMassMax(15.23)
                                        .launchMassMin(5.23)
                                        .maneuverable(false)
                                        .maxDeltaV(10.23)
                                        .maxRadius(10.23)
                                        .addMissionType("Weather")
                                        .addMissionType("Space Weather")
                                        .numDeployable(2)
                                        .numMission(2)
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .rcs(10.23)
                                        .rcsMax(15.23)
                                        .rcsMean(10.23)
                                        .rcsMin(5.23)
                                        .refSource("Wikipedia")
                                        .solarArrayArea(10.23)
                                        .totalMassUnc(50.1)
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .vismag(10.23)
                                        .vismagMax(15.23)
                                        .vismagMean(10.23)
                                        .vismagMin(5.23)
                                        .build()
                                )
                                .origin("THIRD_PARTY_DATASOURCE")
                                .origNetwork("OPS1")
                                .addSolarArray(
                                    OnorbitSolarArrayFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OnorbitSolarArrayFull.DataMode.TEST)
                                        .idOnOrbit("ONORBIT-ID")
                                        .idSolarArray("SOLARARRAY-ID")
                                        .source("Bluestaq")
                                        .id("ONORBITSOLARARRAY-ID")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .quantity(10)
                                        .solarArray(
                                            SolarArrayFull.builder()
                                                .dataMode(SolarArrayFull.DataMode.TEST)
                                                .name("Solar1")
                                                .source("Bluestaq")
                                                .id("SOLARARRAY-ID")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .addSolarArrayDetail(
                                                    SolarArrayDetailsFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(
                                                            SolarArrayDetailsFull.DataMode.TEST
                                                        )
                                                        .idSolarArray("SOLARARRAY-ID")
                                                        .source("Bluestaq")
                                                        .id("SOLARARRAYDETAILS-ID")
                                                        .area(123.4)
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .description("Example notes")
                                                        .junctionTechnology("Triple")
                                                        .manufacturerOrg(
                                                            OrganizationFull.builder()
                                                                .classificationMarking("U")
                                                                .dataMode(
                                                                    OrganizationFull.DataMode.TEST
                                                                )
                                                                .name("some.user")
                                                                .source("some.user")
                                                                .type("GOVERNMENT")
                                                                .id("ORGANIZATION-ID")
                                                                .active(false)
                                                                .category("Private company")
                                                                .countryCode("US")
                                                                .createdAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .createdBy("some.user")
                                                                .description("Example description")
                                                                .externalId("EXTERNAL-ID")
                                                                .nationality("US")
                                                                .addOrganizationDetail(
                                                                    OrganizationDetailsFull
                                                                        .builder()
                                                                        .classificationMarking("U")
                                                                        .dataMode(
                                                                            OrganizationDetailsFull
                                                                                .DataMode
                                                                                .TEST
                                                                        )
                                                                        .idOrganization(
                                                                            "ORGANIZATION-ID"
                                                                        )
                                                                        .name("some.user")
                                                                        .source("some.user")
                                                                        .id(
                                                                            "ORGANIZATIONDETAILS-ID"
                                                                        )
                                                                        .address1("123 Main Street")
                                                                        .address2("Apt 4B")
                                                                        .address3(
                                                                            "Colorado Springs CO, 80903"
                                                                        )
                                                                        .broker("some.user")
                                                                        .ceo("some.user")
                                                                        .cfo("some.user")
                                                                        .createdAt(
                                                                            OffsetDateTime.parse(
                                                                                "2018-01-01T16:00:00.123Z"
                                                                            )
                                                                        )
                                                                        .createdBy("some.user")
                                                                        .cto("some.user")
                                                                        .description(
                                                                            "Example description"
                                                                        )
                                                                        .ebitda(123.4)
                                                                        .email(
                                                                            "some_organization@organization.com"
                                                                        )
                                                                        .financialNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .financialYearEndDate(
                                                                            OffsetDateTime.parse(
                                                                                "2021-01-01T01:01:01.123Z"
                                                                            )
                                                                        )
                                                                        .fleetPlanNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .formerOrgId("FORMERORG-ID")
                                                                        .ftes(123)
                                                                        .geoAdminLevel1("Colorado")
                                                                        .geoAdminLevel2(
                                                                            "El Paso County"
                                                                        )
                                                                        .geoAdminLevel3(
                                                                            "Colorado Springs"
                                                                        )
                                                                        .massRanking(123)
                                                                        .origin("some.user")
                                                                        .origNetwork("OPS1")
                                                                        .parentOrgId("PARENTORG-ID")
                                                                        .postalCode("80903")
                                                                        .profit(123.4)
                                                                        .revenue(123.4)
                                                                        .revenueRanking(123)
                                                                        .riskManager("some.user")
                                                                        .servicesNotes(
                                                                            "Example notes"
                                                                        )
                                                                        .addTag("PROVIDER_TAG1")
                                                                        .addTag("PROVIDER_TAG2")
                                                                        .updatedAt(
                                                                            OffsetDateTime.parse(
                                                                                "2018-01-01T16:00:00.123Z"
                                                                            )
                                                                        )
                                                                        .updatedBy("some.user")
                                                                        .build()
                                                                )
                                                                .origin("some.user")
                                                                .origNetwork("OPS1")
                                                                .updatedAt(
                                                                    OffsetDateTime.parse(
                                                                        "2018-01-01T16:00:00.123Z"
                                                                    )
                                                                )
                                                                .updatedBy("some.user")
                                                                .build()
                                                        )
                                                        .manufacturerOrgId("MANUFACTURERORG-ID")
                                                        .origin("THIRD_PARTY_DATASOURCE")
                                                        .origNetwork("OPS1")
                                                        .span(123.4)
                                                        .addTag("TAG1")
                                                        .addTag("TAG2")
                                                        .technology("Ga-As")
                                                        .type("U Shaped")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .build()
                                                )
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .addThruster(
                                    OnorbitThrusterFull.builder()
                                        .classificationMarking("U")
                                        .dataMode(OnorbitThrusterFull.DataMode.TEST)
                                        .idEngine("ENGINE-ID")
                                        .idOnOrbit("ONORBIT-ID")
                                        .source("Bluestaq")
                                        .id("ONORBITTHRUSTER-ID")
                                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .createdBy("some.user")
                                        .engine(
                                            Engine.builder()
                                                .classificationMarking("U")
                                                .dataMode(Engine.DataMode.TEST)
                                                .name("ENGINE_VARIANT1")
                                                .source("Bluestaq")
                                                .id("ENGINE-ID")
                                                .createdAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .createdBy("some.user")
                                                .addEngineDetail(
                                                    EngineDetailsFull.builder()
                                                        .classificationMarking("U")
                                                        .dataMode(EngineDetailsFull.DataMode.TEST)
                                                        .idEngine("ENGINE-ID")
                                                        .source("Bluestaq")
                                                        .id("ENGINEDETAILS-ID")
                                                        .burnTime(1.1)
                                                        .chamberPressure(1.1)
                                                        .characteristicType("Electric")
                                                        .createdAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .createdBy("some.user")
                                                        .cycleType("Pressure Fed")
                                                        .family("ENGINE_TYPE1")
                                                        .manufacturerOrgId("MANUFACTURERORG-ID")
                                                        .maxFirings(5)
                                                        .notes("Example notes")
                                                        .nozzleExpansionRatio(1.1)
                                                        .origin("THIRD_PARTY_DATASOURCE")
                                                        .origNetwork("OPS1")
                                                        .oxidizer("Liquid Oxygen")
                                                        .propellant("Liquid")
                                                        .seaLevelThrust(1.1)
                                                        .specificImpulse(1.1)
                                                        .addTag("PROVIDER_TAG1")
                                                        .addTag("PROVIDER_TAG2")
                                                        .updatedAt(
                                                            OffsetDateTime.parse(
                                                                "2018-01-01T16:00:00.123Z"
                                                            )
                                                        )
                                                        .updatedBy("some.user")
                                                        .vacuumThrust(1.1)
                                                        .build()
                                                )
                                                .origin("THIRD_PARTY_DATASOURCE")
                                                .origNetwork("OPS1")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2018-01-01T16:00:00.123Z")
                                                )
                                                .updatedBy("some.user")
                                                .build()
                                        )
                                        .origin("THIRD_PARTY_DATASOURCE")
                                        .origNetwork("OPS1")
                                        .quantity(10)
                                        .type("Hydrazine REA")
                                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .updatedBy("some.user")
                                        .build()
                                )
                                .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                .updatedBy("some.user")
                                .build()
                        )
                        .origin("THIRD_PARTY_DATASOURCE")
                        .origNetwork("OPS1")
                        .origObjectId("ORIGOBJECT-ID")
                        .partials("ANALYTIC")
                        .pedigree("CONJUNCTION")
                        .polarMotionX(1.23)
                        .polarMotionY(1.23)
                        .posUnc(0.333399744452)
                        .rawFileUri("rawFileURI")
                        .recOdSpan(3.5)
                        .referenceFrame(StateVectorFull.ReferenceFrame.J2000)
                        .residualsAcc(99.5)
                        .revNo(7205)
                        .rms(0.991)
                        .satNo(12)
                        .addSigmaPosUvw(1.23)
                        .addSigmaPosUvw(4.56)
                        .addSigmaVelUvw(1.23)
                        .addSigmaVelUvw(4.56)
                        .solarFluxApAvg(1.23)
                        .solarFluxF10(1.23)
                        .solarFluxF10Avg(1.23)
                        .solarRadPress(true)
                        .solarRadPressCoeff(0.0244394)
                        .solidEarthTides(true)
                        .addSourcedData("DATA1")
                        .addSourcedData("DATA2")
                        .addSourcedDataType(StateVectorFull.SourcedDataType.RADAR)
                        .sourceDl("AXE")
                        .srpArea(4.311)
                        .stepMode("AUTO")
                        .stepSize(1.23)
                        .stepSizeSelection("AUTO")
                        .addTag("TAG1")
                        .addTag("TAG2")
                        .taiUtc(1.23)
                        .thrustAccel(1.23)
                        .tracksAvail(163)
                        .tracksUsed(163)
                        .transactionId("transactionId")
                        .uct(true)
                        .ut1Rate(1.23)
                        .ut1Utc(1.23)
                        .velUnc(0.000004)
                        .xaccel(-2.12621392)
                        .xpos(-1118.577381)
                        .xposAlt1(-1145.688502)
                        .xposAlt2(-1456.915926)
                        .xvel(-4.25242784)
                        .xvelAlt1(-4.270832252)
                        .xvelAlt2(-1.219814294)
                        .yaccel(2.645553717)
                        .ypos(3026.231084)
                        .yposAlt1(3020.729572)
                        .yposAlt2(-2883.540406)
                        .yvel(5.291107434)
                        .yvelAlt1(5.27074276)
                        .yvelAlt2(-6.602080212)
                        .zaccel(-1.06310696)
                        .zpos(6167.831808)
                        .zposAlt1(6165.55187)
                        .zposAlt2(6165.55187)
                        .zvel(-3.356493869)
                        .zvelAlt1(-3.365155181)
                        .zvelAlt2(-3.365155181)
                        .build()
                )
                .stepSize(1L)
                .addTag("PROVIDER_TAG1")
                .addTag("PROVIDER_TAG2")
                .transactionId("TRANSACTION-ID")
                .usableEndTime(OffsetDateTime.parse("2018-01-01T20:50:00.123456Z"))
                .usableStartTime(OffsetDateTime.parse("2018-01-01T16:10:00.123456Z"))
                .build()

        val roundtrippedEphemerisSet =
            jsonMapper.readValue(
                jsonMapper.writeValueAsString(ephemerisSet),
                jacksonTypeRef<EphemerisSet>(),
            )

        assertThat(roundtrippedEphemerisSet).isEqualTo(ephemerisSet)
    }
}
