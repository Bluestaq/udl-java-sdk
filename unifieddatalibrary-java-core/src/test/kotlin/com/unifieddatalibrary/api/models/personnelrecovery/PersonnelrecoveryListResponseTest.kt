// File generated from our OpenAPI spec by Stainless.

package com.unifieddatalibrary.api.models.personnelrecovery

import com.fasterxml.jackson.module.kotlin.jacksonTypeRef
import com.unifieddatalibrary.api.core.jsonMapper
import java.time.OffsetDateTime
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class PersonnelrecoveryListResponseTest {

    @Test
    fun create() {
        val personnelrecoveryListResponse =
            PersonnelrecoveryListResponse.builder()
                .classificationMarking("U")
                .dataMode(PersonnelrecoveryListResponse.DataMode.TEST)
                .msgTime(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                .pickupLat(75.1234)
                .pickupLon(175.1234)
                .source("Bluestaq")
                .type("MEDICAL")
                .id("PERSONNEL_RECOVERY-ID")
                .authMethod("PASSPORT")
                .authStatus("NO STATEMENT")
                .beaconInd(false)
                .callSign("BADGER")
                .commEq1("LL PHONE")
                .commEq2("LL PHONE")
                .commEq3("LL PHONE")
                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                .createdBy("some.user")
                .executionInfo(
                    PersonnelrecoveryListResponse.ExecutionInfo.builder()
                        .egress(66.53)
                        .addEgressPoint(107.23)
                        .addEgressPoint(30.455)
                        .escortVehicle(
                            PersonnelrecoveryListResponse.ExecutionInfo.EscortVehicle.builder()
                                .callSign("FALCO")
                                .primaryFreq(34.55)
                                .strength(5)
                                .type("C17")
                                .build()
                        )
                        .ingress(35.66)
                        .addInitialPoint(103.23)
                        .addInitialPoint(30.445)
                        .objStrategy("Description of strategy plan.")
                        .recoveryVehicle(
                            PersonnelrecoveryListResponse.ExecutionInfo.RecoveryVehicle.builder()
                                .callSign("FALCO")
                                .primaryFreq(34.55)
                                .strength(5)
                                .type("C17")
                                .build()
                        )
                        .build()
                )
                .identity("NEUTRAL CIVILIAN")
                .idWeatherReport("WEATHER_REPORT-ID")
                .milClass("CIVILIAN")
                .natAlliance(1)
                .natAlliance1(0)
                .numAmbulatory(1)
                .numAmbulatoryInjured(2)
                .numNonAmbulatory(0)
                .numPersons(1)
                .objectiveAreaInfo(
                    PersonnelrecoveryListResponse.ObjectiveAreaInfo.builder()
                        .addEnemyData(
                            PersonnelrecoveryListResponse.ObjectiveAreaInfo.EnemyData.builder()
                                .dirToEnemy("NORTHWEST")
                                .friendliesRemarks("Comments from friendlies.")
                                .hlzRemarks("Hot Landing Zone remarks.")
                                .hostileFireType("SMALL ARMS")
                                .build()
                        )
                        .oscCallSign("STARFOX")
                        .oscFreq(12.55)
                        .pzDesc("Near the lake.")
                        .addPzLocation(103.23)
                        .addPzLocation(30.445)
                        .build()
                )
                .origin("THIRD_PARTY_DATASOURCE")
                .origNetwork("OPS1")
                .pickupAlt(30.1234)
                .recovId("RECOV-ID")
                .rxFreq(5.5)
                .survivorMessages("UNINJURED CANT MOVE HOSTILES NEARBY")
                .survivorRadio("NO STATEMENT")
                .termInd(true)
                .textMsg("Additional message from survivor.")
                .txFreq(5.5)
                .build()

        assertThat(personnelrecoveryListResponse.classificationMarking()).isEqualTo("U")
        assertThat(personnelrecoveryListResponse.dataMode())
            .isEqualTo(PersonnelrecoveryListResponse.DataMode.TEST)
        assertThat(personnelrecoveryListResponse.msgTime())
            .isEqualTo(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
        assertThat(personnelrecoveryListResponse.pickupLat()).isEqualTo(75.1234)
        assertThat(personnelrecoveryListResponse.pickupLon()).isEqualTo(175.1234)
        assertThat(personnelrecoveryListResponse.source()).isEqualTo("Bluestaq")
        assertThat(personnelrecoveryListResponse.type()).isEqualTo("MEDICAL")
        assertThat(personnelrecoveryListResponse.id()).contains("PERSONNEL_RECOVERY-ID")
        assertThat(personnelrecoveryListResponse.authMethod()).contains("PASSPORT")
        assertThat(personnelrecoveryListResponse.authStatus()).contains("NO STATEMENT")
        assertThat(personnelrecoveryListResponse.beaconInd()).contains(false)
        assertThat(personnelrecoveryListResponse.callSign()).contains("BADGER")
        assertThat(personnelrecoveryListResponse.commEq1()).contains("LL PHONE")
        assertThat(personnelrecoveryListResponse.commEq2()).contains("LL PHONE")
        assertThat(personnelrecoveryListResponse.commEq3()).contains("LL PHONE")
        assertThat(personnelrecoveryListResponse.createdAt())
            .contains(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
        assertThat(personnelrecoveryListResponse.createdBy()).contains("some.user")
        assertThat(personnelrecoveryListResponse.executionInfo())
            .contains(
                PersonnelrecoveryListResponse.ExecutionInfo.builder()
                    .egress(66.53)
                    .addEgressPoint(107.23)
                    .addEgressPoint(30.455)
                    .escortVehicle(
                        PersonnelrecoveryListResponse.ExecutionInfo.EscortVehicle.builder()
                            .callSign("FALCO")
                            .primaryFreq(34.55)
                            .strength(5)
                            .type("C17")
                            .build()
                    )
                    .ingress(35.66)
                    .addInitialPoint(103.23)
                    .addInitialPoint(30.445)
                    .objStrategy("Description of strategy plan.")
                    .recoveryVehicle(
                        PersonnelrecoveryListResponse.ExecutionInfo.RecoveryVehicle.builder()
                            .callSign("FALCO")
                            .primaryFreq(34.55)
                            .strength(5)
                            .type("C17")
                            .build()
                    )
                    .build()
            )
        assertThat(personnelrecoveryListResponse.identity()).contains("NEUTRAL CIVILIAN")
        assertThat(personnelrecoveryListResponse.idWeatherReport()).contains("WEATHER_REPORT-ID")
        assertThat(personnelrecoveryListResponse.milClass()).contains("CIVILIAN")
        assertThat(personnelrecoveryListResponse.natAlliance()).contains(1)
        assertThat(personnelrecoveryListResponse.natAlliance1()).contains(0)
        assertThat(personnelrecoveryListResponse.numAmbulatory()).contains(1)
        assertThat(personnelrecoveryListResponse.numAmbulatoryInjured()).contains(2)
        assertThat(personnelrecoveryListResponse.numNonAmbulatory()).contains(0)
        assertThat(personnelrecoveryListResponse.numPersons()).contains(1)
        assertThat(personnelrecoveryListResponse.objectiveAreaInfo())
            .contains(
                PersonnelrecoveryListResponse.ObjectiveAreaInfo.builder()
                    .addEnemyData(
                        PersonnelrecoveryListResponse.ObjectiveAreaInfo.EnemyData.builder()
                            .dirToEnemy("NORTHWEST")
                            .friendliesRemarks("Comments from friendlies.")
                            .hlzRemarks("Hot Landing Zone remarks.")
                            .hostileFireType("SMALL ARMS")
                            .build()
                    )
                    .oscCallSign("STARFOX")
                    .oscFreq(12.55)
                    .pzDesc("Near the lake.")
                    .addPzLocation(103.23)
                    .addPzLocation(30.445)
                    .build()
            )
        assertThat(personnelrecoveryListResponse.origin()).contains("THIRD_PARTY_DATASOURCE")
        assertThat(personnelrecoveryListResponse.origNetwork()).contains("OPS1")
        assertThat(personnelrecoveryListResponse.pickupAlt()).contains(30.1234)
        assertThat(personnelrecoveryListResponse.recovId()).contains("RECOV-ID")
        assertThat(personnelrecoveryListResponse.rxFreq()).contains(5.5)
        assertThat(personnelrecoveryListResponse.survivorMessages())
            .contains("UNINJURED CANT MOVE HOSTILES NEARBY")
        assertThat(personnelrecoveryListResponse.survivorRadio()).contains("NO STATEMENT")
        assertThat(personnelrecoveryListResponse.termInd()).contains(true)
        assertThat(personnelrecoveryListResponse.textMsg())
            .contains("Additional message from survivor.")
        assertThat(personnelrecoveryListResponse.txFreq()).contains(5.5)
    }

    @Test
    fun roundtrip() {
        val jsonMapper = jsonMapper()
        val personnelrecoveryListResponse =
            PersonnelrecoveryListResponse.builder()
                .classificationMarking("U")
                .dataMode(PersonnelrecoveryListResponse.DataMode.TEST)
                .msgTime(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                .pickupLat(75.1234)
                .pickupLon(175.1234)
                .source("Bluestaq")
                .type("MEDICAL")
                .id("PERSONNEL_RECOVERY-ID")
                .authMethod("PASSPORT")
                .authStatus("NO STATEMENT")
                .beaconInd(false)
                .callSign("BADGER")
                .commEq1("LL PHONE")
                .commEq2("LL PHONE")
                .commEq3("LL PHONE")
                .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                .createdBy("some.user")
                .executionInfo(
                    PersonnelrecoveryListResponse.ExecutionInfo.builder()
                        .egress(66.53)
                        .addEgressPoint(107.23)
                        .addEgressPoint(30.455)
                        .escortVehicle(
                            PersonnelrecoveryListResponse.ExecutionInfo.EscortVehicle.builder()
                                .callSign("FALCO")
                                .primaryFreq(34.55)
                                .strength(5)
                                .type("C17")
                                .build()
                        )
                        .ingress(35.66)
                        .addInitialPoint(103.23)
                        .addInitialPoint(30.445)
                        .objStrategy("Description of strategy plan.")
                        .recoveryVehicle(
                            PersonnelrecoveryListResponse.ExecutionInfo.RecoveryVehicle.builder()
                                .callSign("FALCO")
                                .primaryFreq(34.55)
                                .strength(5)
                                .type("C17")
                                .build()
                        )
                        .build()
                )
                .identity("NEUTRAL CIVILIAN")
                .idWeatherReport("WEATHER_REPORT-ID")
                .milClass("CIVILIAN")
                .natAlliance(1)
                .natAlliance1(0)
                .numAmbulatory(1)
                .numAmbulatoryInjured(2)
                .numNonAmbulatory(0)
                .numPersons(1)
                .objectiveAreaInfo(
                    PersonnelrecoveryListResponse.ObjectiveAreaInfo.builder()
                        .addEnemyData(
                            PersonnelrecoveryListResponse.ObjectiveAreaInfo.EnemyData.builder()
                                .dirToEnemy("NORTHWEST")
                                .friendliesRemarks("Comments from friendlies.")
                                .hlzRemarks("Hot Landing Zone remarks.")
                                .hostileFireType("SMALL ARMS")
                                .build()
                        )
                        .oscCallSign("STARFOX")
                        .oscFreq(12.55)
                        .pzDesc("Near the lake.")
                        .addPzLocation(103.23)
                        .addPzLocation(30.445)
                        .build()
                )
                .origin("THIRD_PARTY_DATASOURCE")
                .origNetwork("OPS1")
                .pickupAlt(30.1234)
                .recovId("RECOV-ID")
                .rxFreq(5.5)
                .survivorMessages("UNINJURED CANT MOVE HOSTILES NEARBY")
                .survivorRadio("NO STATEMENT")
                .termInd(true)
                .textMsg("Additional message from survivor.")
                .txFreq(5.5)
                .build()

        val roundtrippedPersonnelrecoveryListResponse =
            jsonMapper.readValue(
                jsonMapper.writeValueAsString(personnelrecoveryListResponse),
                jacksonTypeRef<PersonnelrecoveryListResponse>(),
            )

        assertThat(roundtrippedPersonnelrecoveryListResponse)
            .isEqualTo(personnelrecoveryListResponse)
    }
}
