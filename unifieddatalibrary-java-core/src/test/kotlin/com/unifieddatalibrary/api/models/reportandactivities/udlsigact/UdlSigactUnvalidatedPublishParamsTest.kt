// File generated from our OpenAPI spec by Stainless.

package com.unifieddatalibrary.api.models.reportandactivities.udlsigact

import java.time.OffsetDateTime
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class UdlSigactUnvalidatedPublishParamsTest {

    @Test
    fun create() {
        UdlSigactUnvalidatedPublishParams.builder()
            .addBody(
                UdlSigactUnvalidatedPublishParams.Body.builder()
                    .classificationMarking("U")
                    .dataMode(UdlSigactUnvalidatedPublishParams.Body.DataMode.TEST)
                    .reportDate(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .source("Bluestaq")
                    .id("SIGACT-ID")
                    .accuracy(13)
                    .addActor("US")
                    .addActor("CAN")
                    .agjson(
                        "{\"type\":\"Polygon\",\"coordinates\":[ [ [ 67.3291113966927, 26.156175339112 ], [ 67.2580009640721, 26.091022064271 ], [ 67.1795862381682, 26.6637992964562 ], [ 67.2501237475598, 26.730115808233 ], [ 67.3291113966927, 26.156175339112 ] ] ] }"
                    )
                    .andims(3L)
                    .asrid(3)
                    .atext(
                        "POLYGON((67.3291113966927 26.156175339112,67.2580009640721 26.091022064271,67.1795862381682 26.6637992964562,67.2501237475598 26.730115808233,67.3291113966927 26.156175339112))"
                    )
                    .atype("Type1")
                    .avgTone(8.23)
                    .cameoBaseCode("Example_cameoBaseCode")
                    .cameoCode("CAMEO_CODE")
                    .cameoRootCode("Example_cameoRootCode")
                    .checksumValue("120EA8A25E5D487BF68B5F7096440019")
                    .city("Austin")
                    .civAbd(423)
                    .civDet(234)
                    .civKia(2)
                    .civWound(123)
                    .clarity(1)
                    .coalAbd(123)
                    .coalDet(123)
                    .coalKia(123)
                    .coalWound(123)
                    .complexAttack(false)
                    .confidence(13)
                    .countryCode("US")
                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .district("district 12")
                    .documentFilename("Example_documentFilename")
                    .documentSource("Example_documentSource")
                    .enemyAbd(123)
                    .enemyDet(123)
                    .enemyKia(123)
                    .eventDescription("Example_Description")
                    .eventEnd(OffsetDateTime.parse("2021-01-01T01:02:03.123Z"))
                    .eventStart(OffsetDateTime.parse("2021-01-01T01:02:03.123Z"))
                    .eventType("Military")
                    .filesize(0L)
                    .friendlyAbd(123)
                    .friendlyDet(123)
                    .friendlyKia(123)
                    .friendlyWound(123)
                    .goldstein(9.32)
                    .hasAttachment(true)
                    .hostNatAbd(123)
                    .hostNatDet(123)
                    .hostNatKia(123)
                    .hostNatWound(123)
                    .idNumber("NUMBER-ID")
                    .lat(45.31)
                    .lon(90.23)
                    .milgrid("4QFJ12345678")
                    .notes("Example_Notes")
                    .numArticles(8)
                    .numMentions(8)
                    .numSources(8)
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("OPS1")
                    .province("Province_Example")
                    .addRelatedDoc(
                        UdlSigactUnvalidatedPublishParams.Body.RelatedDoc.builder()
                            .addDataSourceRef(
                                UdlSigactUnvalidatedPublishParams.Body.RelatedDoc.DataSourceRef
                                    .builder()
                                    .dataSourceId("dataSourceId")
                                    .endPosition("endPosition")
                                    .paragraphNumber("paragraphNumber")
                                    .sentenceNumber("sentenceNumber")
                                    .startPosition("startPosition")
                                    .build()
                            )
                            .documentId("documentId")
                            .build()
                    )
                    .repUnit("Unit_1")
                    .repUnitActivity("Example_Activity")
                    .repUnitType("Example_repUnitType")
                    .sideAAbd(123)
                    .sideADet(123)
                    .sideAkia(123)
                    .sideAWound(123)
                    .sideBAbd(123)
                    .sideBDet(123)
                    .sideBkia(123)
                    .sideBWound(123)
                    .sourceLanguage("eng")
                    .sourceUrl("Example_URL")
                    .summary("Example_Summary")
                    .target("US")
                    .theater("Kabul")
                    .typeOfAttack("IED Explosion")
                    .build()
            )
            .build()
    }

    @Test
    fun body() {
        val params =
            UdlSigactUnvalidatedPublishParams.builder()
                .addBody(
                    UdlSigactUnvalidatedPublishParams.Body.builder()
                        .classificationMarking("U")
                        .dataMode(UdlSigactUnvalidatedPublishParams.Body.DataMode.TEST)
                        .reportDate(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .source("Bluestaq")
                        .id("SIGACT-ID")
                        .accuracy(13)
                        .addActor("US")
                        .addActor("CAN")
                        .agjson(
                            "{\"type\":\"Polygon\",\"coordinates\":[ [ [ 67.3291113966927, 26.156175339112 ], [ 67.2580009640721, 26.091022064271 ], [ 67.1795862381682, 26.6637992964562 ], [ 67.2501237475598, 26.730115808233 ], [ 67.3291113966927, 26.156175339112 ] ] ] }"
                        )
                        .andims(3L)
                        .asrid(3)
                        .atext(
                            "POLYGON((67.3291113966927 26.156175339112,67.2580009640721 26.091022064271,67.1795862381682 26.6637992964562,67.2501237475598 26.730115808233,67.3291113966927 26.156175339112))"
                        )
                        .atype("Type1")
                        .avgTone(8.23)
                        .cameoBaseCode("Example_cameoBaseCode")
                        .cameoCode("CAMEO_CODE")
                        .cameoRootCode("Example_cameoRootCode")
                        .checksumValue("120EA8A25E5D487BF68B5F7096440019")
                        .city("Austin")
                        .civAbd(423)
                        .civDet(234)
                        .civKia(2)
                        .civWound(123)
                        .clarity(1)
                        .coalAbd(123)
                        .coalDet(123)
                        .coalKia(123)
                        .coalWound(123)
                        .complexAttack(false)
                        .confidence(13)
                        .countryCode("US")
                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .createdBy("some.user")
                        .district("district 12")
                        .documentFilename("Example_documentFilename")
                        .documentSource("Example_documentSource")
                        .enemyAbd(123)
                        .enemyDet(123)
                        .enemyKia(123)
                        .eventDescription("Example_Description")
                        .eventEnd(OffsetDateTime.parse("2021-01-01T01:02:03.123Z"))
                        .eventStart(OffsetDateTime.parse("2021-01-01T01:02:03.123Z"))
                        .eventType("Military")
                        .filesize(0L)
                        .friendlyAbd(123)
                        .friendlyDet(123)
                        .friendlyKia(123)
                        .friendlyWound(123)
                        .goldstein(9.32)
                        .hasAttachment(true)
                        .hostNatAbd(123)
                        .hostNatDet(123)
                        .hostNatKia(123)
                        .hostNatWound(123)
                        .idNumber("NUMBER-ID")
                        .lat(45.31)
                        .lon(90.23)
                        .milgrid("4QFJ12345678")
                        .notes("Example_Notes")
                        .numArticles(8)
                        .numMentions(8)
                        .numSources(8)
                        .origin("THIRD_PARTY_DATASOURCE")
                        .origNetwork("OPS1")
                        .province("Province_Example")
                        .addRelatedDoc(
                            UdlSigactUnvalidatedPublishParams.Body.RelatedDoc.builder()
                                .addDataSourceRef(
                                    UdlSigactUnvalidatedPublishParams.Body.RelatedDoc.DataSourceRef
                                        .builder()
                                        .dataSourceId("dataSourceId")
                                        .endPosition("endPosition")
                                        .paragraphNumber("paragraphNumber")
                                        .sentenceNumber("sentenceNumber")
                                        .startPosition("startPosition")
                                        .build()
                                )
                                .documentId("documentId")
                                .build()
                        )
                        .repUnit("Unit_1")
                        .repUnitActivity("Example_Activity")
                        .repUnitType("Example_repUnitType")
                        .sideAAbd(123)
                        .sideADet(123)
                        .sideAkia(123)
                        .sideAWound(123)
                        .sideBAbd(123)
                        .sideBDet(123)
                        .sideBkia(123)
                        .sideBWound(123)
                        .sourceLanguage("eng")
                        .sourceUrl("Example_URL")
                        .summary("Example_Summary")
                        .target("US")
                        .theater("Kabul")
                        .typeOfAttack("IED Explosion")
                        .build()
                )
                .build()

        val body = params._body()

        assertThat(body)
            .containsExactly(
                UdlSigactUnvalidatedPublishParams.Body.builder()
                    .classificationMarking("U")
                    .dataMode(UdlSigactUnvalidatedPublishParams.Body.DataMode.TEST)
                    .reportDate(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .source("Bluestaq")
                    .id("SIGACT-ID")
                    .accuracy(13)
                    .addActor("US")
                    .addActor("CAN")
                    .agjson(
                        "{\"type\":\"Polygon\",\"coordinates\":[ [ [ 67.3291113966927, 26.156175339112 ], [ 67.2580009640721, 26.091022064271 ], [ 67.1795862381682, 26.6637992964562 ], [ 67.2501237475598, 26.730115808233 ], [ 67.3291113966927, 26.156175339112 ] ] ] }"
                    )
                    .andims(3L)
                    .asrid(3)
                    .atext(
                        "POLYGON((67.3291113966927 26.156175339112,67.2580009640721 26.091022064271,67.1795862381682 26.6637992964562,67.2501237475598 26.730115808233,67.3291113966927 26.156175339112))"
                    )
                    .atype("Type1")
                    .avgTone(8.23)
                    .cameoBaseCode("Example_cameoBaseCode")
                    .cameoCode("CAMEO_CODE")
                    .cameoRootCode("Example_cameoRootCode")
                    .checksumValue("120EA8A25E5D487BF68B5F7096440019")
                    .city("Austin")
                    .civAbd(423)
                    .civDet(234)
                    .civKia(2)
                    .civWound(123)
                    .clarity(1)
                    .coalAbd(123)
                    .coalDet(123)
                    .coalKia(123)
                    .coalWound(123)
                    .complexAttack(false)
                    .confidence(13)
                    .countryCode("US")
                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .district("district 12")
                    .documentFilename("Example_documentFilename")
                    .documentSource("Example_documentSource")
                    .enemyAbd(123)
                    .enemyDet(123)
                    .enemyKia(123)
                    .eventDescription("Example_Description")
                    .eventEnd(OffsetDateTime.parse("2021-01-01T01:02:03.123Z"))
                    .eventStart(OffsetDateTime.parse("2021-01-01T01:02:03.123Z"))
                    .eventType("Military")
                    .filesize(0L)
                    .friendlyAbd(123)
                    .friendlyDet(123)
                    .friendlyKia(123)
                    .friendlyWound(123)
                    .goldstein(9.32)
                    .hasAttachment(true)
                    .hostNatAbd(123)
                    .hostNatDet(123)
                    .hostNatKia(123)
                    .hostNatWound(123)
                    .idNumber("NUMBER-ID")
                    .lat(45.31)
                    .lon(90.23)
                    .milgrid("4QFJ12345678")
                    .notes("Example_Notes")
                    .numArticles(8)
                    .numMentions(8)
                    .numSources(8)
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("OPS1")
                    .province("Province_Example")
                    .addRelatedDoc(
                        UdlSigactUnvalidatedPublishParams.Body.RelatedDoc.builder()
                            .addDataSourceRef(
                                UdlSigactUnvalidatedPublishParams.Body.RelatedDoc.DataSourceRef
                                    .builder()
                                    .dataSourceId("dataSourceId")
                                    .endPosition("endPosition")
                                    .paragraphNumber("paragraphNumber")
                                    .sentenceNumber("sentenceNumber")
                                    .startPosition("startPosition")
                                    .build()
                            )
                            .documentId("documentId")
                            .build()
                    )
                    .repUnit("Unit_1")
                    .repUnitActivity("Example_Activity")
                    .repUnitType("Example_repUnitType")
                    .sideAAbd(123)
                    .sideADet(123)
                    .sideAkia(123)
                    .sideAWound(123)
                    .sideBAbd(123)
                    .sideBDet(123)
                    .sideBkia(123)
                    .sideBWound(123)
                    .sourceLanguage("eng")
                    .sourceUrl("Example_URL")
                    .summary("Example_Summary")
                    .target("US")
                    .theater("Kabul")
                    .typeOfAttack("IED Explosion")
                    .build()
            )
    }

    @Test
    fun bodyWithoutOptionalFields() {
        val params =
            UdlSigactUnvalidatedPublishParams.builder()
                .addBody(
                    UdlSigactUnvalidatedPublishParams.Body.builder()
                        .classificationMarking("U")
                        .dataMode(UdlSigactUnvalidatedPublishParams.Body.DataMode.TEST)
                        .reportDate(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .source("Bluestaq")
                        .build()
                )
                .build()

        val body = params._body()

        assertThat(body)
            .containsExactly(
                UdlSigactUnvalidatedPublishParams.Body.builder()
                    .classificationMarking("U")
                    .dataMode(UdlSigactUnvalidatedPublishParams.Body.DataMode.TEST)
                    .reportDate(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .source("Bluestaq")
                    .build()
            )
    }
}
