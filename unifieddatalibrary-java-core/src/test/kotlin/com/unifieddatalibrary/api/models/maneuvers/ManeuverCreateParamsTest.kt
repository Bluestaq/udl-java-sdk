// File generated from our OpenAPI spec by Stainless.

package com.unifieddatalibrary.api.models.maneuvers

import com.unifieddatalibrary.api.models.maneuvers.ManeuverCreateParams
import java.time.OffsetDateTime
import kotlin.jvm.optionals.getOrNull
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class ManeuverCreateParamsTest {

    @Test
    fun create() {
      ManeuverCreateParams.builder()
          .classificationMarking("U")
          .dataMode(ManeuverCreateParams.DataMode.TEST)
          .eventStartTime(OffsetDateTime.parse("2023-11-16T01:05:16.835689Z"))
          .source("Bluestaq")
          .id("MANEUVER-ID")
          .algorithm("Example algorithm")
          .characterization("North-South Station Keeping")
          .characterizationUnc(0.15)
          .cov(listOf(
            1.1,
            2.4,
            3.4,
            4.1,
            5.6,
            6.2,
            7.9,
            8.0,
            9.2,
            10.1,
          ))
          .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
          .createdBy("some.user")
          .deltaMass(0.15)
          .deltaPos(0.715998327)
          .deltaPosU(-0.022172844)
          .deltaPosV(-0.033700154)
          .deltaPosW(-0.714861014)
          .deltaVel(0.000631505)
          .deltaVelU(0.0000350165629389647)
          .deltaVelV(0.000544413)
          .deltaVelW(-0.000318099)
          .description("Example notes")
          .descriptor("Example descriptor")
          .eventEndTime(OffsetDateTime.parse("2023-11-16T01:09:01.350012Z"))
          .eventId("EVENT-ID")
          .idOnOrbit("12")
          .idSensor("SENSOR-ID")
          .maneuverUnc(0.5)
          .mnvrAccels(listOf(
            0.05,
            0.1,
            0.05,
          ))
          .mnvrAccelTimes(listOf(
            10.25,
            50.56,
            150.78,
          ))
          .mnvrAccelUncs(listOf(
            0.0005,
            0.001,
            0.0005,
          ))
          .numAccelPoints(3)
          .numObs(10)
          .odFitEndTime(OffsetDateTime.parse("2023-11-16T03:55:51.000000Z"))
          .origin("THIRD_PARTY_DATASOURCE")
          .origNetwork("ORIG")
          .origObjectId("ORIGOBJECT-ID")
          .origSensorId("ORIGSENSOR-ID")
          .postApogee(35800.1)
          .postArea(35.77)
          .postBallisticCoeff(0.000433209)
          .postDriftRate(-0.0125)
          .postEccentricity(0.000164)
          .postEventElset(ManeuverCreateParams.PostEventElset.builder()
              .classificationMarking("U")
              .dataMode(ManeuverCreateParams.PostEventElset.DataMode.TEST)
              .epoch(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
              .source("Bluestaq")
              .agom(0.0126)
              .algorithm("Example algorithm")
              .apogee(1.1)
              .argOfPerigee(1.1)
              .ballisticCoeff(0.00815)
              .bStar(1.1)
              .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
              .createdBy("some.user")
              .descriptor("Example description")
              .eccentricity(0.333)
              .ephemType(1L)
              .idElset("ELSET-ID")
              .idOnOrbit("ONORBIT-ID")
              .idOrbitDetermination("026dd511-8ba5-47d3-9909-836149f87686")
              .inclination(45.1)
              .line1("Example line1")
              .line2("Example line2")
              .meanAnomaly(179.1)
              .meanMotion(1.1)
              .meanMotionDDot(1.1)
              .meanMotionDot(1.1)
              .origin("THIRD_PARTY_DATASOURCE")
              .origNetwork("ORIG")
              .origObjectId("ORIGOBJECT-ID")
              .perigee(1.1)
              .period(1.1)
              .raan(1.1)
              .rawFileUri("Example URI")
              .revNo(111)
              .satNo(12)
              .semiMajorAxis(1.1)
              .addSourcedData("OBSERVATION_UUID1")
              .addSourcedData("OBSERVATION_UUID2")
              .addSourcedDataType(ManeuverCreateParams.PostEventElset.SourcedDataType.RADAR)
              .addSourcedDataType(ManeuverCreateParams.PostEventElset.SourcedDataType.RF)
              .sourceDl("AXE")
              .addTag("PROVIDER_TAG1")
              .addTag("PROVIDER_TAG2")
              .transactionId("TRANSACTION-ID")
              .uct(false)
              .build())
          .postEventIdElset("225adf4c-8606-40a8-929e-63e22cffe220")
          .postEventIdStateVector("d83a23f8-1496-485a-bd88-ec5808c73299")
          .postEventStateVector(ManeuverCreateParams.PostEventStateVector.builder()
              .classificationMarking("U")
              .dataMode(ManeuverCreateParams.PostEventStateVector.DataMode.TEST)
              .epoch(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
              .source("Bluestaq")
              .actualOdSpan(3.5)
              .algorithm("SAMPLE_ALGORITHM")
              .alt1ReferenceFrame("TEME")
              .alt2ReferenceFrame("EFG/TDR")
              .area(5.065)
              .bDot(1.23)
              .cmOffset(1.23)
              .cov(listOf(
                1.1,
                2.4,
                3.8,
                4.2,
                5.5,
                6.0,
              ))
              .covMethod("CALCULATED")
              .covReferenceFrame(ManeuverCreateParams.PostEventStateVector.CovReferenceFrame.J2000)
              .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
              .createdBy("some.user")
              .descriptor("descriptor")
              .dragArea(4.739)
              .dragCoeff(0.0224391269775)
              .dragModel("JAC70")
              .edr(1.23)
              .addEqCov(1.1)
              .addEqCov(2.2)
              .errorControl(1.23)
              .fixedStep(true)
              .geopotentialModel("EGM-96")
              .iau1980Terms(4)
              .idOnOrbit("ONORBIT-ID")
              .idOrbitDetermination("026dd511-8ba5-47d3-9909-836149f87686")
              .idStateVector("STATEVECTOR-ID")
              .integratorMode("integratorMode")
              .inTrackThrust(true)
              .lastObEnd(OffsetDateTime.parse("2022-11-09T11:20:21.247192Z"))
              .lastObStart(OffsetDateTime.parse("2022-11-09T11:20:21.247192Z"))
              .leapSecondTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
              .lunarSolar(true)
              .mass(164.5)
              .obsAvailable(376)
              .obsUsed(374)
              .origin("THIRD_PARTY_DATASOURCE")
              .origNetwork("ORIG")
              .origObjectId("ORIGOBJECT-ID")
              .partials("ANALYTIC")
              .pedigree("CONJUNCTION")
              .polarMotionX(1.23)
              .polarMotionY(1.23)
              .posUnc(0.333399744452)
              .rawFileUri("rawFileURI")
              .recOdSpan(3.5)
              .referenceFrame(ManeuverCreateParams.PostEventStateVector.ReferenceFrame.J2000)
              .residualsAcc(99.5)
              .revNo(7205)
              .rms(0.991)
              .satNo(12)
              .addSigmaPosUvw(1.23)
              .addSigmaPosUvw(4.56)
              .addSigmaVelUvw(1.23)
              .addSigmaVelUvw(4.56)
              .solarFluxApAvg(1.23)
              .solarFluxF10(1.23)
              .solarFluxF10Avg(1.23)
              .solarRadPress(true)
              .solarRadPressCoeff(0.0244394)
              .solidEarthTides(true)
              .addSourcedData("DATA1")
              .addSourcedData("DATA2")
              .addSourcedDataType(ManeuverCreateParams.PostEventStateVector.SourcedDataType.RADAR)
              .sourceDl("AXE")
              .srpArea(4.311)
              .stepMode("AUTO")
              .stepSize(1.23)
              .stepSizeSelection("AUTO")
              .addTag("TAG1")
              .addTag("TAG2")
              .taiUtc(1.23)
              .thrustAccel(1.23)
              .tracksAvail(163)
              .tracksUsed(163)
              .transactionId("transactionId")
              .uct(true)
              .ut1Rate(1.23)
              .ut1Utc(1.23)
              .velUnc(0.000004)
              .xaccel(-2.12621392)
              .xpos(-1118.577381)
              .xposAlt1(-1145.688502)
              .xposAlt2(-1456.915926)
              .xvel(-4.25242784)
              .xvelAlt1(-4.270832252)
              .xvelAlt2(-1.219814294)
              .yaccel(2.645553717)
              .ypos(3026.231084)
              .yposAlt1(3020.729572)
              .yposAlt2(-2883.540406)
              .yvel(5.291107434)
              .yvelAlt1(5.27074276)
              .yvelAlt2(-6.602080212)
              .zaccel(-1.06310696)
              .zpos(6167.831808)
              .zposAlt1(6165.55187)
              .zposAlt2(6165.55187)
              .zvel(-3.356493869)
              .zvelAlt1(-3.365155181)
              .zvelAlt2(-3.365155181)
              .build())
          .postGeoLongitude(-93.15)
          .postInclination(0.0327)
          .postMass(1844.5)
          .postPerigee(35787.9)
          .postPeriod(1436.01)
          .postPosX(3589.351957)
          .postPosY(42017.26823)
          .postPosZ(-1.27161796)
          .postRaan(98.3335)
          .postRadiationPressCoeff(4.51e-7)
          .postSigmaU(12.285)
          .postSigmaV(71.339)
          .postSigmaW(12.77)
          .postSma(42164.87)
          .postVelX(-3.063152826)
          .postVelY(0.261586769)
          .postVelZ(0.006842148)
          .preApogee(35802.0)
          .preBallisticCoeff(0.000437116)
          .preDriftRate(-0.0125)
          .preEccentricity(0.00017)
          .preEventElset(ManeuverCreateParams.PreEventElset.builder()
              .classificationMarking("U")
              .dataMode(ManeuverCreateParams.PreEventElset.DataMode.TEST)
              .epoch(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
              .source("Bluestaq")
              .agom(0.0126)
              .algorithm("Example algorithm")
              .apogee(1.1)
              .argOfPerigee(1.1)
              .ballisticCoeff(0.00815)
              .bStar(1.1)
              .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
              .createdBy("some.user")
              .descriptor("Example description")
              .eccentricity(0.333)
              .ephemType(1L)
              .idElset("ELSET-ID")
              .idOnOrbit("ONORBIT-ID")
              .idOrbitDetermination("026dd511-8ba5-47d3-9909-836149f87686")
              .inclination(45.1)
              .line1("Example line1")
              .line2("Example line2")
              .meanAnomaly(179.1)
              .meanMotion(1.1)
              .meanMotionDDot(1.1)
              .meanMotionDot(1.1)
              .origin("THIRD_PARTY_DATASOURCE")
              .origNetwork("ORIG")
              .origObjectId("ORIGOBJECT-ID")
              .perigee(1.1)
              .period(1.1)
              .raan(1.1)
              .rawFileUri("Example URI")
              .revNo(111)
              .satNo(12)
              .semiMajorAxis(1.1)
              .addSourcedData("OBSERVATION_UUID1")
              .addSourcedData("OBSERVATION_UUID2")
              .addSourcedDataType(ManeuverCreateParams.PreEventElset.SourcedDataType.RADAR)
              .addSourcedDataType(ManeuverCreateParams.PreEventElset.SourcedDataType.RF)
              .sourceDl("AXE")
              .addTag("PROVIDER_TAG1")
              .addTag("PROVIDER_TAG2")
              .transactionId("TRANSACTION-ID")
              .uct(false)
              .build())
          .preEventIdElset("80e544b7-6a17-4554-8abf-7301e98f8e5d")
          .preEventIdStateVector("6e291992-8ae3-4592-bb0f-055715bf4803")
          .preEventStateVector(ManeuverCreateParams.PreEventStateVector.builder()
              .classificationMarking("U")
              .dataMode(ManeuverCreateParams.PreEventStateVector.DataMode.TEST)
              .epoch(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
              .source("Bluestaq")
              .actualOdSpan(3.5)
              .algorithm("SAMPLE_ALGORITHM")
              .alt1ReferenceFrame("TEME")
              .alt2ReferenceFrame("EFG/TDR")
              .area(5.065)
              .bDot(1.23)
              .cmOffset(1.23)
              .cov(listOf(
                1.1,
                2.4,
                3.8,
                4.2,
                5.5,
                6.0,
              ))
              .covMethod("CALCULATED")
              .covReferenceFrame(ManeuverCreateParams.PreEventStateVector.CovReferenceFrame.J2000)
              .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
              .createdBy("some.user")
              .descriptor("descriptor")
              .dragArea(4.739)
              .dragCoeff(0.0224391269775)
              .dragModel("JAC70")
              .edr(1.23)
              .addEqCov(1.1)
              .addEqCov(2.2)
              .errorControl(1.23)
              .fixedStep(true)
              .geopotentialModel("EGM-96")
              .iau1980Terms(4)
              .idOnOrbit("ONORBIT-ID")
              .idOrbitDetermination("026dd511-8ba5-47d3-9909-836149f87686")
              .idStateVector("STATEVECTOR-ID")
              .integratorMode("integratorMode")
              .inTrackThrust(true)
              .lastObEnd(OffsetDateTime.parse("2022-11-09T11:20:21.247192Z"))
              .lastObStart(OffsetDateTime.parse("2022-11-09T11:20:21.247192Z"))
              .leapSecondTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
              .lunarSolar(true)
              .mass(164.5)
              .obsAvailable(376)
              .obsUsed(374)
              .origin("THIRD_PARTY_DATASOURCE")
              .origNetwork("ORIG")
              .origObjectId("ORIGOBJECT-ID")
              .partials("ANALYTIC")
              .pedigree("CONJUNCTION")
              .polarMotionX(1.23)
              .polarMotionY(1.23)
              .posUnc(0.333399744452)
              .rawFileUri("rawFileURI")
              .recOdSpan(3.5)
              .referenceFrame(ManeuverCreateParams.PreEventStateVector.ReferenceFrame.J2000)
              .residualsAcc(99.5)
              .revNo(7205)
              .rms(0.991)
              .satNo(12)
              .addSigmaPosUvw(1.23)
              .addSigmaPosUvw(4.56)
              .addSigmaVelUvw(1.23)
              .addSigmaVelUvw(4.56)
              .solarFluxApAvg(1.23)
              .solarFluxF10(1.23)
              .solarFluxF10Avg(1.23)
              .solarRadPress(true)
              .solarRadPressCoeff(0.0244394)
              .solidEarthTides(true)
              .addSourcedData("DATA1")
              .addSourcedData("DATA2")
              .addSourcedDataType(ManeuverCreateParams.PreEventStateVector.SourcedDataType.RADAR)
              .sourceDl("AXE")
              .srpArea(4.311)
              .stepMode("AUTO")
              .stepSize(1.23)
              .stepSizeSelection("AUTO")
              .addTag("TAG1")
              .addTag("TAG2")
              .taiUtc(1.23)
              .thrustAccel(1.23)
              .tracksAvail(163)
              .tracksUsed(163)
              .transactionId("transactionId")
              .uct(true)
              .ut1Rate(1.23)
              .ut1Utc(1.23)
              .velUnc(0.000004)
              .xaccel(-2.12621392)
              .xpos(-1118.577381)
              .xposAlt1(-1145.688502)
              .xposAlt2(-1456.915926)
              .xvel(-4.25242784)
              .xvelAlt1(-4.270832252)
              .xvelAlt2(-1.219814294)
              .yaccel(2.645553717)
              .ypos(3026.231084)
              .yposAlt1(3020.729572)
              .yposAlt2(-2883.540406)
              .yvel(5.291107434)
              .yvelAlt1(5.27074276)
              .yvelAlt2(-6.602080212)
              .zaccel(-1.06310696)
              .zpos(6167.831808)
              .zposAlt1(6165.55187)
              .zposAlt2(6165.55187)
              .zvel(-3.356493869)
              .zvelAlt1(-3.365155181)
              .zvelAlt2(-3.365155181)
              .build())
          .preGeoLongitude(-93.12)
          .preInclination(0.0336)
          .prePerigee(35786.5)
          .prePeriod(1436.12)
          .prePosX(3584.432545)
          .prePosY(42028.43245)
          .prePosZ(-1.97765)
          .preRaan(98.3336)
          .preRadiationPressCoeff(4.51e-7)
          .preSigmaU(0.215)
          .preSigmaV(1.97)
          .preSigmaW(0.208)
          .preSma(42165.1)
          .preVelX(-2.543266)
          .preVelY(0.24876)
          .preVelZ(0.0067352)
          .reportTime(OffsetDateTime.parse("2023-11-16T04:15:00.000100Z"))
          .satNo(12)
          .addSourcedData("SOURCEDDATA-ID")
          .addSourcedData("SOURCEDDATA-ID")
          .addSourcedDataType(ManeuverCreateParams.SourcedDataType.EO)
          .addSourcedDataType(ManeuverCreateParams.SourcedDataType.RADAR)
          .stateModel("Example name")
          .stateModelVersion(3.0)
          .status("POSSIBLE")
          .addTag("PROVIDER_TAG1")
          .addTag("PROVIDERTAG2")
          .totalBurnTime(600.72)
          .transactionId("TRANSACTION-ID")
          .uct(false)
          .build()
    }

    @Test
    fun body() {
      val params = ManeuverCreateParams.builder()
          .classificationMarking("U")
          .dataMode(ManeuverCreateParams.DataMode.TEST)
          .eventStartTime(OffsetDateTime.parse("2023-11-16T01:05:16.835689Z"))
          .source("Bluestaq")
          .id("MANEUVER-ID")
          .algorithm("Example algorithm")
          .characterization("North-South Station Keeping")
          .characterizationUnc(0.15)
          .cov(listOf(
            1.1,
            2.4,
            3.4,
            4.1,
            5.6,
            6.2,
            7.9,
            8.0,
            9.2,
            10.1,
          ))
          .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
          .createdBy("some.user")
          .deltaMass(0.15)
          .deltaPos(0.715998327)
          .deltaPosU(-0.022172844)
          .deltaPosV(-0.033700154)
          .deltaPosW(-0.714861014)
          .deltaVel(0.000631505)
          .deltaVelU(0.0000350165629389647)
          .deltaVelV(0.000544413)
          .deltaVelW(-0.000318099)
          .description("Example notes")
          .descriptor("Example descriptor")
          .eventEndTime(OffsetDateTime.parse("2023-11-16T01:09:01.350012Z"))
          .eventId("EVENT-ID")
          .idOnOrbit("12")
          .idSensor("SENSOR-ID")
          .maneuverUnc(0.5)
          .mnvrAccels(listOf(
            0.05,
            0.1,
            0.05,
          ))
          .mnvrAccelTimes(listOf(
            10.25,
            50.56,
            150.78,
          ))
          .mnvrAccelUncs(listOf(
            0.0005,
            0.001,
            0.0005,
          ))
          .numAccelPoints(3)
          .numObs(10)
          .odFitEndTime(OffsetDateTime.parse("2023-11-16T03:55:51.000000Z"))
          .origin("THIRD_PARTY_DATASOURCE")
          .origNetwork("ORIG")
          .origObjectId("ORIGOBJECT-ID")
          .origSensorId("ORIGSENSOR-ID")
          .postApogee(35800.1)
          .postArea(35.77)
          .postBallisticCoeff(0.000433209)
          .postDriftRate(-0.0125)
          .postEccentricity(0.000164)
          .postEventElset(ManeuverCreateParams.PostEventElset.builder()
              .classificationMarking("U")
              .dataMode(ManeuverCreateParams.PostEventElset.DataMode.TEST)
              .epoch(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
              .source("Bluestaq")
              .agom(0.0126)
              .algorithm("Example algorithm")
              .apogee(1.1)
              .argOfPerigee(1.1)
              .ballisticCoeff(0.00815)
              .bStar(1.1)
              .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
              .createdBy("some.user")
              .descriptor("Example description")
              .eccentricity(0.333)
              .ephemType(1L)
              .idElset("ELSET-ID")
              .idOnOrbit("ONORBIT-ID")
              .idOrbitDetermination("026dd511-8ba5-47d3-9909-836149f87686")
              .inclination(45.1)
              .line1("Example line1")
              .line2("Example line2")
              .meanAnomaly(179.1)
              .meanMotion(1.1)
              .meanMotionDDot(1.1)
              .meanMotionDot(1.1)
              .origin("THIRD_PARTY_DATASOURCE")
              .origNetwork("ORIG")
              .origObjectId("ORIGOBJECT-ID")
              .perigee(1.1)
              .period(1.1)
              .raan(1.1)
              .rawFileUri("Example URI")
              .revNo(111)
              .satNo(12)
              .semiMajorAxis(1.1)
              .addSourcedData("OBSERVATION_UUID1")
              .addSourcedData("OBSERVATION_UUID2")
              .addSourcedDataType(ManeuverCreateParams.PostEventElset.SourcedDataType.RADAR)
              .addSourcedDataType(ManeuverCreateParams.PostEventElset.SourcedDataType.RF)
              .sourceDl("AXE")
              .addTag("PROVIDER_TAG1")
              .addTag("PROVIDER_TAG2")
              .transactionId("TRANSACTION-ID")
              .uct(false)
              .build())
          .postEventIdElset("225adf4c-8606-40a8-929e-63e22cffe220")
          .postEventIdStateVector("d83a23f8-1496-485a-bd88-ec5808c73299")
          .postEventStateVector(ManeuverCreateParams.PostEventStateVector.builder()
              .classificationMarking("U")
              .dataMode(ManeuverCreateParams.PostEventStateVector.DataMode.TEST)
              .epoch(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
              .source("Bluestaq")
              .actualOdSpan(3.5)
              .algorithm("SAMPLE_ALGORITHM")
              .alt1ReferenceFrame("TEME")
              .alt2ReferenceFrame("EFG/TDR")
              .area(5.065)
              .bDot(1.23)
              .cmOffset(1.23)
              .cov(listOf(
                1.1,
                2.4,
                3.8,
                4.2,
                5.5,
                6.0,
              ))
              .covMethod("CALCULATED")
              .covReferenceFrame(ManeuverCreateParams.PostEventStateVector.CovReferenceFrame.J2000)
              .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
              .createdBy("some.user")
              .descriptor("descriptor")
              .dragArea(4.739)
              .dragCoeff(0.0224391269775)
              .dragModel("JAC70")
              .edr(1.23)
              .addEqCov(1.1)
              .addEqCov(2.2)
              .errorControl(1.23)
              .fixedStep(true)
              .geopotentialModel("EGM-96")
              .iau1980Terms(4)
              .idOnOrbit("ONORBIT-ID")
              .idOrbitDetermination("026dd511-8ba5-47d3-9909-836149f87686")
              .idStateVector("STATEVECTOR-ID")
              .integratorMode("integratorMode")
              .inTrackThrust(true)
              .lastObEnd(OffsetDateTime.parse("2022-11-09T11:20:21.247192Z"))
              .lastObStart(OffsetDateTime.parse("2022-11-09T11:20:21.247192Z"))
              .leapSecondTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
              .lunarSolar(true)
              .mass(164.5)
              .obsAvailable(376)
              .obsUsed(374)
              .origin("THIRD_PARTY_DATASOURCE")
              .origNetwork("ORIG")
              .origObjectId("ORIGOBJECT-ID")
              .partials("ANALYTIC")
              .pedigree("CONJUNCTION")
              .polarMotionX(1.23)
              .polarMotionY(1.23)
              .posUnc(0.333399744452)
              .rawFileUri("rawFileURI")
              .recOdSpan(3.5)
              .referenceFrame(ManeuverCreateParams.PostEventStateVector.ReferenceFrame.J2000)
              .residualsAcc(99.5)
              .revNo(7205)
              .rms(0.991)
              .satNo(12)
              .addSigmaPosUvw(1.23)
              .addSigmaPosUvw(4.56)
              .addSigmaVelUvw(1.23)
              .addSigmaVelUvw(4.56)
              .solarFluxApAvg(1.23)
              .solarFluxF10(1.23)
              .solarFluxF10Avg(1.23)
              .solarRadPress(true)
              .solarRadPressCoeff(0.0244394)
              .solidEarthTides(true)
              .addSourcedData("DATA1")
              .addSourcedData("DATA2")
              .addSourcedDataType(ManeuverCreateParams.PostEventStateVector.SourcedDataType.RADAR)
              .sourceDl("AXE")
              .srpArea(4.311)
              .stepMode("AUTO")
              .stepSize(1.23)
              .stepSizeSelection("AUTO")
              .addTag("TAG1")
              .addTag("TAG2")
              .taiUtc(1.23)
              .thrustAccel(1.23)
              .tracksAvail(163)
              .tracksUsed(163)
              .transactionId("transactionId")
              .uct(true)
              .ut1Rate(1.23)
              .ut1Utc(1.23)
              .velUnc(0.000004)
              .xaccel(-2.12621392)
              .xpos(-1118.577381)
              .xposAlt1(-1145.688502)
              .xposAlt2(-1456.915926)
              .xvel(-4.25242784)
              .xvelAlt1(-4.270832252)
              .xvelAlt2(-1.219814294)
              .yaccel(2.645553717)
              .ypos(3026.231084)
              .yposAlt1(3020.729572)
              .yposAlt2(-2883.540406)
              .yvel(5.291107434)
              .yvelAlt1(5.27074276)
              .yvelAlt2(-6.602080212)
              .zaccel(-1.06310696)
              .zpos(6167.831808)
              .zposAlt1(6165.55187)
              .zposAlt2(6165.55187)
              .zvel(-3.356493869)
              .zvelAlt1(-3.365155181)
              .zvelAlt2(-3.365155181)
              .build())
          .postGeoLongitude(-93.15)
          .postInclination(0.0327)
          .postMass(1844.5)
          .postPerigee(35787.9)
          .postPeriod(1436.01)
          .postPosX(3589.351957)
          .postPosY(42017.26823)
          .postPosZ(-1.27161796)
          .postRaan(98.3335)
          .postRadiationPressCoeff(4.51e-7)
          .postSigmaU(12.285)
          .postSigmaV(71.339)
          .postSigmaW(12.77)
          .postSma(42164.87)
          .postVelX(-3.063152826)
          .postVelY(0.261586769)
          .postVelZ(0.006842148)
          .preApogee(35802.0)
          .preBallisticCoeff(0.000437116)
          .preDriftRate(-0.0125)
          .preEccentricity(0.00017)
          .preEventElset(ManeuverCreateParams.PreEventElset.builder()
              .classificationMarking("U")
              .dataMode(ManeuverCreateParams.PreEventElset.DataMode.TEST)
              .epoch(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
              .source("Bluestaq")
              .agom(0.0126)
              .algorithm("Example algorithm")
              .apogee(1.1)
              .argOfPerigee(1.1)
              .ballisticCoeff(0.00815)
              .bStar(1.1)
              .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
              .createdBy("some.user")
              .descriptor("Example description")
              .eccentricity(0.333)
              .ephemType(1L)
              .idElset("ELSET-ID")
              .idOnOrbit("ONORBIT-ID")
              .idOrbitDetermination("026dd511-8ba5-47d3-9909-836149f87686")
              .inclination(45.1)
              .line1("Example line1")
              .line2("Example line2")
              .meanAnomaly(179.1)
              .meanMotion(1.1)
              .meanMotionDDot(1.1)
              .meanMotionDot(1.1)
              .origin("THIRD_PARTY_DATASOURCE")
              .origNetwork("ORIG")
              .origObjectId("ORIGOBJECT-ID")
              .perigee(1.1)
              .period(1.1)
              .raan(1.1)
              .rawFileUri("Example URI")
              .revNo(111)
              .satNo(12)
              .semiMajorAxis(1.1)
              .addSourcedData("OBSERVATION_UUID1")
              .addSourcedData("OBSERVATION_UUID2")
              .addSourcedDataType(ManeuverCreateParams.PreEventElset.SourcedDataType.RADAR)
              .addSourcedDataType(ManeuverCreateParams.PreEventElset.SourcedDataType.RF)
              .sourceDl("AXE")
              .addTag("PROVIDER_TAG1")
              .addTag("PROVIDER_TAG2")
              .transactionId("TRANSACTION-ID")
              .uct(false)
              .build())
          .preEventIdElset("80e544b7-6a17-4554-8abf-7301e98f8e5d")
          .preEventIdStateVector("6e291992-8ae3-4592-bb0f-055715bf4803")
          .preEventStateVector(ManeuverCreateParams.PreEventStateVector.builder()
              .classificationMarking("U")
              .dataMode(ManeuverCreateParams.PreEventStateVector.DataMode.TEST)
              .epoch(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
              .source("Bluestaq")
              .actualOdSpan(3.5)
              .algorithm("SAMPLE_ALGORITHM")
              .alt1ReferenceFrame("TEME")
              .alt2ReferenceFrame("EFG/TDR")
              .area(5.065)
              .bDot(1.23)
              .cmOffset(1.23)
              .cov(listOf(
                1.1,
                2.4,
                3.8,
                4.2,
                5.5,
                6.0,
              ))
              .covMethod("CALCULATED")
              .covReferenceFrame(ManeuverCreateParams.PreEventStateVector.CovReferenceFrame.J2000)
              .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
              .createdBy("some.user")
              .descriptor("descriptor")
              .dragArea(4.739)
              .dragCoeff(0.0224391269775)
              .dragModel("JAC70")
              .edr(1.23)
              .addEqCov(1.1)
              .addEqCov(2.2)
              .errorControl(1.23)
              .fixedStep(true)
              .geopotentialModel("EGM-96")
              .iau1980Terms(4)
              .idOnOrbit("ONORBIT-ID")
              .idOrbitDetermination("026dd511-8ba5-47d3-9909-836149f87686")
              .idStateVector("STATEVECTOR-ID")
              .integratorMode("integratorMode")
              .inTrackThrust(true)
              .lastObEnd(OffsetDateTime.parse("2022-11-09T11:20:21.247192Z"))
              .lastObStart(OffsetDateTime.parse("2022-11-09T11:20:21.247192Z"))
              .leapSecondTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
              .lunarSolar(true)
              .mass(164.5)
              .obsAvailable(376)
              .obsUsed(374)
              .origin("THIRD_PARTY_DATASOURCE")
              .origNetwork("ORIG")
              .origObjectId("ORIGOBJECT-ID")
              .partials("ANALYTIC")
              .pedigree("CONJUNCTION")
              .polarMotionX(1.23)
              .polarMotionY(1.23)
              .posUnc(0.333399744452)
              .rawFileUri("rawFileURI")
              .recOdSpan(3.5)
              .referenceFrame(ManeuverCreateParams.PreEventStateVector.ReferenceFrame.J2000)
              .residualsAcc(99.5)
              .revNo(7205)
              .rms(0.991)
              .satNo(12)
              .addSigmaPosUvw(1.23)
              .addSigmaPosUvw(4.56)
              .addSigmaVelUvw(1.23)
              .addSigmaVelUvw(4.56)
              .solarFluxApAvg(1.23)
              .solarFluxF10(1.23)
              .solarFluxF10Avg(1.23)
              .solarRadPress(true)
              .solarRadPressCoeff(0.0244394)
              .solidEarthTides(true)
              .addSourcedData("DATA1")
              .addSourcedData("DATA2")
              .addSourcedDataType(ManeuverCreateParams.PreEventStateVector.SourcedDataType.RADAR)
              .sourceDl("AXE")
              .srpArea(4.311)
              .stepMode("AUTO")
              .stepSize(1.23)
              .stepSizeSelection("AUTO")
              .addTag("TAG1")
              .addTag("TAG2")
              .taiUtc(1.23)
              .thrustAccel(1.23)
              .tracksAvail(163)
              .tracksUsed(163)
              .transactionId("transactionId")
              .uct(true)
              .ut1Rate(1.23)
              .ut1Utc(1.23)
              .velUnc(0.000004)
              .xaccel(-2.12621392)
              .xpos(-1118.577381)
              .xposAlt1(-1145.688502)
              .xposAlt2(-1456.915926)
              .xvel(-4.25242784)
              .xvelAlt1(-4.270832252)
              .xvelAlt2(-1.219814294)
              .yaccel(2.645553717)
              .ypos(3026.231084)
              .yposAlt1(3020.729572)
              .yposAlt2(-2883.540406)
              .yvel(5.291107434)
              .yvelAlt1(5.27074276)
              .yvelAlt2(-6.602080212)
              .zaccel(-1.06310696)
              .zpos(6167.831808)
              .zposAlt1(6165.55187)
              .zposAlt2(6165.55187)
              .zvel(-3.356493869)
              .zvelAlt1(-3.365155181)
              .zvelAlt2(-3.365155181)
              .build())
          .preGeoLongitude(-93.12)
          .preInclination(0.0336)
          .prePerigee(35786.5)
          .prePeriod(1436.12)
          .prePosX(3584.432545)
          .prePosY(42028.43245)
          .prePosZ(-1.97765)
          .preRaan(98.3336)
          .preRadiationPressCoeff(4.51e-7)
          .preSigmaU(0.215)
          .preSigmaV(1.97)
          .preSigmaW(0.208)
          .preSma(42165.1)
          .preVelX(-2.543266)
          .preVelY(0.24876)
          .preVelZ(0.0067352)
          .reportTime(OffsetDateTime.parse("2023-11-16T04:15:00.000100Z"))
          .satNo(12)
          .addSourcedData("SOURCEDDATA-ID")
          .addSourcedData("SOURCEDDATA-ID")
          .addSourcedDataType(ManeuverCreateParams.SourcedDataType.EO)
          .addSourcedDataType(ManeuverCreateParams.SourcedDataType.RADAR)
          .stateModel("Example name")
          .stateModelVersion(3.0)
          .status("POSSIBLE")
          .addTag("PROVIDER_TAG1")
          .addTag("PROVIDERTAG2")
          .totalBurnTime(600.72)
          .transactionId("TRANSACTION-ID")
          .uct(false)
          .build()

      val body = params._body()

      assertThat(body.classificationMarking()).isEqualTo("U")
      assertThat(body.dataMode()).isEqualTo(ManeuverCreateParams.DataMode.TEST)
      assertThat(body.eventStartTime()).isEqualTo(OffsetDateTime.parse("2023-11-16T01:05:16.835689Z"))
      assertThat(body.source()).isEqualTo("Bluestaq")
      assertThat(body.id()).contains("MANEUVER-ID")
      assertThat(body.algorithm()).contains("Example algorithm")
      assertThat(body.characterization()).contains("North-South Station Keeping")
      assertThat(body.characterizationUnc()).contains(0.15)
      assertThat(body.cov().getOrNull()).containsExactly(1.1, 2.4, 3.4, 4.1, 5.6, 6.2, 7.9, 8.0, 9.2, 10.1)
      assertThat(body.createdAt()).contains(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
      assertThat(body.createdBy()).contains("some.user")
      assertThat(body.deltaMass()).contains(0.15)
      assertThat(body.deltaPos()).contains(0.715998327)
      assertThat(body.deltaPosU()).contains(-0.022172844)
      assertThat(body.deltaPosV()).contains(-0.033700154)
      assertThat(body.deltaPosW()).contains(-0.714861014)
      assertThat(body.deltaVel()).contains(0.000631505)
      assertThat(body.deltaVelU()).contains(0.0000350165629389647)
      assertThat(body.deltaVelV()).contains(0.000544413)
      assertThat(body.deltaVelW()).contains(-0.000318099)
      assertThat(body.description()).contains("Example notes")
      assertThat(body.descriptor()).contains("Example descriptor")
      assertThat(body.eventEndTime()).contains(OffsetDateTime.parse("2023-11-16T01:09:01.350012Z"))
      assertThat(body.eventId()).contains("EVENT-ID")
      assertThat(body.idOnOrbit()).contains("12")
      assertThat(body.idSensor()).contains("SENSOR-ID")
      assertThat(body.maneuverUnc()).contains(0.5)
      assertThat(body.mnvrAccels().getOrNull()).containsExactly(0.05, 0.1, 0.05)
      assertThat(body.mnvrAccelTimes().getOrNull()).containsExactly(10.25, 50.56, 150.78)
      assertThat(body.mnvrAccelUncs().getOrNull()).containsExactly(0.0005, 0.001, 0.0005)
      assertThat(body.numAccelPoints()).contains(3)
      assertThat(body.numObs()).contains(10)
      assertThat(body.odFitEndTime()).contains(OffsetDateTime.parse("2023-11-16T03:55:51.000000Z"))
      assertThat(body.origin()).contains("THIRD_PARTY_DATASOURCE")
      assertThat(body.origNetwork()).contains("ORIG")
      assertThat(body.origObjectId()).contains("ORIGOBJECT-ID")
      assertThat(body.origSensorId()).contains("ORIGSENSOR-ID")
      assertThat(body.postApogee()).contains(35800.1)
      assertThat(body.postArea()).contains(35.77)
      assertThat(body.postBallisticCoeff()).contains(0.000433209)
      assertThat(body.postDriftRate()).contains(-0.0125)
      assertThat(body.postEccentricity()).contains(0.000164)
      assertThat(body.postEventElset()).contains(ManeuverCreateParams.PostEventElset.builder()
          .classificationMarking("U")
          .dataMode(ManeuverCreateParams.PostEventElset.DataMode.TEST)
          .epoch(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
          .source("Bluestaq")
          .agom(0.0126)
          .algorithm("Example algorithm")
          .apogee(1.1)
          .argOfPerigee(1.1)
          .ballisticCoeff(0.00815)
          .bStar(1.1)
          .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
          .createdBy("some.user")
          .descriptor("Example description")
          .eccentricity(0.333)
          .ephemType(1L)
          .idElset("ELSET-ID")
          .idOnOrbit("ONORBIT-ID")
          .idOrbitDetermination("026dd511-8ba5-47d3-9909-836149f87686")
          .inclination(45.1)
          .line1("Example line1")
          .line2("Example line2")
          .meanAnomaly(179.1)
          .meanMotion(1.1)
          .meanMotionDDot(1.1)
          .meanMotionDot(1.1)
          .origin("THIRD_PARTY_DATASOURCE")
          .origNetwork("ORIG")
          .origObjectId("ORIGOBJECT-ID")
          .perigee(1.1)
          .period(1.1)
          .raan(1.1)
          .rawFileUri("Example URI")
          .revNo(111)
          .satNo(12)
          .semiMajorAxis(1.1)
          .addSourcedData("OBSERVATION_UUID1")
          .addSourcedData("OBSERVATION_UUID2")
          .addSourcedDataType(ManeuverCreateParams.PostEventElset.SourcedDataType.RADAR)
          .addSourcedDataType(ManeuverCreateParams.PostEventElset.SourcedDataType.RF)
          .sourceDl("AXE")
          .addTag("PROVIDER_TAG1")
          .addTag("PROVIDER_TAG2")
          .transactionId("TRANSACTION-ID")
          .uct(false)
          .build())
      assertThat(body.postEventIdElset()).contains("225adf4c-8606-40a8-929e-63e22cffe220")
      assertThat(body.postEventIdStateVector()).contains("d83a23f8-1496-485a-bd88-ec5808c73299")
      assertThat(body.postEventStateVector()).contains(ManeuverCreateParams.PostEventStateVector.builder()
          .classificationMarking("U")
          .dataMode(ManeuverCreateParams.PostEventStateVector.DataMode.TEST)
          .epoch(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
          .source("Bluestaq")
          .actualOdSpan(3.5)
          .algorithm("SAMPLE_ALGORITHM")
          .alt1ReferenceFrame("TEME")
          .alt2ReferenceFrame("EFG/TDR")
          .area(5.065)
          .bDot(1.23)
          .cmOffset(1.23)
          .cov(listOf(
            1.1,
            2.4,
            3.8,
            4.2,
            5.5,
            6.0,
          ))
          .covMethod("CALCULATED")
          .covReferenceFrame(ManeuverCreateParams.PostEventStateVector.CovReferenceFrame.J2000)
          .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
          .createdBy("some.user")
          .descriptor("descriptor")
          .dragArea(4.739)
          .dragCoeff(0.0224391269775)
          .dragModel("JAC70")
          .edr(1.23)
          .addEqCov(1.1)
          .addEqCov(2.2)
          .errorControl(1.23)
          .fixedStep(true)
          .geopotentialModel("EGM-96")
          .iau1980Terms(4)
          .idOnOrbit("ONORBIT-ID")
          .idOrbitDetermination("026dd511-8ba5-47d3-9909-836149f87686")
          .idStateVector("STATEVECTOR-ID")
          .integratorMode("integratorMode")
          .inTrackThrust(true)
          .lastObEnd(OffsetDateTime.parse("2022-11-09T11:20:21.247192Z"))
          .lastObStart(OffsetDateTime.parse("2022-11-09T11:20:21.247192Z"))
          .leapSecondTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
          .lunarSolar(true)
          .mass(164.5)
          .obsAvailable(376)
          .obsUsed(374)
          .origin("THIRD_PARTY_DATASOURCE")
          .origNetwork("ORIG")
          .origObjectId("ORIGOBJECT-ID")
          .partials("ANALYTIC")
          .pedigree("CONJUNCTION")
          .polarMotionX(1.23)
          .polarMotionY(1.23)
          .posUnc(0.333399744452)
          .rawFileUri("rawFileURI")
          .recOdSpan(3.5)
          .referenceFrame(ManeuverCreateParams.PostEventStateVector.ReferenceFrame.J2000)
          .residualsAcc(99.5)
          .revNo(7205)
          .rms(0.991)
          .satNo(12)
          .addSigmaPosUvw(1.23)
          .addSigmaPosUvw(4.56)
          .addSigmaVelUvw(1.23)
          .addSigmaVelUvw(4.56)
          .solarFluxApAvg(1.23)
          .solarFluxF10(1.23)
          .solarFluxF10Avg(1.23)
          .solarRadPress(true)
          .solarRadPressCoeff(0.0244394)
          .solidEarthTides(true)
          .addSourcedData("DATA1")
          .addSourcedData("DATA2")
          .addSourcedDataType(ManeuverCreateParams.PostEventStateVector.SourcedDataType.RADAR)
          .sourceDl("AXE")
          .srpArea(4.311)
          .stepMode("AUTO")
          .stepSize(1.23)
          .stepSizeSelection("AUTO")
          .addTag("TAG1")
          .addTag("TAG2")
          .taiUtc(1.23)
          .thrustAccel(1.23)
          .tracksAvail(163)
          .tracksUsed(163)
          .transactionId("transactionId")
          .uct(true)
          .ut1Rate(1.23)
          .ut1Utc(1.23)
          .velUnc(0.000004)
          .xaccel(-2.12621392)
          .xpos(-1118.577381)
          .xposAlt1(-1145.688502)
          .xposAlt2(-1456.915926)
          .xvel(-4.25242784)
          .xvelAlt1(-4.270832252)
          .xvelAlt2(-1.219814294)
          .yaccel(2.645553717)
          .ypos(3026.231084)
          .yposAlt1(3020.729572)
          .yposAlt2(-2883.540406)
          .yvel(5.291107434)
          .yvelAlt1(5.27074276)
          .yvelAlt2(-6.602080212)
          .zaccel(-1.06310696)
          .zpos(6167.831808)
          .zposAlt1(6165.55187)
          .zposAlt2(6165.55187)
          .zvel(-3.356493869)
          .zvelAlt1(-3.365155181)
          .zvelAlt2(-3.365155181)
          .build())
      assertThat(body.postGeoLongitude()).contains(-93.15)
      assertThat(body.postInclination()).contains(0.0327)
      assertThat(body.postMass()).contains(1844.5)
      assertThat(body.postPerigee()).contains(35787.9)
      assertThat(body.postPeriod()).contains(1436.01)
      assertThat(body.postPosX()).contains(3589.351957)
      assertThat(body.postPosY()).contains(42017.26823)
      assertThat(body.postPosZ()).contains(-1.27161796)
      assertThat(body.postRaan()).contains(98.3335)
      assertThat(body.postRadiationPressCoeff()).contains(4.51e-7)
      assertThat(body.postSigmaU()).contains(12.285)
      assertThat(body.postSigmaV()).contains(71.339)
      assertThat(body.postSigmaW()).contains(12.77)
      assertThat(body.postSma()).contains(42164.87)
      assertThat(body.postVelX()).contains(-3.063152826)
      assertThat(body.postVelY()).contains(0.261586769)
      assertThat(body.postVelZ()).contains(0.006842148)
      assertThat(body.preApogee()).contains(35802.0)
      assertThat(body.preBallisticCoeff()).contains(0.000437116)
      assertThat(body.preDriftRate()).contains(-0.0125)
      assertThat(body.preEccentricity()).contains(0.00017)
      assertThat(body.preEventElset()).contains(ManeuverCreateParams.PreEventElset.builder()
          .classificationMarking("U")
          .dataMode(ManeuverCreateParams.PreEventElset.DataMode.TEST)
          .epoch(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
          .source("Bluestaq")
          .agom(0.0126)
          .algorithm("Example algorithm")
          .apogee(1.1)
          .argOfPerigee(1.1)
          .ballisticCoeff(0.00815)
          .bStar(1.1)
          .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
          .createdBy("some.user")
          .descriptor("Example description")
          .eccentricity(0.333)
          .ephemType(1L)
          .idElset("ELSET-ID")
          .idOnOrbit("ONORBIT-ID")
          .idOrbitDetermination("026dd511-8ba5-47d3-9909-836149f87686")
          .inclination(45.1)
          .line1("Example line1")
          .line2("Example line2")
          .meanAnomaly(179.1)
          .meanMotion(1.1)
          .meanMotionDDot(1.1)
          .meanMotionDot(1.1)
          .origin("THIRD_PARTY_DATASOURCE")
          .origNetwork("ORIG")
          .origObjectId("ORIGOBJECT-ID")
          .perigee(1.1)
          .period(1.1)
          .raan(1.1)
          .rawFileUri("Example URI")
          .revNo(111)
          .satNo(12)
          .semiMajorAxis(1.1)
          .addSourcedData("OBSERVATION_UUID1")
          .addSourcedData("OBSERVATION_UUID2")
          .addSourcedDataType(ManeuverCreateParams.PreEventElset.SourcedDataType.RADAR)
          .addSourcedDataType(ManeuverCreateParams.PreEventElset.SourcedDataType.RF)
          .sourceDl("AXE")
          .addTag("PROVIDER_TAG1")
          .addTag("PROVIDER_TAG2")
          .transactionId("TRANSACTION-ID")
          .uct(false)
          .build())
      assertThat(body.preEventIdElset()).contains("80e544b7-6a17-4554-8abf-7301e98f8e5d")
      assertThat(body.preEventIdStateVector()).contains("6e291992-8ae3-4592-bb0f-055715bf4803")
      assertThat(body.preEventStateVector()).contains(ManeuverCreateParams.PreEventStateVector.builder()
          .classificationMarking("U")
          .dataMode(ManeuverCreateParams.PreEventStateVector.DataMode.TEST)
          .epoch(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
          .source("Bluestaq")
          .actualOdSpan(3.5)
          .algorithm("SAMPLE_ALGORITHM")
          .alt1ReferenceFrame("TEME")
          .alt2ReferenceFrame("EFG/TDR")
          .area(5.065)
          .bDot(1.23)
          .cmOffset(1.23)
          .cov(listOf(
            1.1,
            2.4,
            3.8,
            4.2,
            5.5,
            6.0,
          ))
          .covMethod("CALCULATED")
          .covReferenceFrame(ManeuverCreateParams.PreEventStateVector.CovReferenceFrame.J2000)
          .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
          .createdBy("some.user")
          .descriptor("descriptor")
          .dragArea(4.739)
          .dragCoeff(0.0224391269775)
          .dragModel("JAC70")
          .edr(1.23)
          .addEqCov(1.1)
          .addEqCov(2.2)
          .errorControl(1.23)
          .fixedStep(true)
          .geopotentialModel("EGM-96")
          .iau1980Terms(4)
          .idOnOrbit("ONORBIT-ID")
          .idOrbitDetermination("026dd511-8ba5-47d3-9909-836149f87686")
          .idStateVector("STATEVECTOR-ID")
          .integratorMode("integratorMode")
          .inTrackThrust(true)
          .lastObEnd(OffsetDateTime.parse("2022-11-09T11:20:21.247192Z"))
          .lastObStart(OffsetDateTime.parse("2022-11-09T11:20:21.247192Z"))
          .leapSecondTime(OffsetDateTime.parse("2021-01-01T01:01:01.123Z"))
          .lunarSolar(true)
          .mass(164.5)
          .obsAvailable(376)
          .obsUsed(374)
          .origin("THIRD_PARTY_DATASOURCE")
          .origNetwork("ORIG")
          .origObjectId("ORIGOBJECT-ID")
          .partials("ANALYTIC")
          .pedigree("CONJUNCTION")
          .polarMotionX(1.23)
          .polarMotionY(1.23)
          .posUnc(0.333399744452)
          .rawFileUri("rawFileURI")
          .recOdSpan(3.5)
          .referenceFrame(ManeuverCreateParams.PreEventStateVector.ReferenceFrame.J2000)
          .residualsAcc(99.5)
          .revNo(7205)
          .rms(0.991)
          .satNo(12)
          .addSigmaPosUvw(1.23)
          .addSigmaPosUvw(4.56)
          .addSigmaVelUvw(1.23)
          .addSigmaVelUvw(4.56)
          .solarFluxApAvg(1.23)
          .solarFluxF10(1.23)
          .solarFluxF10Avg(1.23)
          .solarRadPress(true)
          .solarRadPressCoeff(0.0244394)
          .solidEarthTides(true)
          .addSourcedData("DATA1")
          .addSourcedData("DATA2")
          .addSourcedDataType(ManeuverCreateParams.PreEventStateVector.SourcedDataType.RADAR)
          .sourceDl("AXE")
          .srpArea(4.311)
          .stepMode("AUTO")
          .stepSize(1.23)
          .stepSizeSelection("AUTO")
          .addTag("TAG1")
          .addTag("TAG2")
          .taiUtc(1.23)
          .thrustAccel(1.23)
          .tracksAvail(163)
          .tracksUsed(163)
          .transactionId("transactionId")
          .uct(true)
          .ut1Rate(1.23)
          .ut1Utc(1.23)
          .velUnc(0.000004)
          .xaccel(-2.12621392)
          .xpos(-1118.577381)
          .xposAlt1(-1145.688502)
          .xposAlt2(-1456.915926)
          .xvel(-4.25242784)
          .xvelAlt1(-4.270832252)
          .xvelAlt2(-1.219814294)
          .yaccel(2.645553717)
          .ypos(3026.231084)
          .yposAlt1(3020.729572)
          .yposAlt2(-2883.540406)
          .yvel(5.291107434)
          .yvelAlt1(5.27074276)
          .yvelAlt2(-6.602080212)
          .zaccel(-1.06310696)
          .zpos(6167.831808)
          .zposAlt1(6165.55187)
          .zposAlt2(6165.55187)
          .zvel(-3.356493869)
          .zvelAlt1(-3.365155181)
          .zvelAlt2(-3.365155181)
          .build())
      assertThat(body.preGeoLongitude()).contains(-93.12)
      assertThat(body.preInclination()).contains(0.0336)
      assertThat(body.prePerigee()).contains(35786.5)
      assertThat(body.prePeriod()).contains(1436.12)
      assertThat(body.prePosX()).contains(3584.432545)
      assertThat(body.prePosY()).contains(42028.43245)
      assertThat(body.prePosZ()).contains(-1.97765)
      assertThat(body.preRaan()).contains(98.3336)
      assertThat(body.preRadiationPressCoeff()).contains(4.51e-7)
      assertThat(body.preSigmaU()).contains(0.215)
      assertThat(body.preSigmaV()).contains(1.97)
      assertThat(body.preSigmaW()).contains(0.208)
      assertThat(body.preSma()).contains(42165.1)
      assertThat(body.preVelX()).contains(-2.543266)
      assertThat(body.preVelY()).contains(0.24876)
      assertThat(body.preVelZ()).contains(0.0067352)
      assertThat(body.reportTime()).contains(OffsetDateTime.parse("2023-11-16T04:15:00.000100Z"))
      assertThat(body.satNo()).contains(12)
      assertThat(body.sourcedData().getOrNull()).containsExactly("SOURCEDDATA-ID", "SOURCEDDATA-ID")
      assertThat(body.sourcedDataTypes().getOrNull()).containsExactly(ManeuverCreateParams.SourcedDataType.EO, ManeuverCreateParams.SourcedDataType.RADAR)
      assertThat(body.stateModel()).contains("Example name")
      assertThat(body.stateModelVersion()).contains(3.0)
      assertThat(body.status()).contains("POSSIBLE")
      assertThat(body.tags().getOrNull()).containsExactly("PROVIDER_TAG1", "PROVIDERTAG2")
      assertThat(body.totalBurnTime()).contains(600.72)
      assertThat(body.transactionId()).contains("TRANSACTION-ID")
      assertThat(body.uct()).contains(false)
    }

    @Test
    fun bodyWithoutOptionalFields() {
      val params = ManeuverCreateParams.builder()
          .classificationMarking("U")
          .dataMode(ManeuverCreateParams.DataMode.TEST)
          .eventStartTime(OffsetDateTime.parse("2023-11-16T01:05:16.835689Z"))
          .source("Bluestaq")
          .build()

      val body = params._body()

      assertThat(body.classificationMarking()).isEqualTo("U")
      assertThat(body.dataMode()).isEqualTo(ManeuverCreateParams.DataMode.TEST)
      assertThat(body.eventStartTime()).isEqualTo(OffsetDateTime.parse("2023-11-16T01:05:16.835689Z"))
      assertThat(body.source()).isEqualTo("Bluestaq")
    }
}
