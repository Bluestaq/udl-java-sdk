// File generated from our OpenAPI spec by Stainless.

package com.unifieddatalibrary.api.models.linkstatus.datalink

import java.time.OffsetDateTime
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class DatalinkUnvalidatedPublishParamsTest {

    @Test
    fun create() {
        DatalinkUnvalidatedPublishParams.builder()
            .addBody(
                DatalinkIngest.builder()
                    .classificationMarking("U")
                    .dataMode(DatalinkIngest.DataMode.TEST)
                    .opExName("DESERT WIND")
                    .originator("USCENTCOM")
                    .source("Bluestaq")
                    .startTime(OffsetDateTime.parse("2024-01-07T13:55:43.123Z"))
                    .id("026dd511-8ba5-47d3-9909-836149f87686")
                    .addAckInstUnit("AOC EXT 2345")
                    .addAckInstUnit("317 AW")
                    .ackReq(true)
                    .altDiff(20)
                    .canxId("ABSTAT")
                    .canxOriginator("505 AOC")
                    .canxSerialNum("ABC1234567")
                    .addCanxSiC("RDU")
                    .addCanxSiC("X234BS")
                    .canxSpecialNotation("PASEP")
                    .canxTs(OffsetDateTime.parse("2024-01-07T13:55:43.123Z"))
                    .addClassReason("15C")
                    .addClassReason("15D")
                    .classSource("USJFCOM EXORD SOLID WASTE 98")
                    .consecDecorr(3)
                    .courseDiff(60)
                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .addDecExemptCode("X1")
                    .addDecExemptCode("X2")
                    .addDecInstDate("AT EXERCISE ENDEX")
                    .addDecInstDate("DATE:25NOV1997")
                    .decorrWinMult(1.7)
                    .geoDatum("EUR-T")
                    .jreCallSign("CHARLIE ONE")
                    .jreDetails("JRE details")
                    .jrePriAdd(71777)
                    .jreSecAdd(77771)
                    .jreUnitDes("CVN-72")
                    .maxGeoPosQual(12)
                    .maxTrackQual(12)
                    .mgmtCode("VICTOR")
                    .mgmtCodeMeaning("ORBIT AT POINT BRAVO")
                    .minGeoPosQual(3)
                    .minTrackQual(6)
                    .month("OCT")
                    .addMultiDuty(
                        DatalinkIngest.MultiDuty.builder()
                            .duty("SICO")
                            .addDutyTeleFreqNum("TEL:804-555-4142")
                            .addDutyTeleFreqNum("TEL:804-867-5309")
                            .addMultiDutyVoiceCoord(
                                DatalinkIngest.MultiDuty.MultiDutyVoiceCoord.builder()
                                    .multiCommPri("P")
                                    .multiFreqDes("ST300A")
                                    .addMultiTeleFreqNum("TEL:804-555-4142")
                                    .addMultiTeleFreqNum("TEL:804-867-5309")
                                    .multiVoiceNetDes("VPN")
                                    .build()
                            )
                            .name("POPOVICH")
                            .rank("LCDR")
                            .unitDes("SHIP:STENNIS")
                            .build()
                    )
                    .addNonLinkUnitDe("CS:GRAY GHOST")
                    .addNonLinkUnitDe("CS:WHITE WHALE")
                    .opExInfo("CONTROL")
                    .opExInfoAlt("ORANGE")
                    .addOp(
                        DatalinkIngest.Op.builder()
                            .linkDetails("Link details")
                            .linkName("Link-16")
                            .linkStartTime(OffsetDateTime.parse("2024-01-07T13:55:43.123Z"))
                            .linkStopTime(OffsetDateTime.parse("2024-01-08T13:55:43.123Z"))
                            .linkStopTimeMod("AFTER")
                            .build()
                    )
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("OPS1")
                    .planOrigNum("SACEUR 106")
                    .pocCallSign("4077 MASH")
                    .pocLat(45.23)
                    .pocLocName("CAMP SWAMPY")
                    .pocLon(179.1)
                    .pocName("F. BURNS")
                    .addPocNum("TEL:804-555-4142")
                    .addPocNum("TEL:804-867-5309")
                    .pocRank("MAJ")
                    .qualifier("CHG")
                    .qualSn(1)
                    .addReference(
                        DatalinkIngest.Reference.builder()
                            .refOriginator("CENTCOM")
                            .refSerialId("A")
                            .refSerialNum("1402001")
                            .addRefSiC("RDU")
                            .addRefSiC("C-123-92")
                            .refSpecialNotation("NOTAL")
                            .refTs(OffsetDateTime.parse("2024-01-07T13:55:43.123Z"))
                            .refType("ABSTAT")
                            .build()
                    )
                    .addRefPoint(
                        DatalinkIngest.RefPoint.builder()
                            .effEventTime(OffsetDateTime.parse("2024-01-08T13:55:43.123Z"))
                            .refDes("L5")
                            .refLat(45.23)
                            .refLocName("FORT BRAGG")
                            .refLon(179.1)
                            .refPointType("DLRP")
                            .build()
                    )
                    .addRemark(
                        DatalinkIngest.Remark.builder()
                            .text("Example data link remarks")
                            .type("CONTINGENCY PROCEDURES")
                            .build()
                    )
                    .resTrackQual(3)
                    .serialNum("1201003")
                    .sourceDl("AXE")
                    .addSpecTrack(
                        DatalinkIngest.SpecTrack.builder()
                            .specTrackNum("12345")
                            .specTrackNumDesc("SAM SITE CHARLIE")
                            .build()
                    )
                    .speedDiff(50)
                    .stopTime(OffsetDateTime.parse("2024-01-08T13:55:43.123Z"))
                    .stopTimeMod("AFTER")
                    .sysDefaultCode("MAN")
                    .addTrackNumBlockLl(1234)
                    .addTrackNumBlockLl(2345)
                    .addTrackNumBlock("0200-0300")
                    .addTrackNumBlock("0400-4412")
                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .updatedBy("some.user")
                    .addVoiceCoord(
                        DatalinkIngest.VoiceCoord.builder()
                            .commPri("P")
                            .freqDes("ST300A")
                            .addTeleFreqNum("TEL:804-555-4142")
                            .addTeleFreqNum("TEL:804-867-5309")
                            .voiceNetDes("VPN")
                            .build()
                    )
                    .winSizeMin(1.25)
                    .winSizeMult(2.1)
                    .build()
            )
            .build()
    }

    @Test
    fun body() {
        val params =
            DatalinkUnvalidatedPublishParams.builder()
                .addBody(
                    DatalinkIngest.builder()
                        .classificationMarking("U")
                        .dataMode(DatalinkIngest.DataMode.TEST)
                        .opExName("DESERT WIND")
                        .originator("USCENTCOM")
                        .source("Bluestaq")
                        .startTime(OffsetDateTime.parse("2024-01-07T13:55:43.123Z"))
                        .id("026dd511-8ba5-47d3-9909-836149f87686")
                        .addAckInstUnit("AOC EXT 2345")
                        .addAckInstUnit("317 AW")
                        .ackReq(true)
                        .altDiff(20)
                        .canxId("ABSTAT")
                        .canxOriginator("505 AOC")
                        .canxSerialNum("ABC1234567")
                        .addCanxSiC("RDU")
                        .addCanxSiC("X234BS")
                        .canxSpecialNotation("PASEP")
                        .canxTs(OffsetDateTime.parse("2024-01-07T13:55:43.123Z"))
                        .addClassReason("15C")
                        .addClassReason("15D")
                        .classSource("USJFCOM EXORD SOLID WASTE 98")
                        .consecDecorr(3)
                        .courseDiff(60)
                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .createdBy("some.user")
                        .addDecExemptCode("X1")
                        .addDecExemptCode("X2")
                        .addDecInstDate("AT EXERCISE ENDEX")
                        .addDecInstDate("DATE:25NOV1997")
                        .decorrWinMult(1.7)
                        .geoDatum("EUR-T")
                        .jreCallSign("CHARLIE ONE")
                        .jreDetails("JRE details")
                        .jrePriAdd(71777)
                        .jreSecAdd(77771)
                        .jreUnitDes("CVN-72")
                        .maxGeoPosQual(12)
                        .maxTrackQual(12)
                        .mgmtCode("VICTOR")
                        .mgmtCodeMeaning("ORBIT AT POINT BRAVO")
                        .minGeoPosQual(3)
                        .minTrackQual(6)
                        .month("OCT")
                        .addMultiDuty(
                            DatalinkIngest.MultiDuty.builder()
                                .duty("SICO")
                                .addDutyTeleFreqNum("TEL:804-555-4142")
                                .addDutyTeleFreqNum("TEL:804-867-5309")
                                .addMultiDutyVoiceCoord(
                                    DatalinkIngest.MultiDuty.MultiDutyVoiceCoord.builder()
                                        .multiCommPri("P")
                                        .multiFreqDes("ST300A")
                                        .addMultiTeleFreqNum("TEL:804-555-4142")
                                        .addMultiTeleFreqNum("TEL:804-867-5309")
                                        .multiVoiceNetDes("VPN")
                                        .build()
                                )
                                .name("POPOVICH")
                                .rank("LCDR")
                                .unitDes("SHIP:STENNIS")
                                .build()
                        )
                        .addNonLinkUnitDe("CS:GRAY GHOST")
                        .addNonLinkUnitDe("CS:WHITE WHALE")
                        .opExInfo("CONTROL")
                        .opExInfoAlt("ORANGE")
                        .addOp(
                            DatalinkIngest.Op.builder()
                                .linkDetails("Link details")
                                .linkName("Link-16")
                                .linkStartTime(OffsetDateTime.parse("2024-01-07T13:55:43.123Z"))
                                .linkStopTime(OffsetDateTime.parse("2024-01-08T13:55:43.123Z"))
                                .linkStopTimeMod("AFTER")
                                .build()
                        )
                        .origin("THIRD_PARTY_DATASOURCE")
                        .origNetwork("OPS1")
                        .planOrigNum("SACEUR 106")
                        .pocCallSign("4077 MASH")
                        .pocLat(45.23)
                        .pocLocName("CAMP SWAMPY")
                        .pocLon(179.1)
                        .pocName("F. BURNS")
                        .addPocNum("TEL:804-555-4142")
                        .addPocNum("TEL:804-867-5309")
                        .pocRank("MAJ")
                        .qualifier("CHG")
                        .qualSn(1)
                        .addReference(
                            DatalinkIngest.Reference.builder()
                                .refOriginator("CENTCOM")
                                .refSerialId("A")
                                .refSerialNum("1402001")
                                .addRefSiC("RDU")
                                .addRefSiC("C-123-92")
                                .refSpecialNotation("NOTAL")
                                .refTs(OffsetDateTime.parse("2024-01-07T13:55:43.123Z"))
                                .refType("ABSTAT")
                                .build()
                        )
                        .addRefPoint(
                            DatalinkIngest.RefPoint.builder()
                                .effEventTime(OffsetDateTime.parse("2024-01-08T13:55:43.123Z"))
                                .refDes("L5")
                                .refLat(45.23)
                                .refLocName("FORT BRAGG")
                                .refLon(179.1)
                                .refPointType("DLRP")
                                .build()
                        )
                        .addRemark(
                            DatalinkIngest.Remark.builder()
                                .text("Example data link remarks")
                                .type("CONTINGENCY PROCEDURES")
                                .build()
                        )
                        .resTrackQual(3)
                        .serialNum("1201003")
                        .sourceDl("AXE")
                        .addSpecTrack(
                            DatalinkIngest.SpecTrack.builder()
                                .specTrackNum("12345")
                                .specTrackNumDesc("SAM SITE CHARLIE")
                                .build()
                        )
                        .speedDiff(50)
                        .stopTime(OffsetDateTime.parse("2024-01-08T13:55:43.123Z"))
                        .stopTimeMod("AFTER")
                        .sysDefaultCode("MAN")
                        .addTrackNumBlockLl(1234)
                        .addTrackNumBlockLl(2345)
                        .addTrackNumBlock("0200-0300")
                        .addTrackNumBlock("0400-4412")
                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .updatedBy("some.user")
                        .addVoiceCoord(
                            DatalinkIngest.VoiceCoord.builder()
                                .commPri("P")
                                .freqDes("ST300A")
                                .addTeleFreqNum("TEL:804-555-4142")
                                .addTeleFreqNum("TEL:804-867-5309")
                                .voiceNetDes("VPN")
                                .build()
                        )
                        .winSizeMin(1.25)
                        .winSizeMult(2.1)
                        .build()
                )
                .build()

        val body = params._body()

        assertThat(body)
            .containsExactly(
                DatalinkIngest.builder()
                    .classificationMarking("U")
                    .dataMode(DatalinkIngest.DataMode.TEST)
                    .opExName("DESERT WIND")
                    .originator("USCENTCOM")
                    .source("Bluestaq")
                    .startTime(OffsetDateTime.parse("2024-01-07T13:55:43.123Z"))
                    .id("026dd511-8ba5-47d3-9909-836149f87686")
                    .addAckInstUnit("AOC EXT 2345")
                    .addAckInstUnit("317 AW")
                    .ackReq(true)
                    .altDiff(20)
                    .canxId("ABSTAT")
                    .canxOriginator("505 AOC")
                    .canxSerialNum("ABC1234567")
                    .addCanxSiC("RDU")
                    .addCanxSiC("X234BS")
                    .canxSpecialNotation("PASEP")
                    .canxTs(OffsetDateTime.parse("2024-01-07T13:55:43.123Z"))
                    .addClassReason("15C")
                    .addClassReason("15D")
                    .classSource("USJFCOM EXORD SOLID WASTE 98")
                    .consecDecorr(3)
                    .courseDiff(60)
                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .addDecExemptCode("X1")
                    .addDecExemptCode("X2")
                    .addDecInstDate("AT EXERCISE ENDEX")
                    .addDecInstDate("DATE:25NOV1997")
                    .decorrWinMult(1.7)
                    .geoDatum("EUR-T")
                    .jreCallSign("CHARLIE ONE")
                    .jreDetails("JRE details")
                    .jrePriAdd(71777)
                    .jreSecAdd(77771)
                    .jreUnitDes("CVN-72")
                    .maxGeoPosQual(12)
                    .maxTrackQual(12)
                    .mgmtCode("VICTOR")
                    .mgmtCodeMeaning("ORBIT AT POINT BRAVO")
                    .minGeoPosQual(3)
                    .minTrackQual(6)
                    .month("OCT")
                    .addMultiDuty(
                        DatalinkIngest.MultiDuty.builder()
                            .duty("SICO")
                            .addDutyTeleFreqNum("TEL:804-555-4142")
                            .addDutyTeleFreqNum("TEL:804-867-5309")
                            .addMultiDutyVoiceCoord(
                                DatalinkIngest.MultiDuty.MultiDutyVoiceCoord.builder()
                                    .multiCommPri("P")
                                    .multiFreqDes("ST300A")
                                    .addMultiTeleFreqNum("TEL:804-555-4142")
                                    .addMultiTeleFreqNum("TEL:804-867-5309")
                                    .multiVoiceNetDes("VPN")
                                    .build()
                            )
                            .name("POPOVICH")
                            .rank("LCDR")
                            .unitDes("SHIP:STENNIS")
                            .build()
                    )
                    .addNonLinkUnitDe("CS:GRAY GHOST")
                    .addNonLinkUnitDe("CS:WHITE WHALE")
                    .opExInfo("CONTROL")
                    .opExInfoAlt("ORANGE")
                    .addOp(
                        DatalinkIngest.Op.builder()
                            .linkDetails("Link details")
                            .linkName("Link-16")
                            .linkStartTime(OffsetDateTime.parse("2024-01-07T13:55:43.123Z"))
                            .linkStopTime(OffsetDateTime.parse("2024-01-08T13:55:43.123Z"))
                            .linkStopTimeMod("AFTER")
                            .build()
                    )
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("OPS1")
                    .planOrigNum("SACEUR 106")
                    .pocCallSign("4077 MASH")
                    .pocLat(45.23)
                    .pocLocName("CAMP SWAMPY")
                    .pocLon(179.1)
                    .pocName("F. BURNS")
                    .addPocNum("TEL:804-555-4142")
                    .addPocNum("TEL:804-867-5309")
                    .pocRank("MAJ")
                    .qualifier("CHG")
                    .qualSn(1)
                    .addReference(
                        DatalinkIngest.Reference.builder()
                            .refOriginator("CENTCOM")
                            .refSerialId("A")
                            .refSerialNum("1402001")
                            .addRefSiC("RDU")
                            .addRefSiC("C-123-92")
                            .refSpecialNotation("NOTAL")
                            .refTs(OffsetDateTime.parse("2024-01-07T13:55:43.123Z"))
                            .refType("ABSTAT")
                            .build()
                    )
                    .addRefPoint(
                        DatalinkIngest.RefPoint.builder()
                            .effEventTime(OffsetDateTime.parse("2024-01-08T13:55:43.123Z"))
                            .refDes("L5")
                            .refLat(45.23)
                            .refLocName("FORT BRAGG")
                            .refLon(179.1)
                            .refPointType("DLRP")
                            .build()
                    )
                    .addRemark(
                        DatalinkIngest.Remark.builder()
                            .text("Example data link remarks")
                            .type("CONTINGENCY PROCEDURES")
                            .build()
                    )
                    .resTrackQual(3)
                    .serialNum("1201003")
                    .sourceDl("AXE")
                    .addSpecTrack(
                        DatalinkIngest.SpecTrack.builder()
                            .specTrackNum("12345")
                            .specTrackNumDesc("SAM SITE CHARLIE")
                            .build()
                    )
                    .speedDiff(50)
                    .stopTime(OffsetDateTime.parse("2024-01-08T13:55:43.123Z"))
                    .stopTimeMod("AFTER")
                    .sysDefaultCode("MAN")
                    .addTrackNumBlockLl(1234)
                    .addTrackNumBlockLl(2345)
                    .addTrackNumBlock("0200-0300")
                    .addTrackNumBlock("0400-4412")
                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .updatedBy("some.user")
                    .addVoiceCoord(
                        DatalinkIngest.VoiceCoord.builder()
                            .commPri("P")
                            .freqDes("ST300A")
                            .addTeleFreqNum("TEL:804-555-4142")
                            .addTeleFreqNum("TEL:804-867-5309")
                            .voiceNetDes("VPN")
                            .build()
                    )
                    .winSizeMin(1.25)
                    .winSizeMult(2.1)
                    .build()
            )
    }

    @Test
    fun bodyWithoutOptionalFields() {
        val params =
            DatalinkUnvalidatedPublishParams.builder()
                .addBody(
                    DatalinkIngest.builder()
                        .classificationMarking("U")
                        .dataMode(DatalinkIngest.DataMode.TEST)
                        .opExName("DESERT WIND")
                        .originator("USCENTCOM")
                        .source("Bluestaq")
                        .startTime(OffsetDateTime.parse("2024-01-07T13:55:43.123Z"))
                        .build()
                )
                .build()

        val body = params._body()

        assertThat(body)
            .containsExactly(
                DatalinkIngest.builder()
                    .classificationMarking("U")
                    .dataMode(DatalinkIngest.DataMode.TEST)
                    .opExName("DESERT WIND")
                    .originator("USCENTCOM")
                    .source("Bluestaq")
                    .startTime(OffsetDateTime.parse("2024-01-07T13:55:43.123Z"))
                    .build()
            )
    }
}
