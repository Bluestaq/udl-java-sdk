// File generated from our OpenAPI spec by Stainless.

package com.unifieddatalibrary.api.models.hazard

import java.time.OffsetDateTime
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class HazardCreateBulkParamsTest {

    @Test
    fun create() {
        HazardCreateBulkParams.builder()
            .addBody(
                HazardCreateBulkParams.Body.builder()
                    .addAlarm("Alarm1")
                    .addAlarm("Alarm2")
                    .addAlarmValue(2.7)
                    .addAlarmValue(2.9)
                    .classificationMarking("U")
                    .dataMode(HazardCreateBulkParams.Body.DataMode.TEST)
                    .detectTime(OffsetDateTime.parse("2022-03-07T14:51:39.653Z"))
                    .detectType("Chemical")
                    .source("Bluestaq")
                    .id("HAZARD-ID")
                    .a(238)
                    .activity(120.1)
                    .bottleId("6264")
                    .casRn("64-17-5")
                    .channel("Skin")
                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .ctrnTime(1.077)
                    .density(18900.2)
                    .dep(1.084)
                    .depCtrn(86.1)
                    .dose(1.12)
                    .doseRate(1.0000001865)
                    .duration(14400)
                    .gBar(2.5)
                    .harmful(false)
                    .hBar(3.1)
                    .idPoi("POI-ID")
                    .idTrack("TRACK-ID")
                    .massFrac(0.029)
                    .matCat(3)
                    .matClass("Nerve Agent")
                    .matName("VX")
                    .matType("21")
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("ORIG")
                    .ppm(27129)
                    .radCtrn(1.31)
                    .addReading("Rad1")
                    .addReading("Rad2")
                    .addReadingUnit("Gray")
                    .addReadingUnit("Gray")
                    .addReadingValue(107.2)
                    .addReadingValue(124.1)
                    .z(92)
                    .build()
            )
            .build()
    }

    @Test
    fun body() {
        val params =
            HazardCreateBulkParams.builder()
                .addBody(
                    HazardCreateBulkParams.Body.builder()
                        .addAlarm("Alarm1")
                        .addAlarm("Alarm2")
                        .addAlarmValue(2.7)
                        .addAlarmValue(2.9)
                        .classificationMarking("U")
                        .dataMode(HazardCreateBulkParams.Body.DataMode.TEST)
                        .detectTime(OffsetDateTime.parse("2022-03-07T14:51:39.653Z"))
                        .detectType("Chemical")
                        .source("Bluestaq")
                        .id("HAZARD-ID")
                        .a(238)
                        .activity(120.1)
                        .bottleId("6264")
                        .casRn("64-17-5")
                        .channel("Skin")
                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .createdBy("some.user")
                        .ctrnTime(1.077)
                        .density(18900.2)
                        .dep(1.084)
                        .depCtrn(86.1)
                        .dose(1.12)
                        .doseRate(1.0000001865)
                        .duration(14400)
                        .gBar(2.5)
                        .harmful(false)
                        .hBar(3.1)
                        .idPoi("POI-ID")
                        .idTrack("TRACK-ID")
                        .massFrac(0.029)
                        .matCat(3)
                        .matClass("Nerve Agent")
                        .matName("VX")
                        .matType("21")
                        .origin("THIRD_PARTY_DATASOURCE")
                        .origNetwork("ORIG")
                        .ppm(27129)
                        .radCtrn(1.31)
                        .addReading("Rad1")
                        .addReading("Rad2")
                        .addReadingUnit("Gray")
                        .addReadingUnit("Gray")
                        .addReadingValue(107.2)
                        .addReadingValue(124.1)
                        .z(92)
                        .build()
                )
                .build()

        val body = params._body()

        assertThat(body)
            .containsExactly(
                HazardCreateBulkParams.Body.builder()
                    .addAlarm("Alarm1")
                    .addAlarm("Alarm2")
                    .addAlarmValue(2.7)
                    .addAlarmValue(2.9)
                    .classificationMarking("U")
                    .dataMode(HazardCreateBulkParams.Body.DataMode.TEST)
                    .detectTime(OffsetDateTime.parse("2022-03-07T14:51:39.653Z"))
                    .detectType("Chemical")
                    .source("Bluestaq")
                    .id("HAZARD-ID")
                    .a(238)
                    .activity(120.1)
                    .bottleId("6264")
                    .casRn("64-17-5")
                    .channel("Skin")
                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .ctrnTime(1.077)
                    .density(18900.2)
                    .dep(1.084)
                    .depCtrn(86.1)
                    .dose(1.12)
                    .doseRate(1.0000001865)
                    .duration(14400)
                    .gBar(2.5)
                    .harmful(false)
                    .hBar(3.1)
                    .idPoi("POI-ID")
                    .idTrack("TRACK-ID")
                    .massFrac(0.029)
                    .matCat(3)
                    .matClass("Nerve Agent")
                    .matName("VX")
                    .matType("21")
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("ORIG")
                    .ppm(27129)
                    .radCtrn(1.31)
                    .addReading("Rad1")
                    .addReading("Rad2")
                    .addReadingUnit("Gray")
                    .addReadingUnit("Gray")
                    .addReadingValue(107.2)
                    .addReadingValue(124.1)
                    .z(92)
                    .build()
            )
    }

    @Test
    fun bodyWithoutOptionalFields() {
        val params =
            HazardCreateBulkParams.builder()
                .addBody(
                    HazardCreateBulkParams.Body.builder()
                        .addAlarm("Alarm1")
                        .addAlarm("Alarm2")
                        .addAlarmValue(2.7)
                        .addAlarmValue(2.9)
                        .classificationMarking("U")
                        .dataMode(HazardCreateBulkParams.Body.DataMode.TEST)
                        .detectTime(OffsetDateTime.parse("2022-03-07T14:51:39.653Z"))
                        .detectType("Chemical")
                        .source("Bluestaq")
                        .build()
                )
                .build()

        val body = params._body()

        assertThat(body)
            .containsExactly(
                HazardCreateBulkParams.Body.builder()
                    .addAlarm("Alarm1")
                    .addAlarm("Alarm2")
                    .addAlarmValue(2.7)
                    .addAlarmValue(2.9)
                    .classificationMarking("U")
                    .dataMode(HazardCreateBulkParams.Body.DataMode.TEST)
                    .detectTime(OffsetDateTime.parse("2022-03-07T14:51:39.653Z"))
                    .detectType("Chemical")
                    .source("Bluestaq")
                    .build()
            )
    }
}
