// File generated from our OpenAPI spec by Stainless.

package com.unifieddatalibrary.api.models.personnelrecovery

import java.time.OffsetDateTime
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class PersonnelrecoveryCreateBulkParamsTest {

    @Test
    fun create() {
        PersonnelrecoveryCreateBulkParams.builder()
            .addBody(
                PersonnelrecoveryCreateBulkParams.Body.builder()
                    .classificationMarking("U")
                    .dataMode(PersonnelrecoveryCreateBulkParams.Body.DataMode.TEST)
                    .msgTime(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                    .pickupLat(75.1234)
                    .pickupLon(175.1234)
                    .source("Bluestaq")
                    .type("MEDICAL")
                    .id("PERSONNEL_RECOVERY-ID")
                    .authMethod("PASSPORT")
                    .authStatus("NO STATEMENT")
                    .beaconInd(false)
                    .callSign("BADGER")
                    .commEq1("LL PHONE")
                    .commEq2("LL PHONE")
                    .commEq3("LL PHONE")
                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .executionInfo(
                        PersonnelrecoveryCreateBulkParams.Body.ExecutionInfo.builder()
                            .egress(66.53)
                            .addEgressPoint(107.23)
                            .addEgressPoint(30.455)
                            .escortVehicle(
                                PersonnelrecoveryCreateBulkParams.Body.ExecutionInfo.EscortVehicle
                                    .builder()
                                    .callSign("FALCO")
                                    .primaryFreq(34.55)
                                    .strength(5)
                                    .type("C17")
                                    .build()
                            )
                            .ingress(35.66)
                            .addInitialPoint(103.23)
                            .addInitialPoint(30.445)
                            .objStrategy("Description of strategy plan.")
                            .recoveryVehicle(
                                PersonnelrecoveryCreateBulkParams.Body.ExecutionInfo.RecoveryVehicle
                                    .builder()
                                    .callSign("FALCO")
                                    .primaryFreq(34.55)
                                    .strength(5)
                                    .type("C17")
                                    .build()
                            )
                            .build()
                    )
                    .identity("NEUTRAL CIVILIAN")
                    .idWeatherReport("WEATHER_REPORT-ID")
                    .milClass("CIVILIAN")
                    .natAlliance(1)
                    .natAlliance1(0)
                    .numAmbulatory(1)
                    .numAmbulatoryInjured(2)
                    .numNonAmbulatory(0)
                    .numPersons(1)
                    .objectiveAreaInfo(
                        PersonnelrecoveryCreateBulkParams.Body.ObjectiveAreaInfo.builder()
                            .addEnemyData(
                                PersonnelrecoveryCreateBulkParams.Body.ObjectiveAreaInfo.EnemyData
                                    .builder()
                                    .dirToEnemy("NORTHWEST")
                                    .friendliesRemarks("Comments from friendlies.")
                                    .hlzRemarks("Hot Landing Zone remarks.")
                                    .hostileFireType("SMALL ARMS")
                                    .build()
                            )
                            .oscCallSign("STARFOX")
                            .oscFreq(12.55)
                            .pzDesc("Near the lake.")
                            .addPzLocation(103.23)
                            .addPzLocation(30.445)
                            .build()
                    )
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("ORIG")
                    .pickupAlt(30.1234)
                    .recovId("RECOV-ID")
                    .rxFreq(5.5)
                    .survivorMessages("UNINJURED CANT MOVE HOSTILES NEARBY")
                    .survivorRadio("NO STATEMENT")
                    .termInd(true)
                    .textMsg("Additional message from survivor.")
                    .txFreq(5.5)
                    .build()
            )
            .build()
    }

    @Test
    fun body() {
        val params =
            PersonnelrecoveryCreateBulkParams.builder()
                .addBody(
                    PersonnelrecoveryCreateBulkParams.Body.builder()
                        .classificationMarking("U")
                        .dataMode(PersonnelrecoveryCreateBulkParams.Body.DataMode.TEST)
                        .msgTime(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                        .pickupLat(75.1234)
                        .pickupLon(175.1234)
                        .source("Bluestaq")
                        .type("MEDICAL")
                        .id("PERSONNEL_RECOVERY-ID")
                        .authMethod("PASSPORT")
                        .authStatus("NO STATEMENT")
                        .beaconInd(false)
                        .callSign("BADGER")
                        .commEq1("LL PHONE")
                        .commEq2("LL PHONE")
                        .commEq3("LL PHONE")
                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .createdBy("some.user")
                        .executionInfo(
                            PersonnelrecoveryCreateBulkParams.Body.ExecutionInfo.builder()
                                .egress(66.53)
                                .addEgressPoint(107.23)
                                .addEgressPoint(30.455)
                                .escortVehicle(
                                    PersonnelrecoveryCreateBulkParams.Body.ExecutionInfo
                                        .EscortVehicle
                                        .builder()
                                        .callSign("FALCO")
                                        .primaryFreq(34.55)
                                        .strength(5)
                                        .type("C17")
                                        .build()
                                )
                                .ingress(35.66)
                                .addInitialPoint(103.23)
                                .addInitialPoint(30.445)
                                .objStrategy("Description of strategy plan.")
                                .recoveryVehicle(
                                    PersonnelrecoveryCreateBulkParams.Body.ExecutionInfo
                                        .RecoveryVehicle
                                        .builder()
                                        .callSign("FALCO")
                                        .primaryFreq(34.55)
                                        .strength(5)
                                        .type("C17")
                                        .build()
                                )
                                .build()
                        )
                        .identity("NEUTRAL CIVILIAN")
                        .idWeatherReport("WEATHER_REPORT-ID")
                        .milClass("CIVILIAN")
                        .natAlliance(1)
                        .natAlliance1(0)
                        .numAmbulatory(1)
                        .numAmbulatoryInjured(2)
                        .numNonAmbulatory(0)
                        .numPersons(1)
                        .objectiveAreaInfo(
                            PersonnelrecoveryCreateBulkParams.Body.ObjectiveAreaInfo.builder()
                                .addEnemyData(
                                    PersonnelrecoveryCreateBulkParams.Body.ObjectiveAreaInfo
                                        .EnemyData
                                        .builder()
                                        .dirToEnemy("NORTHWEST")
                                        .friendliesRemarks("Comments from friendlies.")
                                        .hlzRemarks("Hot Landing Zone remarks.")
                                        .hostileFireType("SMALL ARMS")
                                        .build()
                                )
                                .oscCallSign("STARFOX")
                                .oscFreq(12.55)
                                .pzDesc("Near the lake.")
                                .addPzLocation(103.23)
                                .addPzLocation(30.445)
                                .build()
                        )
                        .origin("THIRD_PARTY_DATASOURCE")
                        .origNetwork("ORIG")
                        .pickupAlt(30.1234)
                        .recovId("RECOV-ID")
                        .rxFreq(5.5)
                        .survivorMessages("UNINJURED CANT MOVE HOSTILES NEARBY")
                        .survivorRadio("NO STATEMENT")
                        .termInd(true)
                        .textMsg("Additional message from survivor.")
                        .txFreq(5.5)
                        .build()
                )
                .build()

        val body = params._body()

        assertThat(body)
            .containsExactly(
                PersonnelrecoveryCreateBulkParams.Body.builder()
                    .classificationMarking("U")
                    .dataMode(PersonnelrecoveryCreateBulkParams.Body.DataMode.TEST)
                    .msgTime(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                    .pickupLat(75.1234)
                    .pickupLon(175.1234)
                    .source("Bluestaq")
                    .type("MEDICAL")
                    .id("PERSONNEL_RECOVERY-ID")
                    .authMethod("PASSPORT")
                    .authStatus("NO STATEMENT")
                    .beaconInd(false)
                    .callSign("BADGER")
                    .commEq1("LL PHONE")
                    .commEq2("LL PHONE")
                    .commEq3("LL PHONE")
                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .executionInfo(
                        PersonnelrecoveryCreateBulkParams.Body.ExecutionInfo.builder()
                            .egress(66.53)
                            .addEgressPoint(107.23)
                            .addEgressPoint(30.455)
                            .escortVehicle(
                                PersonnelrecoveryCreateBulkParams.Body.ExecutionInfo.EscortVehicle
                                    .builder()
                                    .callSign("FALCO")
                                    .primaryFreq(34.55)
                                    .strength(5)
                                    .type("C17")
                                    .build()
                            )
                            .ingress(35.66)
                            .addInitialPoint(103.23)
                            .addInitialPoint(30.445)
                            .objStrategy("Description of strategy plan.")
                            .recoveryVehicle(
                                PersonnelrecoveryCreateBulkParams.Body.ExecutionInfo.RecoveryVehicle
                                    .builder()
                                    .callSign("FALCO")
                                    .primaryFreq(34.55)
                                    .strength(5)
                                    .type("C17")
                                    .build()
                            )
                            .build()
                    )
                    .identity("NEUTRAL CIVILIAN")
                    .idWeatherReport("WEATHER_REPORT-ID")
                    .milClass("CIVILIAN")
                    .natAlliance(1)
                    .natAlliance1(0)
                    .numAmbulatory(1)
                    .numAmbulatoryInjured(2)
                    .numNonAmbulatory(0)
                    .numPersons(1)
                    .objectiveAreaInfo(
                        PersonnelrecoveryCreateBulkParams.Body.ObjectiveAreaInfo.builder()
                            .addEnemyData(
                                PersonnelrecoveryCreateBulkParams.Body.ObjectiveAreaInfo.EnemyData
                                    .builder()
                                    .dirToEnemy("NORTHWEST")
                                    .friendliesRemarks("Comments from friendlies.")
                                    .hlzRemarks("Hot Landing Zone remarks.")
                                    .hostileFireType("SMALL ARMS")
                                    .build()
                            )
                            .oscCallSign("STARFOX")
                            .oscFreq(12.55)
                            .pzDesc("Near the lake.")
                            .addPzLocation(103.23)
                            .addPzLocation(30.445)
                            .build()
                    )
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("ORIG")
                    .pickupAlt(30.1234)
                    .recovId("RECOV-ID")
                    .rxFreq(5.5)
                    .survivorMessages("UNINJURED CANT MOVE HOSTILES NEARBY")
                    .survivorRadio("NO STATEMENT")
                    .termInd(true)
                    .textMsg("Additional message from survivor.")
                    .txFreq(5.5)
                    .build()
            )
    }

    @Test
    fun bodyWithoutOptionalFields() {
        val params =
            PersonnelrecoveryCreateBulkParams.builder()
                .addBody(
                    PersonnelrecoveryCreateBulkParams.Body.builder()
                        .classificationMarking("U")
                        .dataMode(PersonnelrecoveryCreateBulkParams.Body.DataMode.TEST)
                        .msgTime(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                        .pickupLat(75.1234)
                        .pickupLon(175.1234)
                        .source("Bluestaq")
                        .type("MEDICAL")
                        .build()
                )
                .build()

        val body = params._body()

        assertThat(body)
            .containsExactly(
                PersonnelrecoveryCreateBulkParams.Body.builder()
                    .classificationMarking("U")
                    .dataMode(PersonnelrecoveryCreateBulkParams.Body.DataMode.TEST)
                    .msgTime(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                    .pickupLat(75.1234)
                    .pickupLon(175.1234)
                    .source("Bluestaq")
                    .type("MEDICAL")
                    .build()
            )
    }
}
