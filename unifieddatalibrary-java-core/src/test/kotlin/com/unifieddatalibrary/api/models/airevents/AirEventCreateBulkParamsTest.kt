// File generated from our OpenAPI spec by Stainless.

package com.unifieddatalibrary.api.models.airevents

import java.time.OffsetDateTime
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class AirEventCreateBulkParamsTest {

    @Test
    fun create() {
        AirEventCreateBulkParams.builder()
            .addBody(
                AirEventCreateBulkParams.Body.builder()
                    .classificationMarking("U")
                    .dataMode(AirEventCreateBulkParams.Body.DataMode.TEST)
                    .source("Bluestaq")
                    .type("FUEL TRANSFER")
                    .id("026dd511-8ba5-47d3-9909-836149f87686")
                    .actualArrTime(OffsetDateTime.parse("2024-01-07T14:00:03.123Z"))
                    .actualDepTime(OffsetDateTime.parse("2024-01-07T14:17:03.123Z"))
                    .arct(OffsetDateTime.parse("2024-01-07T15:11:27.123Z"))
                    .arEventType("V")
                    .arrPurpose("A")
                    .arTrackId("CH61")
                    .arTrackName("CH61 POST")
                    .baseAlt(28000.1)
                    .cancelled(false)
                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .depPurpose("Q")
                    .estArrTime(OffsetDateTime.parse("2024-01-07T13:59:48.123Z"))
                    .estDepTime(OffsetDateTime.parse("2024-01-07T14:19:48.123Z"))
                    .externalAirEventId("MB014313032022407540")
                    .externalArTrackId("6418a4b68e5c3896bf024cc79aa4174c")
                    .idMission("190dea6d-2a90-45a2-a276-be9047d9b96c")
                    .idSortie("b9866c03-2397-4506-8153-852e72d9b54f")
                    .legNum(825)
                    .location("901EW")
                    .numTankers(1)
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("OPS1")
                    .plannedArrTime(OffsetDateTime.parse("2024-01-07T13:55:43.123Z"))
                    .plannedDepTime(OffsetDateTime.parse("2024-01-07T14:15:43.123Z"))
                    .priority("1A2")
                    .addReceiver(
                        AirEventCreateBulkParams.Body.Receiver.builder()
                            .altReceiverMissionId("1UN05201L121")
                            .amcReceiverMissionId("8PH000B1S052")
                            .externalReceiverId("3fb8169f-adc1-4667-acab-8415a012d766")
                            .fuelOn(15000000.1)
                            .idReceiverAirfield("96c4c2ba-a031-4e58-9b8e-3c6fb90a7534")
                            .idReceiverMission("ce99757d-f733-461f-8939-3939d4f05946")
                            .idReceiverSortie("1d03e85a-1fb9-4f6e-86a0-593306b6e3f0")
                            .numRecAircraft(3)
                            .packageId("135")
                            .receiverCallSign("BAKER")
                            .receiverCellPosition(2)
                            .receiverCoord("TTC601")
                            .receiverDeliveryMethod("DROGUE")
                            .receiverDeployedIcao("KOFF")
                            .receiverExercise("NATO19")
                            .receiverFuelType("JP8")
                            .receiverLegNum(825)
                            .receiverMds("KC135R")
                            .receiverOwner("117ARW")
                            .receiverPoc("JOHN SMITH (555)555-5555")
                            .recOrg("AMC")
                            .sequenceNum("1018")
                            .build()
                    )
                    .addRemark(
                        AirEventCreateBulkParams.Body.Remark.builder()
                            .date(OffsetDateTime.parse("2024-01-01T01:01:01.123Z"))
                            .externalRemarkId("23ea2877a6f74d7d8f309567a5896441")
                            .text("Example air event remarks.")
                            .user("John Doe")
                            .build()
                    )
                    .revTrack(true)
                    .rzct(OffsetDateTime.parse("2024-01-07T13:55:43.123Z"))
                    .rzPoint("AN")
                    .rzType("PP")
                    .shortTrack(true)
                    .sourceDl("AXE")
                    .statusCode("R")
                    .addTanker(
                        AirEventCreateBulkParams.Body.Tanker.builder()
                            .altTankerMissionId("1UN05201L121")
                            .amcTankerMissionId("8PH000B1S052")
                            .dualRole(true)
                            .externalTankerId("ca673c580fb949a5b733f0e0b67ffab2")
                            .fuelOff(15000000.1)
                            .idTankerAirfield("b33955d2-67d3-42be-8316-263e284ce6cc")
                            .idTankerMission("edef700c-9917-4dbf-a153-89ffd4446fe9")
                            .idTankerSortie("d833a4bc-756b-41d5-8845-f146fe563387")
                            .tankerCallSign("BAKER")
                            .tankerCellPosition(2)
                            .tankerCoord("TTC601")
                            .tankerDeliveryMethod("DROGUE")
                            .tankerDeployedIcao("KOFF")
                            .tankerFuelType("JP8")
                            .tankerLegNum(825)
                            .tankerMds("KC135R")
                            .tankerOwner("117ARW")
                            .tankerPoc("JOHN SMITH (555)555-5555")
                            .build()
                    )
                    .trackTime(1.5)
                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .updatedBy("some.user")
                    .build()
            )
            .build()
    }

    @Test
    fun body() {
        val params =
            AirEventCreateBulkParams.builder()
                .addBody(
                    AirEventCreateBulkParams.Body.builder()
                        .classificationMarking("U")
                        .dataMode(AirEventCreateBulkParams.Body.DataMode.TEST)
                        .source("Bluestaq")
                        .type("FUEL TRANSFER")
                        .id("026dd511-8ba5-47d3-9909-836149f87686")
                        .actualArrTime(OffsetDateTime.parse("2024-01-07T14:00:03.123Z"))
                        .actualDepTime(OffsetDateTime.parse("2024-01-07T14:17:03.123Z"))
                        .arct(OffsetDateTime.parse("2024-01-07T15:11:27.123Z"))
                        .arEventType("V")
                        .arrPurpose("A")
                        .arTrackId("CH61")
                        .arTrackName("CH61 POST")
                        .baseAlt(28000.1)
                        .cancelled(false)
                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .createdBy("some.user")
                        .depPurpose("Q")
                        .estArrTime(OffsetDateTime.parse("2024-01-07T13:59:48.123Z"))
                        .estDepTime(OffsetDateTime.parse("2024-01-07T14:19:48.123Z"))
                        .externalAirEventId("MB014313032022407540")
                        .externalArTrackId("6418a4b68e5c3896bf024cc79aa4174c")
                        .idMission("190dea6d-2a90-45a2-a276-be9047d9b96c")
                        .idSortie("b9866c03-2397-4506-8153-852e72d9b54f")
                        .legNum(825)
                        .location("901EW")
                        .numTankers(1)
                        .origin("THIRD_PARTY_DATASOURCE")
                        .origNetwork("OPS1")
                        .plannedArrTime(OffsetDateTime.parse("2024-01-07T13:55:43.123Z"))
                        .plannedDepTime(OffsetDateTime.parse("2024-01-07T14:15:43.123Z"))
                        .priority("1A2")
                        .addReceiver(
                            AirEventCreateBulkParams.Body.Receiver.builder()
                                .altReceiverMissionId("1UN05201L121")
                                .amcReceiverMissionId("8PH000B1S052")
                                .externalReceiverId("3fb8169f-adc1-4667-acab-8415a012d766")
                                .fuelOn(15000000.1)
                                .idReceiverAirfield("96c4c2ba-a031-4e58-9b8e-3c6fb90a7534")
                                .idReceiverMission("ce99757d-f733-461f-8939-3939d4f05946")
                                .idReceiverSortie("1d03e85a-1fb9-4f6e-86a0-593306b6e3f0")
                                .numRecAircraft(3)
                                .packageId("135")
                                .receiverCallSign("BAKER")
                                .receiverCellPosition(2)
                                .receiverCoord("TTC601")
                                .receiverDeliveryMethod("DROGUE")
                                .receiverDeployedIcao("KOFF")
                                .receiverExercise("NATO19")
                                .receiverFuelType("JP8")
                                .receiverLegNum(825)
                                .receiverMds("KC135R")
                                .receiverOwner("117ARW")
                                .receiverPoc("JOHN SMITH (555)555-5555")
                                .recOrg("AMC")
                                .sequenceNum("1018")
                                .build()
                        )
                        .addRemark(
                            AirEventCreateBulkParams.Body.Remark.builder()
                                .date(OffsetDateTime.parse("2024-01-01T01:01:01.123Z"))
                                .externalRemarkId("23ea2877a6f74d7d8f309567a5896441")
                                .text("Example air event remarks.")
                                .user("John Doe")
                                .build()
                        )
                        .revTrack(true)
                        .rzct(OffsetDateTime.parse("2024-01-07T13:55:43.123Z"))
                        .rzPoint("AN")
                        .rzType("PP")
                        .shortTrack(true)
                        .sourceDl("AXE")
                        .statusCode("R")
                        .addTanker(
                            AirEventCreateBulkParams.Body.Tanker.builder()
                                .altTankerMissionId("1UN05201L121")
                                .amcTankerMissionId("8PH000B1S052")
                                .dualRole(true)
                                .externalTankerId("ca673c580fb949a5b733f0e0b67ffab2")
                                .fuelOff(15000000.1)
                                .idTankerAirfield("b33955d2-67d3-42be-8316-263e284ce6cc")
                                .idTankerMission("edef700c-9917-4dbf-a153-89ffd4446fe9")
                                .idTankerSortie("d833a4bc-756b-41d5-8845-f146fe563387")
                                .tankerCallSign("BAKER")
                                .tankerCellPosition(2)
                                .tankerCoord("TTC601")
                                .tankerDeliveryMethod("DROGUE")
                                .tankerDeployedIcao("KOFF")
                                .tankerFuelType("JP8")
                                .tankerLegNum(825)
                                .tankerMds("KC135R")
                                .tankerOwner("117ARW")
                                .tankerPoc("JOHN SMITH (555)555-5555")
                                .build()
                        )
                        .trackTime(1.5)
                        .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .updatedBy("some.user")
                        .build()
                )
                .build()

        val body = params._body()

        assertThat(body)
            .containsExactly(
                AirEventCreateBulkParams.Body.builder()
                    .classificationMarking("U")
                    .dataMode(AirEventCreateBulkParams.Body.DataMode.TEST)
                    .source("Bluestaq")
                    .type("FUEL TRANSFER")
                    .id("026dd511-8ba5-47d3-9909-836149f87686")
                    .actualArrTime(OffsetDateTime.parse("2024-01-07T14:00:03.123Z"))
                    .actualDepTime(OffsetDateTime.parse("2024-01-07T14:17:03.123Z"))
                    .arct(OffsetDateTime.parse("2024-01-07T15:11:27.123Z"))
                    .arEventType("V")
                    .arrPurpose("A")
                    .arTrackId("CH61")
                    .arTrackName("CH61 POST")
                    .baseAlt(28000.1)
                    .cancelled(false)
                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .depPurpose("Q")
                    .estArrTime(OffsetDateTime.parse("2024-01-07T13:59:48.123Z"))
                    .estDepTime(OffsetDateTime.parse("2024-01-07T14:19:48.123Z"))
                    .externalAirEventId("MB014313032022407540")
                    .externalArTrackId("6418a4b68e5c3896bf024cc79aa4174c")
                    .idMission("190dea6d-2a90-45a2-a276-be9047d9b96c")
                    .idSortie("b9866c03-2397-4506-8153-852e72d9b54f")
                    .legNum(825)
                    .location("901EW")
                    .numTankers(1)
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("OPS1")
                    .plannedArrTime(OffsetDateTime.parse("2024-01-07T13:55:43.123Z"))
                    .plannedDepTime(OffsetDateTime.parse("2024-01-07T14:15:43.123Z"))
                    .priority("1A2")
                    .addReceiver(
                        AirEventCreateBulkParams.Body.Receiver.builder()
                            .altReceiverMissionId("1UN05201L121")
                            .amcReceiverMissionId("8PH000B1S052")
                            .externalReceiverId("3fb8169f-adc1-4667-acab-8415a012d766")
                            .fuelOn(15000000.1)
                            .idReceiverAirfield("96c4c2ba-a031-4e58-9b8e-3c6fb90a7534")
                            .idReceiverMission("ce99757d-f733-461f-8939-3939d4f05946")
                            .idReceiverSortie("1d03e85a-1fb9-4f6e-86a0-593306b6e3f0")
                            .numRecAircraft(3)
                            .packageId("135")
                            .receiverCallSign("BAKER")
                            .receiverCellPosition(2)
                            .receiverCoord("TTC601")
                            .receiverDeliveryMethod("DROGUE")
                            .receiverDeployedIcao("KOFF")
                            .receiverExercise("NATO19")
                            .receiverFuelType("JP8")
                            .receiverLegNum(825)
                            .receiverMds("KC135R")
                            .receiverOwner("117ARW")
                            .receiverPoc("JOHN SMITH (555)555-5555")
                            .recOrg("AMC")
                            .sequenceNum("1018")
                            .build()
                    )
                    .addRemark(
                        AirEventCreateBulkParams.Body.Remark.builder()
                            .date(OffsetDateTime.parse("2024-01-01T01:01:01.123Z"))
                            .externalRemarkId("23ea2877a6f74d7d8f309567a5896441")
                            .text("Example air event remarks.")
                            .user("John Doe")
                            .build()
                    )
                    .revTrack(true)
                    .rzct(OffsetDateTime.parse("2024-01-07T13:55:43.123Z"))
                    .rzPoint("AN")
                    .rzType("PP")
                    .shortTrack(true)
                    .sourceDl("AXE")
                    .statusCode("R")
                    .addTanker(
                        AirEventCreateBulkParams.Body.Tanker.builder()
                            .altTankerMissionId("1UN05201L121")
                            .amcTankerMissionId("8PH000B1S052")
                            .dualRole(true)
                            .externalTankerId("ca673c580fb949a5b733f0e0b67ffab2")
                            .fuelOff(15000000.1)
                            .idTankerAirfield("b33955d2-67d3-42be-8316-263e284ce6cc")
                            .idTankerMission("edef700c-9917-4dbf-a153-89ffd4446fe9")
                            .idTankerSortie("d833a4bc-756b-41d5-8845-f146fe563387")
                            .tankerCallSign("BAKER")
                            .tankerCellPosition(2)
                            .tankerCoord("TTC601")
                            .tankerDeliveryMethod("DROGUE")
                            .tankerDeployedIcao("KOFF")
                            .tankerFuelType("JP8")
                            .tankerLegNum(825)
                            .tankerMds("KC135R")
                            .tankerOwner("117ARW")
                            .tankerPoc("JOHN SMITH (555)555-5555")
                            .build()
                    )
                    .trackTime(1.5)
                    .updatedAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .updatedBy("some.user")
                    .build()
            )
    }

    @Test
    fun bodyWithoutOptionalFields() {
        val params =
            AirEventCreateBulkParams.builder()
                .addBody(
                    AirEventCreateBulkParams.Body.builder()
                        .classificationMarking("U")
                        .dataMode(AirEventCreateBulkParams.Body.DataMode.TEST)
                        .source("Bluestaq")
                        .type("FUEL TRANSFER")
                        .build()
                )
                .build()

        val body = params._body()

        assertThat(body)
            .containsExactly(
                AirEventCreateBulkParams.Body.builder()
                    .classificationMarking("U")
                    .dataMode(AirEventCreateBulkParams.Body.DataMode.TEST)
                    .source("Bluestaq")
                    .type("FUEL TRANSFER")
                    .build()
            )
    }
}
