// File generated from our OpenAPI spec by Stainless.

package com.unifieddatalibrary.api.models.eventevolution

import com.unifieddatalibrary.api.models.eventevolution.EventEvolutionCreateBulkParams
import java.time.OffsetDateTime
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class EventEvolutionCreateBulkParamsTest {

    @Test
    fun create() {
      EventEvolutionCreateBulkParams.builder()
          .addBody(EventEvolutionCreateBulkParams.Body.builder()
              .classificationMarking("U")
              .dataMode(EventEvolutionCreateBulkParams.Body.DataMode.TEST)
              .eventId("EVENT_ID")
              .source("Bluestaq")
              .startTime(OffsetDateTime.parse("2021-12-02T16:00:00.123Z"))
              .summary("Example summary of the event.")
              .id("EVENT_EVOL_ID")
              .agjson("{\"type\":\"Polygon\",\"coordinates\":[ [ [ 67.3291113966927, 26.156175339112 ], [ 67.2580009640721, 26.091022064271 ], [ 67.1795862381682, 26.6637992964562 ], [ 67.2501237475598, 26.730115808233 ], [ 67.3291113966927, 26.156175339112 ] ] ] }")
              .andims(2)
              .area("POLYGON((67.3291113966927 26.156175339112,67.2580009640721 26.091022064271,67.1795862381682 26.6637992964562,67.2501237475598 26.730115808233,67.3291113966927 26.156175339112))")
              .asrid(4326)
              .atext("POLYGON((67.3291113966927 26.156175339112,67.2580009640721 26.091022064271,67.1795862381682 26.6637992964562,67.2501237475598 26.730115808233,67.3291113966927 26.156175339112))")
              .atype("POLYGON")
              .category("PROTEST")
              .countryCode("US")
              .createdAt(OffsetDateTime.parse("2021-12-02T16:00:00.123Z"))
              .createdBy("some.user")
              .dataDescription("Description of relationship between srcTyps and srcIds")
              .endTime(OffsetDateTime.parse("2021-12-03T16:00:00.123Z"))
              .geoAdminLevel1("Colorado")
              .geoAdminLevel2("El Paso County")
              .geoAdminLevel3("Colorado Springs")
              .origin("THIRD_PARTY_DATASOURCE")
              .origNetwork("ORIG")
              .redact(false)
              .addSrcId("SRC_ID_1")
              .addSrcId("SRC_ID_2")
              .addSrcTyp("AIS")
              .addSrcTyp("CONJUNCTION")
              .status("UNKNOWN")
              .addTag("TAG1")
              .addTag("TAG2")
              .addUrl("URL1")
              .addUrl("URL2")
              .build())
          .build()
    }

    @Test
    fun body() {
      val params = EventEvolutionCreateBulkParams.builder()
          .addBody(EventEvolutionCreateBulkParams.Body.builder()
              .classificationMarking("U")
              .dataMode(EventEvolutionCreateBulkParams.Body.DataMode.TEST)
              .eventId("EVENT_ID")
              .source("Bluestaq")
              .startTime(OffsetDateTime.parse("2021-12-02T16:00:00.123Z"))
              .summary("Example summary of the event.")
              .id("EVENT_EVOL_ID")
              .agjson("{\"type\":\"Polygon\",\"coordinates\":[ [ [ 67.3291113966927, 26.156175339112 ], [ 67.2580009640721, 26.091022064271 ], [ 67.1795862381682, 26.6637992964562 ], [ 67.2501237475598, 26.730115808233 ], [ 67.3291113966927, 26.156175339112 ] ] ] }")
              .andims(2)
              .area("POLYGON((67.3291113966927 26.156175339112,67.2580009640721 26.091022064271,67.1795862381682 26.6637992964562,67.2501237475598 26.730115808233,67.3291113966927 26.156175339112))")
              .asrid(4326)
              .atext("POLYGON((67.3291113966927 26.156175339112,67.2580009640721 26.091022064271,67.1795862381682 26.6637992964562,67.2501237475598 26.730115808233,67.3291113966927 26.156175339112))")
              .atype("POLYGON")
              .category("PROTEST")
              .countryCode("US")
              .createdAt(OffsetDateTime.parse("2021-12-02T16:00:00.123Z"))
              .createdBy("some.user")
              .dataDescription("Description of relationship between srcTyps and srcIds")
              .endTime(OffsetDateTime.parse("2021-12-03T16:00:00.123Z"))
              .geoAdminLevel1("Colorado")
              .geoAdminLevel2("El Paso County")
              .geoAdminLevel3("Colorado Springs")
              .origin("THIRD_PARTY_DATASOURCE")
              .origNetwork("ORIG")
              .redact(false)
              .addSrcId("SRC_ID_1")
              .addSrcId("SRC_ID_2")
              .addSrcTyp("AIS")
              .addSrcTyp("CONJUNCTION")
              .status("UNKNOWN")
              .addTag("TAG1")
              .addTag("TAG2")
              .addUrl("URL1")
              .addUrl("URL2")
              .build())
          .build()

      val body = params._body()

      assertThat(body).containsExactly(EventEvolutionCreateBulkParams.Body.builder()
          .classificationMarking("U")
          .dataMode(EventEvolutionCreateBulkParams.Body.DataMode.TEST)
          .eventId("EVENT_ID")
          .source("Bluestaq")
          .startTime(OffsetDateTime.parse("2021-12-02T16:00:00.123Z"))
          .summary("Example summary of the event.")
          .id("EVENT_EVOL_ID")
          .agjson("{\"type\":\"Polygon\",\"coordinates\":[ [ [ 67.3291113966927, 26.156175339112 ], [ 67.2580009640721, 26.091022064271 ], [ 67.1795862381682, 26.6637992964562 ], [ 67.2501237475598, 26.730115808233 ], [ 67.3291113966927, 26.156175339112 ] ] ] }")
          .andims(2)
          .area("POLYGON((67.3291113966927 26.156175339112,67.2580009640721 26.091022064271,67.1795862381682 26.6637992964562,67.2501237475598 26.730115808233,67.3291113966927 26.156175339112))")
          .asrid(4326)
          .atext("POLYGON((67.3291113966927 26.156175339112,67.2580009640721 26.091022064271,67.1795862381682 26.6637992964562,67.2501237475598 26.730115808233,67.3291113966927 26.156175339112))")
          .atype("POLYGON")
          .category("PROTEST")
          .countryCode("US")
          .createdAt(OffsetDateTime.parse("2021-12-02T16:00:00.123Z"))
          .createdBy("some.user")
          .dataDescription("Description of relationship between srcTyps and srcIds")
          .endTime(OffsetDateTime.parse("2021-12-03T16:00:00.123Z"))
          .geoAdminLevel1("Colorado")
          .geoAdminLevel2("El Paso County")
          .geoAdminLevel3("Colorado Springs")
          .origin("THIRD_PARTY_DATASOURCE")
          .origNetwork("ORIG")
          .redact(false)
          .addSrcId("SRC_ID_1")
          .addSrcId("SRC_ID_2")
          .addSrcTyp("AIS")
          .addSrcTyp("CONJUNCTION")
          .status("UNKNOWN")
          .addTag("TAG1")
          .addTag("TAG2")
          .addUrl("URL1")
          .addUrl("URL2")
          .build())
    }

    @Test
    fun bodyWithoutOptionalFields() {
      val params = EventEvolutionCreateBulkParams.builder()
          .addBody(EventEvolutionCreateBulkParams.Body.builder()
              .classificationMarking("U")
              .dataMode(EventEvolutionCreateBulkParams.Body.DataMode.TEST)
              .eventId("EVENT_ID")
              .source("Bluestaq")
              .startTime(OffsetDateTime.parse("2021-12-02T16:00:00.123Z"))
              .summary("Example summary of the event.")
              .build())
          .build()

      val body = params._body()

      assertThat(body).containsExactly(EventEvolutionCreateBulkParams.Body.builder()
          .classificationMarking("U")
          .dataMode(EventEvolutionCreateBulkParams.Body.DataMode.TEST)
          .eventId("EVENT_ID")
          .source("Bluestaq")
          .startTime(OffsetDateTime.parse("2021-12-02T16:00:00.123Z"))
          .summary("Example summary of the event.")
          .build())
    }
}
