// File generated from our OpenAPI spec by Stainless.

package com.unifieddatalibrary.api.models.evac

import java.time.OffsetDateTime
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class EvacCreateBulkParamsTest {

    @Test
    fun create() {
        EvacCreateBulkParams.builder()
            .addBody(
                EvacCreateBulkParams.Body.builder()
                    .classificationMarking("U")
                    .dataMode(EvacCreateBulkParams.Body.DataMode.TEST)
                    .pickupLat(75.1234)
                    .pickupLon(175.1234)
                    .reqTime(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                    .source("Bluestaq")
                    .type(EvacCreateBulkParams.Body.Type.REQUEST)
                    .id("MEDEVACEVENT-ID")
                    .addCasualtyInfo(
                        EvacCreateBulkParams.Body.CasualtyInfo.builder()
                            .age(35)
                            .addAllergy(
                                EvacCreateBulkParams.Body.CasualtyInfo.Allergy.builder()
                                    .comments("Comments on the patient's allergies.")
                                    .type("PENICILLIN")
                                    .build()
                            )
                            .bloodType("O NEG")
                            .bodyPart("FACE")
                            .burialLocation(listOf(-33.123, 150.33, 0.24))
                            .callSign("SHARK")
                            .careProviderUrn("CARE_PROVIDER-1")
                            .casualtyKey("casualty-007")
                            .casualtyType("DENTAL")
                            .collectionPoint(listOf(12.44, 122.55, 0.98))
                            .comments("Comments relating to this casualty info.")
                            .addCondition(
                                EvacCreateBulkParams.Body.CasualtyInfo.Condition.builder()
                                    .bodyPart("ANKLE LEFT FRONT")
                                    .comments("Comments on the patient's condition.")
                                    .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                    .type("ACTIVITY LOW")
                                    .build()
                            )
                            .contamType("NONE")
                            .disposition("EVACUATE WOUNDED")
                            .dispositionType("EVACUATE")
                            .addEtiology(
                                EvacCreateBulkParams.Body.CasualtyInfo.Etiology.builder()
                                    .bodyPart("ARM LEFT FRONT")
                                    .comments("Comments on the etiology info.")
                                    .time(OffsetDateTime.parse("2021-10-16T16:00:00.123Z"))
                                    .type("BURN")
                                    .build()
                            )
                            .evacType("GROUND")
                            .gender("MALE")
                            .addHealthState(
                                EvacCreateBulkParams.Body.CasualtyInfo.HealthState.builder()
                                    .healthStateCode("BLUE")
                                    .medConfFactor(1)
                                    .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                    .type("COGNITIVE")
                                    .build()
                            )
                            .addInjury(
                                EvacCreateBulkParams.Body.CasualtyInfo.Injury.builder()
                                    .bodyPart("ARM LEFT FRONT")
                                    .comments("Comments on the patient's injury.")
                                    .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                    .type("ABRASION")
                                    .build()
                            )
                            .last4Ssn("1234")
                            .addMedication(
                                EvacCreateBulkParams.Body.CasualtyInfo.Medication.builder()
                                    .adminRoute("ORAL")
                                    .bodyPart("ARM LEFT BACK")
                                    .comments("Comments on the patient's medication information.")
                                    .dose("800mg")
                                    .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                    .type("TYLENOL")
                                    .build()
                            )
                            .name("John Smith")
                            .nationality("US")
                            .occSpeciality("Healthcare")
                            .patientIdentity("FRIEND CIVILIAN")
                            .patientStatus("US CIVILIAN")
                            .payGrade("CIVILIAN")
                            .priority("ROUTINE")
                            .reportGen("DEVICE")
                            .reportTime(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                            .service("CIV")
                            .addSpecMedEquip("OXYGEN")
                            .addSpecMedEquip("HOIST")
                            .addTreatment(
                                EvacCreateBulkParams.Body.CasualtyInfo.Treatment.builder()
                                    .bodyPart("CHEST")
                                    .comments("Comments on the treatment info.")
                                    .time(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .type("BREATHING CHEST TUBE")
                                    .build()
                            )
                            .addVitalSignData(
                                EvacCreateBulkParams.Body.CasualtyInfo.VitalSignData.builder()
                                    .medConfFactor(1)
                                    .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                    .vitalSign("HEART RATE")
                                    .vitalSign1(120.0)
                                    .vitalSign2(80.0)
                                    .build()
                            )
                            .build()
                    )
                    .ce(10.1234)
                    .cntctFreq(3.11)
                    .comments("Comments concerning mission")
                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .addEnemyData(
                        EvacCreateBulkParams.Body.EnemyData.builder()
                            .dirToEnemy("NORTH")
                            .friendliesRemarks("Comments from friendlies.")
                            .hlzRemarks("Remarks about hot landing zone.")
                            .hostileFireType("SMALL ARMS")
                            .build()
                    )
                    .idWeatherReport("WeatherReport-ID")
                    .le(5.1234)
                    .medevacId("MedEvac-ID")
                    .medicReq(true)
                    .missionType("GROUND")
                    .numAmbulatory(5)
                    .numCasualties(5)
                    .numKia(0)
                    .numLitter(0)
                    .numWia(3)
                    .obstaclesRemarks("N/A")
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("OPS1")
                    .pickupAlt(30.1234)
                    .pickupTime(OffsetDateTime.parse("2021-10-20T16:00:00.123Z"))
                    .reqCallSign("Bravo")
                    .reqNum("MED.1.223908")
                    .terrain("ROCKY")
                    .terrainRemarks("N/A")
                    .zoneContrCallSign("Tango")
                    .zoneHot(false)
                    .zoneMarking("ILLUMINATION")
                    .zoneMarkingColor("RED")
                    .zoneName("example-zone")
                    .zoneSecurity("NO ENEMY")
                    .build()
            )
            .build()
    }

    @Test
    fun body() {
        val params =
            EvacCreateBulkParams.builder()
                .addBody(
                    EvacCreateBulkParams.Body.builder()
                        .classificationMarking("U")
                        .dataMode(EvacCreateBulkParams.Body.DataMode.TEST)
                        .pickupLat(75.1234)
                        .pickupLon(175.1234)
                        .reqTime(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                        .source("Bluestaq")
                        .type(EvacCreateBulkParams.Body.Type.REQUEST)
                        .id("MEDEVACEVENT-ID")
                        .addCasualtyInfo(
                            EvacCreateBulkParams.Body.CasualtyInfo.builder()
                                .age(35)
                                .addAllergy(
                                    EvacCreateBulkParams.Body.CasualtyInfo.Allergy.builder()
                                        .comments("Comments on the patient's allergies.")
                                        .type("PENICILLIN")
                                        .build()
                                )
                                .bloodType("O NEG")
                                .bodyPart("FACE")
                                .burialLocation(listOf(-33.123, 150.33, 0.24))
                                .callSign("SHARK")
                                .careProviderUrn("CARE_PROVIDER-1")
                                .casualtyKey("casualty-007")
                                .casualtyType("DENTAL")
                                .collectionPoint(listOf(12.44, 122.55, 0.98))
                                .comments("Comments relating to this casualty info.")
                                .addCondition(
                                    EvacCreateBulkParams.Body.CasualtyInfo.Condition.builder()
                                        .bodyPart("ANKLE LEFT FRONT")
                                        .comments("Comments on the patient's condition.")
                                        .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                        .type("ACTIVITY LOW")
                                        .build()
                                )
                                .contamType("NONE")
                                .disposition("EVACUATE WOUNDED")
                                .dispositionType("EVACUATE")
                                .addEtiology(
                                    EvacCreateBulkParams.Body.CasualtyInfo.Etiology.builder()
                                        .bodyPart("ARM LEFT FRONT")
                                        .comments("Comments on the etiology info.")
                                        .time(OffsetDateTime.parse("2021-10-16T16:00:00.123Z"))
                                        .type("BURN")
                                        .build()
                                )
                                .evacType("GROUND")
                                .gender("MALE")
                                .addHealthState(
                                    EvacCreateBulkParams.Body.CasualtyInfo.HealthState.builder()
                                        .healthStateCode("BLUE")
                                        .medConfFactor(1)
                                        .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                        .type("COGNITIVE")
                                        .build()
                                )
                                .addInjury(
                                    EvacCreateBulkParams.Body.CasualtyInfo.Injury.builder()
                                        .bodyPart("ARM LEFT FRONT")
                                        .comments("Comments on the patient's injury.")
                                        .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                        .type("ABRASION")
                                        .build()
                                )
                                .last4Ssn("1234")
                                .addMedication(
                                    EvacCreateBulkParams.Body.CasualtyInfo.Medication.builder()
                                        .adminRoute("ORAL")
                                        .bodyPart("ARM LEFT BACK")
                                        .comments(
                                            "Comments on the patient's medication information."
                                        )
                                        .dose("800mg")
                                        .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                        .type("TYLENOL")
                                        .build()
                                )
                                .name("John Smith")
                                .nationality("US")
                                .occSpeciality("Healthcare")
                                .patientIdentity("FRIEND CIVILIAN")
                                .patientStatus("US CIVILIAN")
                                .payGrade("CIVILIAN")
                                .priority("ROUTINE")
                                .reportGen("DEVICE")
                                .reportTime(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                .service("CIV")
                                .addSpecMedEquip("OXYGEN")
                                .addSpecMedEquip("HOIST")
                                .addTreatment(
                                    EvacCreateBulkParams.Body.CasualtyInfo.Treatment.builder()
                                        .bodyPart("CHEST")
                                        .comments("Comments on the treatment info.")
                                        .time(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                        .type("BREATHING CHEST TUBE")
                                        .build()
                                )
                                .addVitalSignData(
                                    EvacCreateBulkParams.Body.CasualtyInfo.VitalSignData.builder()
                                        .medConfFactor(1)
                                        .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                        .vitalSign("HEART RATE")
                                        .vitalSign1(120.0)
                                        .vitalSign2(80.0)
                                        .build()
                                )
                                .build()
                        )
                        .ce(10.1234)
                        .cntctFreq(3.11)
                        .comments("Comments concerning mission")
                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .createdBy("some.user")
                        .addEnemyData(
                            EvacCreateBulkParams.Body.EnemyData.builder()
                                .dirToEnemy("NORTH")
                                .friendliesRemarks("Comments from friendlies.")
                                .hlzRemarks("Remarks about hot landing zone.")
                                .hostileFireType("SMALL ARMS")
                                .build()
                        )
                        .idWeatherReport("WeatherReport-ID")
                        .le(5.1234)
                        .medevacId("MedEvac-ID")
                        .medicReq(true)
                        .missionType("GROUND")
                        .numAmbulatory(5)
                        .numCasualties(5)
                        .numKia(0)
                        .numLitter(0)
                        .numWia(3)
                        .obstaclesRemarks("N/A")
                        .origin("THIRD_PARTY_DATASOURCE")
                        .origNetwork("OPS1")
                        .pickupAlt(30.1234)
                        .pickupTime(OffsetDateTime.parse("2021-10-20T16:00:00.123Z"))
                        .reqCallSign("Bravo")
                        .reqNum("MED.1.223908")
                        .terrain("ROCKY")
                        .terrainRemarks("N/A")
                        .zoneContrCallSign("Tango")
                        .zoneHot(false)
                        .zoneMarking("ILLUMINATION")
                        .zoneMarkingColor("RED")
                        .zoneName("example-zone")
                        .zoneSecurity("NO ENEMY")
                        .build()
                )
                .build()

        val body = params._body()

        assertThat(body)
            .containsExactly(
                EvacCreateBulkParams.Body.builder()
                    .classificationMarking("U")
                    .dataMode(EvacCreateBulkParams.Body.DataMode.TEST)
                    .pickupLat(75.1234)
                    .pickupLon(175.1234)
                    .reqTime(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                    .source("Bluestaq")
                    .type(EvacCreateBulkParams.Body.Type.REQUEST)
                    .id("MEDEVACEVENT-ID")
                    .addCasualtyInfo(
                        EvacCreateBulkParams.Body.CasualtyInfo.builder()
                            .age(35)
                            .addAllergy(
                                EvacCreateBulkParams.Body.CasualtyInfo.Allergy.builder()
                                    .comments("Comments on the patient's allergies.")
                                    .type("PENICILLIN")
                                    .build()
                            )
                            .bloodType("O NEG")
                            .bodyPart("FACE")
                            .burialLocation(listOf(-33.123, 150.33, 0.24))
                            .callSign("SHARK")
                            .careProviderUrn("CARE_PROVIDER-1")
                            .casualtyKey("casualty-007")
                            .casualtyType("DENTAL")
                            .collectionPoint(listOf(12.44, 122.55, 0.98))
                            .comments("Comments relating to this casualty info.")
                            .addCondition(
                                EvacCreateBulkParams.Body.CasualtyInfo.Condition.builder()
                                    .bodyPart("ANKLE LEFT FRONT")
                                    .comments("Comments on the patient's condition.")
                                    .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                    .type("ACTIVITY LOW")
                                    .build()
                            )
                            .contamType("NONE")
                            .disposition("EVACUATE WOUNDED")
                            .dispositionType("EVACUATE")
                            .addEtiology(
                                EvacCreateBulkParams.Body.CasualtyInfo.Etiology.builder()
                                    .bodyPart("ARM LEFT FRONT")
                                    .comments("Comments on the etiology info.")
                                    .time(OffsetDateTime.parse("2021-10-16T16:00:00.123Z"))
                                    .type("BURN")
                                    .build()
                            )
                            .evacType("GROUND")
                            .gender("MALE")
                            .addHealthState(
                                EvacCreateBulkParams.Body.CasualtyInfo.HealthState.builder()
                                    .healthStateCode("BLUE")
                                    .medConfFactor(1)
                                    .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                    .type("COGNITIVE")
                                    .build()
                            )
                            .addInjury(
                                EvacCreateBulkParams.Body.CasualtyInfo.Injury.builder()
                                    .bodyPart("ARM LEFT FRONT")
                                    .comments("Comments on the patient's injury.")
                                    .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                    .type("ABRASION")
                                    .build()
                            )
                            .last4Ssn("1234")
                            .addMedication(
                                EvacCreateBulkParams.Body.CasualtyInfo.Medication.builder()
                                    .adminRoute("ORAL")
                                    .bodyPart("ARM LEFT BACK")
                                    .comments("Comments on the patient's medication information.")
                                    .dose("800mg")
                                    .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                    .type("TYLENOL")
                                    .build()
                            )
                            .name("John Smith")
                            .nationality("US")
                            .occSpeciality("Healthcare")
                            .patientIdentity("FRIEND CIVILIAN")
                            .patientStatus("US CIVILIAN")
                            .payGrade("CIVILIAN")
                            .priority("ROUTINE")
                            .reportGen("DEVICE")
                            .reportTime(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                            .service("CIV")
                            .addSpecMedEquip("OXYGEN")
                            .addSpecMedEquip("HOIST")
                            .addTreatment(
                                EvacCreateBulkParams.Body.CasualtyInfo.Treatment.builder()
                                    .bodyPart("CHEST")
                                    .comments("Comments on the treatment info.")
                                    .time(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                                    .type("BREATHING CHEST TUBE")
                                    .build()
                            )
                            .addVitalSignData(
                                EvacCreateBulkParams.Body.CasualtyInfo.VitalSignData.builder()
                                    .medConfFactor(1)
                                    .time(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                                    .vitalSign("HEART RATE")
                                    .vitalSign1(120.0)
                                    .vitalSign2(80.0)
                                    .build()
                            )
                            .build()
                    )
                    .ce(10.1234)
                    .cntctFreq(3.11)
                    .comments("Comments concerning mission")
                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .addEnemyData(
                        EvacCreateBulkParams.Body.EnemyData.builder()
                            .dirToEnemy("NORTH")
                            .friendliesRemarks("Comments from friendlies.")
                            .hlzRemarks("Remarks about hot landing zone.")
                            .hostileFireType("SMALL ARMS")
                            .build()
                    )
                    .idWeatherReport("WeatherReport-ID")
                    .le(5.1234)
                    .medevacId("MedEvac-ID")
                    .medicReq(true)
                    .missionType("GROUND")
                    .numAmbulatory(5)
                    .numCasualties(5)
                    .numKia(0)
                    .numLitter(0)
                    .numWia(3)
                    .obstaclesRemarks("N/A")
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("OPS1")
                    .pickupAlt(30.1234)
                    .pickupTime(OffsetDateTime.parse("2021-10-20T16:00:00.123Z"))
                    .reqCallSign("Bravo")
                    .reqNum("MED.1.223908")
                    .terrain("ROCKY")
                    .terrainRemarks("N/A")
                    .zoneContrCallSign("Tango")
                    .zoneHot(false)
                    .zoneMarking("ILLUMINATION")
                    .zoneMarkingColor("RED")
                    .zoneName("example-zone")
                    .zoneSecurity("NO ENEMY")
                    .build()
            )
    }

    @Test
    fun bodyWithoutOptionalFields() {
        val params =
            EvacCreateBulkParams.builder()
                .addBody(
                    EvacCreateBulkParams.Body.builder()
                        .classificationMarking("U")
                        .dataMode(EvacCreateBulkParams.Body.DataMode.TEST)
                        .pickupLat(75.1234)
                        .pickupLon(175.1234)
                        .reqTime(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                        .source("Bluestaq")
                        .type(EvacCreateBulkParams.Body.Type.REQUEST)
                        .build()
                )
                .build()

        val body = params._body()

        assertThat(body)
            .containsExactly(
                EvacCreateBulkParams.Body.builder()
                    .classificationMarking("U")
                    .dataMode(EvacCreateBulkParams.Body.DataMode.TEST)
                    .pickupLat(75.1234)
                    .pickupLon(175.1234)
                    .reqTime(OffsetDateTime.parse("2021-10-15T16:00:00.123Z"))
                    .source("Bluestaq")
                    .type(EvacCreateBulkParams.Body.Type.REQUEST)
                    .build()
            )
    }
}
