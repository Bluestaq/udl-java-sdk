// File generated from our OpenAPI spec by Stainless.

package com.unifieddatalibrary.api.models.elsets

import com.unifieddatalibrary.api.core.http.QueryParams
import java.time.OffsetDateTime
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class ElsetCreateBulkParamsTest {

    @Test
    fun create() {
        ElsetCreateBulkParams.builder()
            .dupeCheck(true)
            .addBody(
                ElsetIngest.builder()
                    .classificationMarking("U")
                    .dataMode(ElsetIngest.DataMode.TEST)
                    .epoch(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                    .source("Bluestaq")
                    .agom(0.0126)
                    .algorithm("Example algorithm")
                    .apogee(1.1)
                    .argOfPerigee(1.1)
                    .ballisticCoeff(0.00815)
                    .bStar(1.1)
                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .descriptor("Example description")
                    .eccentricity(0.333)
                    .ephemType(1L)
                    .idElset("ELSET-ID")
                    .idOnOrbit("ONORBIT-ID")
                    .idOrbitDetermination("026dd511-8ba5-47d3-9909-836149f87686")
                    .inclination(45.1)
                    .line1("Example line1")
                    .line2("Example line2")
                    .meanAnomaly(179.1)
                    .meanMotion(1.1)
                    .meanMotionDDot(1.1)
                    .meanMotionDot(1.1)
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("OPS1")
                    .origObjectId("ORIGOBJECT-ID")
                    .perigee(1.1)
                    .period(1.1)
                    .raan(1.1)
                    .rawFileUri("Example URI")
                    .revNo(111)
                    .satNo(12)
                    .semiMajorAxis(1.1)
                    .addSourcedData("OBSERVATION_UUID1")
                    .addSourcedData("OBSERVATION_UUID2")
                    .addSourcedDataType(ElsetIngest.SourcedDataType.RADAR)
                    .addSourcedDataType(ElsetIngest.SourcedDataType.RF)
                    .sourceDl("AXE")
                    .addTag("PROVIDER_TAG1")
                    .addTag("PROVIDER_TAG2")
                    .transactionId("TRANSACTION-ID")
                    .uct(false)
                    .build()
            )
            .build()
    }

    @Test
    fun queryParams() {
        val params =
            ElsetCreateBulkParams.builder()
                .dupeCheck(true)
                .addBody(
                    ElsetIngest.builder()
                        .classificationMarking("U")
                        .dataMode(ElsetIngest.DataMode.TEST)
                        .epoch(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                        .source("Bluestaq")
                        .agom(0.0126)
                        .algorithm("Example algorithm")
                        .apogee(1.1)
                        .argOfPerigee(1.1)
                        .ballisticCoeff(0.00815)
                        .bStar(1.1)
                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .createdBy("some.user")
                        .descriptor("Example description")
                        .eccentricity(0.333)
                        .ephemType(1L)
                        .idElset("ELSET-ID")
                        .idOnOrbit("ONORBIT-ID")
                        .idOrbitDetermination("026dd511-8ba5-47d3-9909-836149f87686")
                        .inclination(45.1)
                        .line1("Example line1")
                        .line2("Example line2")
                        .meanAnomaly(179.1)
                        .meanMotion(1.1)
                        .meanMotionDDot(1.1)
                        .meanMotionDot(1.1)
                        .origin("THIRD_PARTY_DATASOURCE")
                        .origNetwork("OPS1")
                        .origObjectId("ORIGOBJECT-ID")
                        .perigee(1.1)
                        .period(1.1)
                        .raan(1.1)
                        .rawFileUri("Example URI")
                        .revNo(111)
                        .satNo(12)
                        .semiMajorAxis(1.1)
                        .addSourcedData("OBSERVATION_UUID1")
                        .addSourcedData("OBSERVATION_UUID2")
                        .addSourcedDataType(ElsetIngest.SourcedDataType.RADAR)
                        .addSourcedDataType(ElsetIngest.SourcedDataType.RF)
                        .sourceDl("AXE")
                        .addTag("PROVIDER_TAG1")
                        .addTag("PROVIDER_TAG2")
                        .transactionId("TRANSACTION-ID")
                        .uct(false)
                        .build()
                )
                .build()

        val queryParams = params._queryParams()

        assertThat(queryParams).isEqualTo(QueryParams.builder().put("dupeCheck", "true").build())
    }

    @Test
    fun queryParamsWithoutOptionalFields() {
        val params =
            ElsetCreateBulkParams.builder()
                .addBody(
                    ElsetIngest.builder()
                        .classificationMarking("U")
                        .dataMode(ElsetIngest.DataMode.TEST)
                        .epoch(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                        .source("Bluestaq")
                        .build()
                )
                .build()

        val queryParams = params._queryParams()

        assertThat(queryParams).isEqualTo(QueryParams.builder().build())
    }

    @Test
    fun body() {
        val params =
            ElsetCreateBulkParams.builder()
                .dupeCheck(true)
                .addBody(
                    ElsetIngest.builder()
                        .classificationMarking("U")
                        .dataMode(ElsetIngest.DataMode.TEST)
                        .epoch(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                        .source("Bluestaq")
                        .agom(0.0126)
                        .algorithm("Example algorithm")
                        .apogee(1.1)
                        .argOfPerigee(1.1)
                        .ballisticCoeff(0.00815)
                        .bStar(1.1)
                        .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                        .createdBy("some.user")
                        .descriptor("Example description")
                        .eccentricity(0.333)
                        .ephemType(1L)
                        .idElset("ELSET-ID")
                        .idOnOrbit("ONORBIT-ID")
                        .idOrbitDetermination("026dd511-8ba5-47d3-9909-836149f87686")
                        .inclination(45.1)
                        .line1("Example line1")
                        .line2("Example line2")
                        .meanAnomaly(179.1)
                        .meanMotion(1.1)
                        .meanMotionDDot(1.1)
                        .meanMotionDot(1.1)
                        .origin("THIRD_PARTY_DATASOURCE")
                        .origNetwork("OPS1")
                        .origObjectId("ORIGOBJECT-ID")
                        .perigee(1.1)
                        .period(1.1)
                        .raan(1.1)
                        .rawFileUri("Example URI")
                        .revNo(111)
                        .satNo(12)
                        .semiMajorAxis(1.1)
                        .addSourcedData("OBSERVATION_UUID1")
                        .addSourcedData("OBSERVATION_UUID2")
                        .addSourcedDataType(ElsetIngest.SourcedDataType.RADAR)
                        .addSourcedDataType(ElsetIngest.SourcedDataType.RF)
                        .sourceDl("AXE")
                        .addTag("PROVIDER_TAG1")
                        .addTag("PROVIDER_TAG2")
                        .transactionId("TRANSACTION-ID")
                        .uct(false)
                        .build()
                )
                .build()

        val body = params._body()

        assertThat(body)
            .containsExactly(
                ElsetIngest.builder()
                    .classificationMarking("U")
                    .dataMode(ElsetIngest.DataMode.TEST)
                    .epoch(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                    .source("Bluestaq")
                    .agom(0.0126)
                    .algorithm("Example algorithm")
                    .apogee(1.1)
                    .argOfPerigee(1.1)
                    .ballisticCoeff(0.00815)
                    .bStar(1.1)
                    .createdAt(OffsetDateTime.parse("2018-01-01T16:00:00.123Z"))
                    .createdBy("some.user")
                    .descriptor("Example description")
                    .eccentricity(0.333)
                    .ephemType(1L)
                    .idElset("ELSET-ID")
                    .idOnOrbit("ONORBIT-ID")
                    .idOrbitDetermination("026dd511-8ba5-47d3-9909-836149f87686")
                    .inclination(45.1)
                    .line1("Example line1")
                    .line2("Example line2")
                    .meanAnomaly(179.1)
                    .meanMotion(1.1)
                    .meanMotionDDot(1.1)
                    .meanMotionDot(1.1)
                    .origin("THIRD_PARTY_DATASOURCE")
                    .origNetwork("OPS1")
                    .origObjectId("ORIGOBJECT-ID")
                    .perigee(1.1)
                    .period(1.1)
                    .raan(1.1)
                    .rawFileUri("Example URI")
                    .revNo(111)
                    .satNo(12)
                    .semiMajorAxis(1.1)
                    .addSourcedData("OBSERVATION_UUID1")
                    .addSourcedData("OBSERVATION_UUID2")
                    .addSourcedDataType(ElsetIngest.SourcedDataType.RADAR)
                    .addSourcedDataType(ElsetIngest.SourcedDataType.RF)
                    .sourceDl("AXE")
                    .addTag("PROVIDER_TAG1")
                    .addTag("PROVIDER_TAG2")
                    .transactionId("TRANSACTION-ID")
                    .uct(false)
                    .build()
            )
    }

    @Test
    fun bodyWithoutOptionalFields() {
        val params =
            ElsetCreateBulkParams.builder()
                .addBody(
                    ElsetIngest.builder()
                        .classificationMarking("U")
                        .dataMode(ElsetIngest.DataMode.TEST)
                        .epoch(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                        .source("Bluestaq")
                        .build()
                )
                .build()

        val body = params._body()

        assertThat(body)
            .containsExactly(
                ElsetIngest.builder()
                    .classificationMarking("U")
                    .dataMode(ElsetIngest.DataMode.TEST)
                    .epoch(OffsetDateTime.parse("2018-01-01T16:00:00.123456Z"))
                    .source("Bluestaq")
                    .build()
            )
    }
}
