// File generated from our OpenAPI spec by Stainless.

package com.unifieddatalibrary.api.models.crew

import com.fasterxml.jackson.module.kotlin.jacksonTypeRef
import com.unifieddatalibrary.api.core.jsonMapper
import java.time.OffsetDateTime
import kotlin.jvm.optionals.getOrNull
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class CrewAbridgedTest {

    @Test
    fun create() {
        val crewAbridged =
            CrewAbridged.builder()
                .classificationMarking("U")
                .dataMode(CrewAbridged.DataMode.TEST)
                .origCrewId("JHJDHjhuu929o92")
                .source("Bluestaq")
                .id("bdad6945-c9e4-b829-f7be-1ad075541921")
                .adjReturnTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                .adjReturnTimeApprover("Smith")
                .aircraftMds("C017A")
                .alertedTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                .alertType("ALPHA")
                .armsCrewUnit("00016ALSQ")
                .addAssignedQualCode("AL")
                .addAssignedQualCode("CS")
                .commanderId("763a1c1e8d2f3c16af825a11e3f1f579")
                .commanderLast4Ssn("1234")
                .commanderName("John Doe")
                .createdAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                .createdBy("some.user")
                .crewHome(false)
                .addCrewMember(
                    CrewAbridged.CrewMember.builder()
                        .alerted(true)
                        .allSortie(true)
                        .approved(true)
                        .attached(true)
                        .branch("Air Force")
                        .civilian(false)
                        .commander(false)
                        .crewPosition("EP A")
                        .dodId("0123456789")
                        .dutyPosition("IP")
                        .dutyStatus("AGR")
                        .emailed(true)
                        .extraTime(true)
                        .firstName("Freddie")
                        .fltCurrencyExp(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .fltCurrencyExpId("SS05AM")
                        .fltRecDate(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .fltRecDue(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .flySquadron("141ARS")
                        .funded(true)
                        .gender("F")
                        .gndCurrencyExp(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .gndCurrencyExpId("AH03YM")
                        .grounded(true)
                        .guestStart(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .guestStop(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .last4Ssn("1234")
                        .lastFltDate(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .lastName("Smith")
                        .loanedTo("Thunderbirds")
                        .lodging("Peterson SFB")
                        .memberActualAlertTime(OffsetDateTime.parse("2024-02-26T09:15:00.123Z"))
                        .memberAdjReturnTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .memberAdjReturnTimeApprover("Smith")
                        .memberId("12345678abc")
                        .memberInitStartTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .memberLastAlertTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .memberLegalAlertTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .memberPickupTime(OffsetDateTime.parse("2024-02-26T10:15:00.123Z"))
                        .memberPostRestOffset("+05:00")
                        .memberPostRestTime(OffsetDateTime.parse("2024-01-02T16:00:00.123Z"))
                        .memberPreRestTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .memberRemarks("Crew member remark")
                        .memberReturnTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .memberSchedAlertTime(OffsetDateTime.parse("2024-02-26T09:15:00.123Z"))
                        .memberSource("ACTIVE")
                        .memberStageName("Falcon Squadron")
                        .memberTransportReq(true)
                        .memberType("AIRCREW")
                        .middleInitial("G")
                        .notified(true)
                        .phoneNumber("+14155552671")
                        .physAvCode("D")
                        .physAvStatus("OVERDUE")
                        .physDue(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .rank("Capt")
                        .remarkCode("ABE33")
                        .rmsMds("C017A")
                        .showTime(OffsetDateTime.parse("2024-02-26T10:15:00.123Z"))
                        .squadron("21AS")
                        .trainingDate(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .username("fgsmith")
                        .wing("60AMW")
                        .build()
                )
                .crewName("falcon")
                .crewRms("ARMS")
                .crewRole("DEADHEAD")
                .crewSource("ACTIVE")
                .crewSquadron("21AS")
                .crewType("AIRLAND")
                .crewUnit("00016ALSQ")
                .crewWing("60AMW")
                .currentIcao("KCOS")
                .fdpEligType("A")
                .fdpType("A")
                .femaleEnlistedQty(2)
                .femaleOfficerQty(1)
                .fltAuthNum("KT001")
                .idSiteCurrent("b677cf3b-d44d-450e-8b8f-d23f997f8778")
                .idSortie("4ef3d1e8-ab08-ab70-498f-edc479734e5c")
                .initStartTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                .lastAlertTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                .legalAlertTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                .legalBravoTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                .linkedTask(false)
                .maleEnlistedQty(3)
                .maleOfficerQty(1)
                .missionAlias("PACIFIC DEPLOY / CHAP 3 MOVEMENT")
                .missionId("AJM123456123")
                .origin("THIRD_PARTY_DATASOURCE")
                .origNetwork("OPS1")
                .personnelType("AIRCREW")
                .pickupTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                .postRestApplied(false)
                .postRestEnd(OffsetDateTime.parse("2024-01-02T16:00:00.123Z"))
                .postRestOffset("+05:00")
                .preRestApplied(false)
                .preRestStart(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                .addReqQualCode("AL")
                .addReqQualCode("CS")
                .returnTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                .sourceDl("AXE")
                .stage1Qual("1AXXX")
                .stage2Qual("2AXXX")
                .stage3Qual("3AXXX")
                .stageName("Falcon Squadron")
                .stageTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                .status("APPROVED")
                .transportReq(true)
                .tripKit("TK-1234")
                .updatedAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                .updatedBy("some.user")
                .build()

        assertThat(crewAbridged.classificationMarking()).isEqualTo("U")
        assertThat(crewAbridged.dataMode()).isEqualTo(CrewAbridged.DataMode.TEST)
        assertThat(crewAbridged.origCrewId()).isEqualTo("JHJDHjhuu929o92")
        assertThat(crewAbridged.source()).isEqualTo("Bluestaq")
        assertThat(crewAbridged.id()).contains("bdad6945-c9e4-b829-f7be-1ad075541921")
        assertThat(crewAbridged.adjReturnTime())
            .contains(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
        assertThat(crewAbridged.adjReturnTimeApprover()).contains("Smith")
        assertThat(crewAbridged.aircraftMds()).contains("C017A")
        assertThat(crewAbridged.alertedTime())
            .contains(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
        assertThat(crewAbridged.alertType()).contains("ALPHA")
        assertThat(crewAbridged.armsCrewUnit()).contains("00016ALSQ")
        assertThat(crewAbridged.assignedQualCode().getOrNull()).containsExactly("AL", "CS")
        assertThat(crewAbridged.commanderId()).contains("763a1c1e8d2f3c16af825a11e3f1f579")
        assertThat(crewAbridged.commanderLast4Ssn()).contains("1234")
        assertThat(crewAbridged.commanderName()).contains("John Doe")
        assertThat(crewAbridged.createdAt())
            .contains(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
        assertThat(crewAbridged.createdBy()).contains("some.user")
        assertThat(crewAbridged.crewHome()).contains(false)
        assertThat(crewAbridged.crewMembers().getOrNull())
            .containsExactly(
                CrewAbridged.CrewMember.builder()
                    .alerted(true)
                    .allSortie(true)
                    .approved(true)
                    .attached(true)
                    .branch("Air Force")
                    .civilian(false)
                    .commander(false)
                    .crewPosition("EP A")
                    .dodId("0123456789")
                    .dutyPosition("IP")
                    .dutyStatus("AGR")
                    .emailed(true)
                    .extraTime(true)
                    .firstName("Freddie")
                    .fltCurrencyExp(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .fltCurrencyExpId("SS05AM")
                    .fltRecDate(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .fltRecDue(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .flySquadron("141ARS")
                    .funded(true)
                    .gender("F")
                    .gndCurrencyExp(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .gndCurrencyExpId("AH03YM")
                    .grounded(true)
                    .guestStart(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .guestStop(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .last4Ssn("1234")
                    .lastFltDate(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .lastName("Smith")
                    .loanedTo("Thunderbirds")
                    .lodging("Peterson SFB")
                    .memberActualAlertTime(OffsetDateTime.parse("2024-02-26T09:15:00.123Z"))
                    .memberAdjReturnTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .memberAdjReturnTimeApprover("Smith")
                    .memberId("12345678abc")
                    .memberInitStartTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .memberLastAlertTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .memberLegalAlertTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .memberPickupTime(OffsetDateTime.parse("2024-02-26T10:15:00.123Z"))
                    .memberPostRestOffset("+05:00")
                    .memberPostRestTime(OffsetDateTime.parse("2024-01-02T16:00:00.123Z"))
                    .memberPreRestTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .memberRemarks("Crew member remark")
                    .memberReturnTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .memberSchedAlertTime(OffsetDateTime.parse("2024-02-26T09:15:00.123Z"))
                    .memberSource("ACTIVE")
                    .memberStageName("Falcon Squadron")
                    .memberTransportReq(true)
                    .memberType("AIRCREW")
                    .middleInitial("G")
                    .notified(true)
                    .phoneNumber("+14155552671")
                    .physAvCode("D")
                    .physAvStatus("OVERDUE")
                    .physDue(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .rank("Capt")
                    .remarkCode("ABE33")
                    .rmsMds("C017A")
                    .showTime(OffsetDateTime.parse("2024-02-26T10:15:00.123Z"))
                    .squadron("21AS")
                    .trainingDate(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                    .username("fgsmith")
                    .wing("60AMW")
                    .build()
            )
        assertThat(crewAbridged.crewName()).contains("falcon")
        assertThat(crewAbridged.crewRms()).contains("ARMS")
        assertThat(crewAbridged.crewRole()).contains("DEADHEAD")
        assertThat(crewAbridged.crewSource()).contains("ACTIVE")
        assertThat(crewAbridged.crewSquadron()).contains("21AS")
        assertThat(crewAbridged.crewType()).contains("AIRLAND")
        assertThat(crewAbridged.crewUnit()).contains("00016ALSQ")
        assertThat(crewAbridged.crewWing()).contains("60AMW")
        assertThat(crewAbridged.currentIcao()).contains("KCOS")
        assertThat(crewAbridged.fdpEligType()).contains("A")
        assertThat(crewAbridged.fdpType()).contains("A")
        assertThat(crewAbridged.femaleEnlistedQty()).contains(2)
        assertThat(crewAbridged.femaleOfficerQty()).contains(1)
        assertThat(crewAbridged.fltAuthNum()).contains("KT001")
        assertThat(crewAbridged.idSiteCurrent()).contains("b677cf3b-d44d-450e-8b8f-d23f997f8778")
        assertThat(crewAbridged.idSortie()).contains("4ef3d1e8-ab08-ab70-498f-edc479734e5c")
        assertThat(crewAbridged.initStartTime())
            .contains(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
        assertThat(crewAbridged.lastAlertTime())
            .contains(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
        assertThat(crewAbridged.legalAlertTime())
            .contains(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
        assertThat(crewAbridged.legalBravoTime())
            .contains(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
        assertThat(crewAbridged.linkedTask()).contains(false)
        assertThat(crewAbridged.maleEnlistedQty()).contains(3)
        assertThat(crewAbridged.maleOfficerQty()).contains(1)
        assertThat(crewAbridged.missionAlias()).contains("PACIFIC DEPLOY / CHAP 3 MOVEMENT")
        assertThat(crewAbridged.missionId()).contains("AJM123456123")
        assertThat(crewAbridged.origin()).contains("THIRD_PARTY_DATASOURCE")
        assertThat(crewAbridged.origNetwork()).contains("OPS1")
        assertThat(crewAbridged.personnelType()).contains("AIRCREW")
        assertThat(crewAbridged.pickupTime())
            .contains(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
        assertThat(crewAbridged.postRestApplied()).contains(false)
        assertThat(crewAbridged.postRestEnd())
            .contains(OffsetDateTime.parse("2024-01-02T16:00:00.123Z"))
        assertThat(crewAbridged.postRestOffset()).contains("+05:00")
        assertThat(crewAbridged.preRestApplied()).contains(false)
        assertThat(crewAbridged.preRestStart())
            .contains(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
        assertThat(crewAbridged.reqQualCode().getOrNull()).containsExactly("AL", "CS")
        assertThat(crewAbridged.returnTime())
            .contains(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
        assertThat(crewAbridged.sourceDl()).contains("AXE")
        assertThat(crewAbridged.stage1Qual()).contains("1AXXX")
        assertThat(crewAbridged.stage2Qual()).contains("2AXXX")
        assertThat(crewAbridged.stage3Qual()).contains("3AXXX")
        assertThat(crewAbridged.stageName()).contains("Falcon Squadron")
        assertThat(crewAbridged.stageTime())
            .contains(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
        assertThat(crewAbridged.status()).contains("APPROVED")
        assertThat(crewAbridged.transportReq()).contains(true)
        assertThat(crewAbridged.tripKit()).contains("TK-1234")
        assertThat(crewAbridged.updatedAt())
            .contains(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
        assertThat(crewAbridged.updatedBy()).contains("some.user")
    }

    @Test
    fun roundtrip() {
        val jsonMapper = jsonMapper()
        val crewAbridged =
            CrewAbridged.builder()
                .classificationMarking("U")
                .dataMode(CrewAbridged.DataMode.TEST)
                .origCrewId("JHJDHjhuu929o92")
                .source("Bluestaq")
                .id("bdad6945-c9e4-b829-f7be-1ad075541921")
                .adjReturnTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                .adjReturnTimeApprover("Smith")
                .aircraftMds("C017A")
                .alertedTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                .alertType("ALPHA")
                .armsCrewUnit("00016ALSQ")
                .addAssignedQualCode("AL")
                .addAssignedQualCode("CS")
                .commanderId("763a1c1e8d2f3c16af825a11e3f1f579")
                .commanderLast4Ssn("1234")
                .commanderName("John Doe")
                .createdAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                .createdBy("some.user")
                .crewHome(false)
                .addCrewMember(
                    CrewAbridged.CrewMember.builder()
                        .alerted(true)
                        .allSortie(true)
                        .approved(true)
                        .attached(true)
                        .branch("Air Force")
                        .civilian(false)
                        .commander(false)
                        .crewPosition("EP A")
                        .dodId("0123456789")
                        .dutyPosition("IP")
                        .dutyStatus("AGR")
                        .emailed(true)
                        .extraTime(true)
                        .firstName("Freddie")
                        .fltCurrencyExp(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .fltCurrencyExpId("SS05AM")
                        .fltRecDate(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .fltRecDue(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .flySquadron("141ARS")
                        .funded(true)
                        .gender("F")
                        .gndCurrencyExp(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .gndCurrencyExpId("AH03YM")
                        .grounded(true)
                        .guestStart(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .guestStop(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .last4Ssn("1234")
                        .lastFltDate(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .lastName("Smith")
                        .loanedTo("Thunderbirds")
                        .lodging("Peterson SFB")
                        .memberActualAlertTime(OffsetDateTime.parse("2024-02-26T09:15:00.123Z"))
                        .memberAdjReturnTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .memberAdjReturnTimeApprover("Smith")
                        .memberId("12345678abc")
                        .memberInitStartTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .memberLastAlertTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .memberLegalAlertTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .memberPickupTime(OffsetDateTime.parse("2024-02-26T10:15:00.123Z"))
                        .memberPostRestOffset("+05:00")
                        .memberPostRestTime(OffsetDateTime.parse("2024-01-02T16:00:00.123Z"))
                        .memberPreRestTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .memberRemarks("Crew member remark")
                        .memberReturnTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .memberSchedAlertTime(OffsetDateTime.parse("2024-02-26T09:15:00.123Z"))
                        .memberSource("ACTIVE")
                        .memberStageName("Falcon Squadron")
                        .memberTransportReq(true)
                        .memberType("AIRCREW")
                        .middleInitial("G")
                        .notified(true)
                        .phoneNumber("+14155552671")
                        .physAvCode("D")
                        .physAvStatus("OVERDUE")
                        .physDue(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .rank("Capt")
                        .remarkCode("ABE33")
                        .rmsMds("C017A")
                        .showTime(OffsetDateTime.parse("2024-02-26T10:15:00.123Z"))
                        .squadron("21AS")
                        .trainingDate(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                        .username("fgsmith")
                        .wing("60AMW")
                        .build()
                )
                .crewName("falcon")
                .crewRms("ARMS")
                .crewRole("DEADHEAD")
                .crewSource("ACTIVE")
                .crewSquadron("21AS")
                .crewType("AIRLAND")
                .crewUnit("00016ALSQ")
                .crewWing("60AMW")
                .currentIcao("KCOS")
                .fdpEligType("A")
                .fdpType("A")
                .femaleEnlistedQty(2)
                .femaleOfficerQty(1)
                .fltAuthNum("KT001")
                .idSiteCurrent("b677cf3b-d44d-450e-8b8f-d23f997f8778")
                .idSortie("4ef3d1e8-ab08-ab70-498f-edc479734e5c")
                .initStartTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                .lastAlertTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                .legalAlertTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                .legalBravoTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                .linkedTask(false)
                .maleEnlistedQty(3)
                .maleOfficerQty(1)
                .missionAlias("PACIFIC DEPLOY / CHAP 3 MOVEMENT")
                .missionId("AJM123456123")
                .origin("THIRD_PARTY_DATASOURCE")
                .origNetwork("OPS1")
                .personnelType("AIRCREW")
                .pickupTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                .postRestApplied(false)
                .postRestEnd(OffsetDateTime.parse("2024-01-02T16:00:00.123Z"))
                .postRestOffset("+05:00")
                .preRestApplied(false)
                .preRestStart(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                .addReqQualCode("AL")
                .addReqQualCode("CS")
                .returnTime(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                .sourceDl("AXE")
                .stage1Qual("1AXXX")
                .stage2Qual("2AXXX")
                .stage3Qual("3AXXX")
                .stageName("Falcon Squadron")
                .stageTime(OffsetDateTime.parse("2024-01-01T16:00:00.123Z"))
                .status("APPROVED")
                .transportReq(true)
                .tripKit("TK-1234")
                .updatedAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
                .updatedBy("some.user")
                .build()

        val roundtrippedCrewAbridged =
            jsonMapper.readValue(
                jsonMapper.writeValueAsString(crewAbridged),
                jacksonTypeRef<CrewAbridged>(),
            )

        assertThat(roundtrippedCrewAbridged).isEqualTo(crewAbridged)
    }
}
