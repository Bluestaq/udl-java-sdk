// File generated from our OpenAPI spec by Stainless.

package com.unifieddatalibrary.api.models.trackroute

import com.unifieddatalibrary.api.models.trackroute.TrackRouteCreateBulkParams
import java.time.OffsetDateTime
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class TrackRouteCreateBulkParamsTest {

    @Test
    fun create() {
      TrackRouteCreateBulkParams.builder()
          .addBody(TrackRouteCreateBulkParams.Body.builder()
              .classificationMarking("U")
              .dataMode(TrackRouteCreateBulkParams.Body.DataMode.TEST)
              .lastUpdateDate(OffsetDateTime.parse("2024-09-17T16:00:00.123Z"))
              .source("Bluestaq")
              .type("AIR REFUELING")
              .id("026dd511-8ba5-47d3-9909-836149f87686")
              .addAltitudeBlock(TrackRouteCreateBulkParams.Body.AltitudeBlock.builder()
                  .altitudeSequenceId("A1")
                  .lowerAltitude(27000.1)
                  .upperAltitude(27200.5)
                  .build())
              .apnSetting("1-3-1")
              .apxBeaconCode("5/1")
              .artccMessage("OAKLAND CTR/GUAM CERAP")
              .createdAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
              .createdBy("some.user")
              .creatingOrg("HQPAC")
              .direction("NE")
              .effectiveDate(OffsetDateTime.parse("2024-09-17T16:00:00.123Z"))
              .externalId("GDSSMH121004232315303094")
              .lastUsedDate(OffsetDateTime.parse("2024-09-17T16:00:00.123Z"))
              .locationTrackId("POACHR")
              .origin("THIRD_PARTY_DATASOURCE")
              .origNetwork("OPS1")
              .addPoc(TrackRouteCreateBulkParams.Body.Poc.builder()
                  .office("A34")
                  .phone("8675309")
                  .pocName("Fred Smith")
                  .pocOrg("HQAF")
                  .pocSequenceId(1)
                  .pocTypeName("Originator")
                  .rank("Capt")
                  .remark("POC remark.")
                  .username("fgsmith")
                  .build())
              .priFreq(357.5)
              .receiverTankerChCode("31/094")
              .regionCode("5")
              .regionName("North America")
              .reviewDate(OffsetDateTime.parse("2024-09-16T16:00:00.123Z"))
              .addRoutePoint(TrackRouteCreateBulkParams.Body.RoutePoint.builder()
                  .altCountryCode("IZ")
                  .countryCode("NL")
                  .dafifPt(true)
                  .magDec(7.35)
                  .navaid("HTO")
                  .navaidLength(100.2)
                  .navaidType("VORTAC")
                  .ptLat(45.23)
                  .ptLon(179.1)
                  .ptSequenceId(1)
                  .ptTypeCode("EP")
                  .ptTypeName("ENTRY POINT")
                  .waypointName("KCHS")
                  .build())
              .schedulerOrgName("97 OSS/OSOS DSN 866-5555")
              .schedulerOrgUnit("612 AOC")
              .secFreq(319.7)
              .shortName("CH61")
              .sic("N")
              .sourceDl("AXE")
              .trackId("CH61A")
              .trackName("CH61 POST")
              .typeCode("V")
              .updatedAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
              .updatedBy("some.user")
              .build())
          .build()
    }

    @Test
    fun body() {
      val params = TrackRouteCreateBulkParams.builder()
          .addBody(TrackRouteCreateBulkParams.Body.builder()
              .classificationMarking("U")
              .dataMode(TrackRouteCreateBulkParams.Body.DataMode.TEST)
              .lastUpdateDate(OffsetDateTime.parse("2024-09-17T16:00:00.123Z"))
              .source("Bluestaq")
              .type("AIR REFUELING")
              .id("026dd511-8ba5-47d3-9909-836149f87686")
              .addAltitudeBlock(TrackRouteCreateBulkParams.Body.AltitudeBlock.builder()
                  .altitudeSequenceId("A1")
                  .lowerAltitude(27000.1)
                  .upperAltitude(27200.5)
                  .build())
              .apnSetting("1-3-1")
              .apxBeaconCode("5/1")
              .artccMessage("OAKLAND CTR/GUAM CERAP")
              .createdAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
              .createdBy("some.user")
              .creatingOrg("HQPAC")
              .direction("NE")
              .effectiveDate(OffsetDateTime.parse("2024-09-17T16:00:00.123Z"))
              .externalId("GDSSMH121004232315303094")
              .lastUsedDate(OffsetDateTime.parse("2024-09-17T16:00:00.123Z"))
              .locationTrackId("POACHR")
              .origin("THIRD_PARTY_DATASOURCE")
              .origNetwork("OPS1")
              .addPoc(TrackRouteCreateBulkParams.Body.Poc.builder()
                  .office("A34")
                  .phone("8675309")
                  .pocName("Fred Smith")
                  .pocOrg("HQAF")
                  .pocSequenceId(1)
                  .pocTypeName("Originator")
                  .rank("Capt")
                  .remark("POC remark.")
                  .username("fgsmith")
                  .build())
              .priFreq(357.5)
              .receiverTankerChCode("31/094")
              .regionCode("5")
              .regionName("North America")
              .reviewDate(OffsetDateTime.parse("2024-09-16T16:00:00.123Z"))
              .addRoutePoint(TrackRouteCreateBulkParams.Body.RoutePoint.builder()
                  .altCountryCode("IZ")
                  .countryCode("NL")
                  .dafifPt(true)
                  .magDec(7.35)
                  .navaid("HTO")
                  .navaidLength(100.2)
                  .navaidType("VORTAC")
                  .ptLat(45.23)
                  .ptLon(179.1)
                  .ptSequenceId(1)
                  .ptTypeCode("EP")
                  .ptTypeName("ENTRY POINT")
                  .waypointName("KCHS")
                  .build())
              .schedulerOrgName("97 OSS/OSOS DSN 866-5555")
              .schedulerOrgUnit("612 AOC")
              .secFreq(319.7)
              .shortName("CH61")
              .sic("N")
              .sourceDl("AXE")
              .trackId("CH61A")
              .trackName("CH61 POST")
              .typeCode("V")
              .updatedAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
              .updatedBy("some.user")
              .build())
          .build()

      val body = params._body()

      assertThat(body).containsExactly(TrackRouteCreateBulkParams.Body.builder()
          .classificationMarking("U")
          .dataMode(TrackRouteCreateBulkParams.Body.DataMode.TEST)
          .lastUpdateDate(OffsetDateTime.parse("2024-09-17T16:00:00.123Z"))
          .source("Bluestaq")
          .type("AIR REFUELING")
          .id("026dd511-8ba5-47d3-9909-836149f87686")
          .addAltitudeBlock(TrackRouteCreateBulkParams.Body.AltitudeBlock.builder()
              .altitudeSequenceId("A1")
              .lowerAltitude(27000.1)
              .upperAltitude(27200.5)
              .build())
          .apnSetting("1-3-1")
          .apxBeaconCode("5/1")
          .artccMessage("OAKLAND CTR/GUAM CERAP")
          .createdAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
          .createdBy("some.user")
          .creatingOrg("HQPAC")
          .direction("NE")
          .effectiveDate(OffsetDateTime.parse("2024-09-17T16:00:00.123Z"))
          .externalId("GDSSMH121004232315303094")
          .lastUsedDate(OffsetDateTime.parse("2024-09-17T16:00:00.123Z"))
          .locationTrackId("POACHR")
          .origin("THIRD_PARTY_DATASOURCE")
          .origNetwork("OPS1")
          .addPoc(TrackRouteCreateBulkParams.Body.Poc.builder()
              .office("A34")
              .phone("8675309")
              .pocName("Fred Smith")
              .pocOrg("HQAF")
              .pocSequenceId(1)
              .pocTypeName("Originator")
              .rank("Capt")
              .remark("POC remark.")
              .username("fgsmith")
              .build())
          .priFreq(357.5)
          .receiverTankerChCode("31/094")
          .regionCode("5")
          .regionName("North America")
          .reviewDate(OffsetDateTime.parse("2024-09-16T16:00:00.123Z"))
          .addRoutePoint(TrackRouteCreateBulkParams.Body.RoutePoint.builder()
              .altCountryCode("IZ")
              .countryCode("NL")
              .dafifPt(true)
              .magDec(7.35)
              .navaid("HTO")
              .navaidLength(100.2)
              .navaidType("VORTAC")
              .ptLat(45.23)
              .ptLon(179.1)
              .ptSequenceId(1)
              .ptTypeCode("EP")
              .ptTypeName("ENTRY POINT")
              .waypointName("KCHS")
              .build())
          .schedulerOrgName("97 OSS/OSOS DSN 866-5555")
          .schedulerOrgUnit("612 AOC")
          .secFreq(319.7)
          .shortName("CH61")
          .sic("N")
          .sourceDl("AXE")
          .trackId("CH61A")
          .trackName("CH61 POST")
          .typeCode("V")
          .updatedAt(OffsetDateTime.parse("2022-01-01T16:00:00.123Z"))
          .updatedBy("some.user")
          .build())
    }

    @Test
    fun bodyWithoutOptionalFields() {
      val params = TrackRouteCreateBulkParams.builder()
          .addBody(TrackRouteCreateBulkParams.Body.builder()
              .classificationMarking("U")
              .dataMode(TrackRouteCreateBulkParams.Body.DataMode.TEST)
              .lastUpdateDate(OffsetDateTime.parse("2024-09-17T16:00:00.123Z"))
              .source("Bluestaq")
              .type("AIR REFUELING")
              .build())
          .build()

      val body = params._body()

      assertThat(body).containsExactly(TrackRouteCreateBulkParams.Body.builder()
          .classificationMarking("U")
          .dataMode(TrackRouteCreateBulkParams.Body.DataMode.TEST)
          .lastUpdateDate(OffsetDateTime.parse("2024-09-17T16:00:00.123Z"))
          .source("Bluestaq")
          .type("AIR REFUELING")
          .build())
    }
}
